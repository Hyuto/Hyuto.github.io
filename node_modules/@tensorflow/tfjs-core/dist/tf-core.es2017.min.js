/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).tf=e.tf||{})}(this,(function(e){"use strict";class t{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(t instanceof Promise)throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}(this.global.location.search);if("tfjsflags"in e){e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}}function n(){return e.ENV}let r;function o(){if(null==r){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function s(e,t){const n=function(){const e=o();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}e.ENV=null;const a=s("kernelRegistry",()=>new Map),i=s("gradRegistry",()=>new Map);function u(e,t){const n=p(e,t);return a.get(n)}function l(e){return i.get(e)}function c(e){const t=a.entries(),n=[];for(;;){const{done:r,value:o}=t.next();if(r)break;const[s,a]=o,[i]=s.split("_");i===e&&n.push(a)}return n}function h(e){const{kernelName:t}=e;i.has(t)&&n().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),i.set(t,e)}function p(e,t){return`${t}_${e}`}function d(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function f(e,t,n){return Math.max(e,Math.min(t,n))}function m(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function g(e,t,n=""){m(k(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function b(e){m(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function y(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||M(e)&&!n)for(let r=0;r<e.length;++r)y(e[r],t,n);else t.push(e);return t}function w(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function k(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function v(e){return e%1==0}function x(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const o=e.slice();return o[r]=t/n,o}function E(e,t){const n=t.length;return m((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e),m(e.every(e=>v(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function D(e,t){const n=[],r=[],o=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||o?null:E(t,e).sort();let a=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[a]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[a]||s[a]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[a]<=t&&a++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function N(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function I(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function F(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function A(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function T(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function M(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function $(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function _(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function B(e){return"string"==typeof e||e instanceof String}function R(e){return"boolean"==typeof e}function C(e){return"number"==typeof e}function P(e){return Array.isArray(e)?P(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":C(e)?"float32":B(e)?"string":R(e)?"bool":"float32"}function z(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function q(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function O(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=y(e)),n().getBool("DEBUG")&&F(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function W(e,t){if(0===e.length)return t[0];const n=e.reduce((e,t)=>e*t);if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return function e(t,n,r){const o=new Array;if(1===n.length){const e=n[0];for(let n=0;n<e;n++)o[n]=r[t+n]}else{const s=n[0],a=n.slice(1),i=a.reduce((e,t)=>e*t);for(let n=0;n<s;n++)o[n]=e(t+n*i,a,r)}return o}(0,e,t)}function K(e,t){const n=G(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function G(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function U(){return n().platform.now()}function V(e){e.forEach(t=>{m(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function H(e,t="utf-8"){return t=t||"utf-8",n().platform.encode(e,t)}function j(e,t="utf-8"){return t=t||"utf-8",n().platform.decode(e,t)}var J=Object.freeze({__proto__:null,shuffle:d,clamp:f,nearestLargerEven:function(e){return e%2==0?e:e+1},sum:function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t},randUniform:function(e,t){const n=Math.random();return t*n+(1-n)*e},distSquared:function(e,t){let n=0;for(let r=0;r<e.length;r++){const o=Number(e[r])-Number(t[r]);n+=o*o}return n},assert:m,assertShapesMatch:g,assertNonNull:b,flatten:y,sizeFromShape:w,isScalarShape:function(e){return 0===e.length},arraysEqual:k,isInt:v,tanh:function(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}},sizeToSquarishShape:function(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]},createShuffledIndices:function(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return d(t),t},rightPad:x,repeatedTry:function(e,t=(e=>0),n){return new Promise((r,o)=>{let s=0;const a=()=>{if(e())return void r();s++;const i=t(s);null!=n&&s>=n?o():setTimeout(a,i)};a()})},inferFromImplicitShape:S,parseAxisParam:E,squeezeShape:D,getTypedArrayFromDType:N,getArrayFromDType:I,checkConversionForErrors:F,isValidDtype:A,hasEncodingLoss:T,isTypedArray:M,bytesPerElement:$,bytesFromStringArray:_,isString:B,isBoolean:R,isNumber:C,inferDtype:P,isFunction:z,nearestDivisor:L,computeStrides:q,toTypedArray:O,toNestedArray:W,makeOnesTypedArray:K,makeZerosTypedArray:G,makeZerosNestedTypedArray:function(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return W(e,new Float32Array(n));if("int32"===t)return W(e,new Int32Array(n));if("bool"===t)return W(e,new Uint8Array(n));throw new Error("Unknown data type "+t)},now:U,assertNonNegativeIntegerDimensions:V,fetch:function(e,t){return n().platform.fetch(e,t)},encodeString:H,decodeString:j,locToIndex:function(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r},indexToLoc:function(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}});class Y{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Z)}profileKernel(e,t,n){let r;const o=this.backendTimer.time(()=>{r=n()});return r.map(t=>{t.data().then(n=>{!function(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}}(n,t.dtype,e)})}),{kernelName:e,outputs:r,inputs:t,timeMs:o.then(e=>e.kernelMs),extraInfo:o.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:o,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],o,n[2])})})}}class Z{logKernelProfile(e,t,n,r,o,s){const a="number"==typeof r?x(r+"ms",9):r.error,i=x(e,25),u=t.rank,l=t.size,c=x(t.shape.toString(),14);let h="";for(const e in o){const n=o[e];if(null!=n){const r=n.shape||t.shape,o=r.length;h+=`${e}: ${o}D ${o>0?r:""} `}}console.log(`%c${i}\t%c${a}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function X(e,t,n,r){const o=q(t),s=function(e,t,n,r){const o=w(t),s=r[r.length-1],a=new Array(s).fill(0),i=t.length,u="complex64"===n?te(e):e;if(i>1)for(let e=0;e<o/s;e++){const t=e*s;for(let e=0;e<s;e++)a[e]=Math.max(a[e],Q(u[t+e],0,n).length)}return a}(e,t,n,o),a=t.length,i=function e(t,n,r,o,s,a=!0){const i="complex64"===r?2:1,u=n[0],l=n.length;if(0===l){if("complex64"===r){return[Q(te(t)[0],0,r)]}return"bool"===r?[ee(t[0])]:[t[0].toString()]}if(1===l){if(u>20){const e=3*i;let n=Array.from(t.slice(0,e)),o=Array.from(t.slice((u-3)*i,u*i));return"complex64"===r&&(n=te(n),o=te(o)),["["+n.map((e,t)=>Q(e,s[t],r)).join(", ")+", ..., "+o.map((e,t)=>Q(e,s[u-3+t],r)).join(", ")+"]"]}return["["+("complex64"===r?te(t):Array.from(t)).map((e,t)=>Q(e,s[t],r)).join(", ")+"]"]}const c=n.slice(1),h=o.slice(1),p=o[0]*i,d=[];if(u>20){for(let n=0;n<3;n++){const o=n*p,a=o+p;d.push(...e(t.slice(o,a),c,r,h,s,!1))}d.push("...");for(let n=u-3;n<u;n++){const o=n*p,a=o+p;d.push(...e(t.slice(o,a),c,r,h,s,n===u-1))}}else for(let n=0;n<u;n++){const o=n*p,a=o+p;d.push(...e(t.slice(o,a),c,r,h,s,n===u-1))}const f=2===l?",":"";d[0]="["+d[0]+f;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+f;let m=",\n";for(let e=2;e<l;e++)m+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":m),d}(e,t,n,o,s),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+a),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map(e=>"    "+e).join("\n")),u.join("\n")}function Q(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":B(e)?`'${e}'`:"bool"===n?ee(e):parseFloat(e.toFixed(7)).toString(),x(r,t)}function ee(e){return 0===e?"false":"true"}function te(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class ne{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=w(e),null!=n){const e=n.length;m(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||I(t,this.size),this.strides=q(e)}set(e,...t){0===t.length&&(t=[0]),m(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return re().makeTensor(this.values,this.shape,this.dtype)}}let re=null,oe=null;class se{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=w(e),this.strides=q(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return oe.buffer(this.shape,this.dtype,e)}bufferSync(){return oe.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return W(this.shape,e)}arraySync(){return W(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=re().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>j(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=re().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>j(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await re().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(re().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return oe.print(this,e)}clone(){return this.throwIfDisposed(),oe.clone(this)}toString(e=!1){return X(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),oe.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),re().makeVariable(this,e,t,n)}}Object.defineProperty(se,Symbol.hasInstance,{value:e=>!!e&&null!=e.dataId&&null!=e.shape&&null!=e.dtype});class ae extends se{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!k(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);re().disposeTensor(this),this.dataId=e.dataId,re().incRef(this,null)}dispose(){re().disposeVariable(this),this.isDisposedInternal=!0}}var ie,ue,le,ce,he;Object.defineProperty(ae,Symbol.hasInstance,{value:e=>e instanceof se&&null!=e.assign&&e.assign instanceof Function}),(ie=e.Rank||(e.Rank={})).R0="R0",ie.R1="R1",ie.R2="R2",ie.R3="R3",ie.R4="R4",ie.R5="R5",ie.R6="R6",function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ue||(ue={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(le||(le={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ce||(ce={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(he||(he={}));const pe={float32:ce,int32:ue,bool:le,complex64:he};function de(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return pe[e][t]}function fe(e,t){if(e.dtype===t.dtype)return[e,t];const n=de(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function me(e,t){m(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function ge(e){const t=[];return function e(t,n,r){if(null==t)return;if(t instanceof se)return void n.push(t);if(o=t,!Array.isArray(o)&&"object"!=typeof o)return;var o;const s=t;for(const t in s){const o=s[t];r.has(o)||(r.add(o),e(o,n,r))}}(e,t,new Set),t}var be=Object.freeze({__proto__:null,makeTypesMatch:fe,assertTypesMatch:me,isTensorInList:function(e,t){return t.some(t=>t.id===e.id)},getTensorsInContainer:ge});class ye{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class we{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ye}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Y(this.backendInstance),!0}setupRegisteredKernels(){c(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){c(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(Promise.resolve(n)===n){const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:o}=this.initializeBackend(n);if(o||r)return{name:n,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,o=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,o,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return we.nextTensorId++}nextVariableId(){return we.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{const t={x:e},n={dtype:"float32"};return ke.runKernelFunc(t=>t.cast(e,"float32"),t,null,"Cast",n)}}),[],{}),t}runKernel(e,t,n,r,o){return this.runKernelFunc(null,t,null,e,n,r,o)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let o=0;n.forEach(e=>{o+="complex64"===e.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-o-s;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e,t,n,r,o,s,a){let i,l=[];const c=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const h=this.state.numBytes,p=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const f=u(r,this.backendName);let m,g;if(null!=f)d=()=>{const e=this.backend.numDataIds();m=f.kernelFunc({inputs:t,attrs:o,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,n);const i=n.map(({dataId:e,shape:t,dtype:n})=>this.makeTensorFromDataId(e,t,n));if(c){let e=this.getTensorsForGradient(r,t,i);if(null==e){null==a&&(a=[]);const t=i.filter((e,t)=>a[t]);e=(s||[]).slice().concat(t)}l=this.saveTensorsForBackwardMode(e)}return i};else{const t=e=>{c&&(l=e.map(e=>this.keep(this.clone(e))))};d=()=>{const n=this.backend.numDataIds();m=this.tidy(()=>e(this.backend,t));const o=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,o),o}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(g=this.profiler.profileKernel(r,t,()=>d()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),i=g.outputs):i=d()}),c&&this.addTapeNode(r,t,i,n,l,o),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-h,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-p,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map(e=>null!=t[e]?t[e].shape:null),outputShapes:i.map(e=>e.shape),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(m)?i:i[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=l(e);if(null!=r){const e=r.inputsToSave||[],o=r.outputsToSave||[];let s;r.saveAllInputs?(m(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(t).map(e=>t[e])):s=e.map(e=>t[e]);const a=n.filter((e,t)=>o[t]);return s.concat(a)}return null}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let o=e;"string"===n&&B(e[0])&&(o=e.map(e=>H(e)));const s=r.write(o,t,n),a=new se(t,n,s,this.nextTensorId());if(this.incRef(a,r),"string"===n){const e=this.state.tensorInfo.get(s),t=_(o);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,r){const o=new se(t,n=n||"float32",e,this.nextTensorId());return this.incRef(o,r),o}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const o=new ae(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[o.name])throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*$(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof ae||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,o,s){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:o},i=l(e);null!=i&&(r=i.gradFunc),null!=r&&(a.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=G(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],o,s))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ge(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(m(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));m(o instanceof se,()=>"The result y returned by f() must be a tensor.");const s=function(e,t,n){const r={},o={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],a=s.inputs;for(const e in a){const n=a[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach(e=>r[e.id]=!0),i=!0,o[s.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const a={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,a[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(o[n.id]&&a[n.id]){const e={};for(const t in n.inputs){const o=n.inputs[t];r[o.id]&&(e[t]=o)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,o);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[o.id]=null==n?function(e){const t=K(w(e),"float32");return ke.makeTensor(t,e,"float32")}(o.shape):n,function(e,t,n,r){for(let o=t.length-1;o>=0;o--){const s=t[o],a=[];if(s.outputs.forEach(t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(a);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const o=n(()=>i[t]());if("float32"!==o.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${o.dtype}'`);const a=s.inputs[t];if(!k(o.shape,a.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${o.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=o;else{const t=e[a.id];e[a.id]=r(t,o),t.dispose()}}}}(e,s,e=>this.tidy(e),ve);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:o,grads:r}})}customGrad(e){return m(z(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;m(t.every(e=>e instanceof se),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc((r,o)=>(n=e(...t,o),m(n.value instanceof se,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),m(z(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),r,(e,r)=>{const o=n.gradFunc(e,r),s=Array.isArray(o)?o:[o];m(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),m(s.every(e=>e instanceof se),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const a={};return s.forEach((e,t)=>{a[t]=()=>e}),a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=U(),n=await this.backend.time(e);return n.wallMs=U()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ye;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}we.nextTensorId=0,we.nextVariableId=0;const ke=function(){const n=o();if(null==n._tfengine){const e=new t(n);n._tfengine=new we(e)}var r;return r=n._tfengine.ENV,e.ENV=r,re=()=>n._tfengine,n._tfengine}();function ve(e,t){const n={a:e,b:t};return ke.runKernelFunc((n,r)=>{const o=n.add(e,t);return r([e,t]),o},n,null,"Add")}function xe(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var Se=Object.freeze({__proto__:null,isMobile:function(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1},isBrowser:xe});const Ee=n();Ee.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Ee.registerFlag("IS_BROWSER",()=>xe()),Ee.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),Ee.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Ee.registerFlag("PROD",()=>!1),Ee.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ee.getBool("DEBUG")),Ee.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Ee.registerFlag("IS_TEST",()=>!1);class De{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}n().get("IS_BROWSER")&&n().setPlatform("browser",new De);const Ne=()=>require("node-fetch");let Ie;class Fe{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=n().global.fetch?n().global.fetch(e,t):(null==Ie&&(Ie=Ne()),Ie(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}function Ae(e,t){let r=e;if(M(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const o=[];for(;Array.isArray(r)||M(r)&&"string"!==t;)o.push(r.length),r=r[0];return Array.isArray(e)&&n().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],!Array.isArray(t)&&!M(t))return void m(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);m(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${t.length} elements`),m(t.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${t.length} elements`);const o=n.slice(1);for(let n=0;n<t.length;++n)e(t[n],o,r.concat(n))}(e,o,[]),o}function Te(e,t,n,r){if(null!=e&&("numeric"!==e&&e!==t||"numeric"===e&&"string"===t))throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}function Me(e,t,n,r="numeric"){if(e instanceof se)return Te(r,e.dtype,t,n),e;let o=P(e);if("string"!==o&&["bool","int32","float32"].indexOf(r)>=0&&(o=r),Te(r,o,t,n),null==e||!M(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=Ae(e,o);M(e)||Array.isArray(e)||(e=[e]);const a="string"!==o?O(e,o):y(e,[],!0);return ke.makeTensor(a,s,o)}function $e(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,r)=>Me(e,`${t}[${r}]`,n),r)}function _e(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));const o=(...e)=>{ke.startScope(n);try{const t=r(...e);return t instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),ke.endScope(t),t}catch(e){throw ke.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}n().get("IS_NODE")&&n().setPlatform("node",new Fe);const Be=_e({abs_:function(e){const t=Me(e,"x","abs"),n={x:t};return ke.runKernelFunc((e,n)=>(n([t]),"complex64"===t.dtype?e.complexAbs(t):e.abs(t)),n,null,"Abs")}});const Re=_e({acos_:function(e){const t=Me(e,"x","acos"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.acos(t);return n([t]),r},n,null,"Acos")}});const Ce=_e({acosh_:function(e){const t=Me(e,"x","acosh"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.acosh(t);return n([t]),r},n,null,"Acosh")}});const Pe=_e({add_:function(e,t){let n=Me(e,"a","add"),r=Me(t,"b","add");[n,r]=fe(n,r);const o={a:n,b:r};return ke.runKernelFunc((e,t)=>{const o=e.add(n,r);return t([n,r]),o},o,null,"Add")}});const ze=_e({addN_:function(e){m(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),m(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);const t=e.map((e,t)=>Me(e,"tensors"+t,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!k(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return ke.runKernelFunc((e,n)=>{const r=e.addN(t);return n(t),r},r,null,"AddN")}});function Le(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function qe(e,t,n){const r=e.length+t.length,o=[];let s=0,a=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?o.push(e[s++]):o.push(t[a++]);return o}function Oe(e,t){const n=[],r=e.length;for(let o=0;o<r;o++)-1===t.indexOf(o)&&n.push(e[o]);return[n,t.map(t=>e[t])]}function We(e,t){return qe(e,t.map(e=>1),t)}function Ke(e,t){if(Le(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function Ge(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Ue(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Ve=_e({reshape_:function(e,t){const n=Me(e,"x","reshape",null);t=S(t,n.size),m(n.size===w(t),()=>"new shape and old shape must have the same number of elements.");const r={x:n},o={shape:t};return ke.runKernelFunc((e,r)=>(r([n]),e.reshape(n,t)),r,null,"Reshape",o)}});const He=_e({transpose_:function(e,t){const n=Me(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),m(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{m(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t)}),n.rank<=1)return n.clone();const r={x:n},o={perm:t};return ke.runKernelFunc(e=>e.transpose(n,t),r,null,"Transpose",o)}});const je=_e({all_:function(e,t=null,n=!1){let r=Me(e,"x","all","bool");const o={x:r},s={axis:t,keepDims:n};return ke.runKernelFunc(e=>{const o=E(t,r.shape);let s=o;const a=Ke(s,r.rank);null!=a&&(r=He(r,a),s=Ue(s.length,r.rank));const i=e.all(r,s);if(n){const e=We(i.shape,o);return Ve(i,e)}return i},o,null,"All",s)}});const Je=_e({any_:function(e,t=null,n=!1){let r=Me(e,"x","any","bool");const o={x:r},s={axis:t,keepDims:n};return ke.runKernelFunc(e=>{const o=E(t,r.shape);let s=o;const a=Ke(s,r.rank);null!=a&&(r=He(r,a),s=Ue(s.length,r.rank));const i=e.any(r,s);if(n){const e=We(i.shape,o);return Ve(i,e)}return i},o,null,"Any",s)}});const Ye=_e({argMax_:function(e,t=0){let n=Me(e,"x","argMax");const r={x:n},o={axis:t};return ke.runKernelFunc((e,r)=>{r([n]);let o=E(t,n.shape);const s=Ke(o,n.rank);return null!=s&&(n=He(n,s),o=Ue(o.length,n.rank)),e.argMax(n,o[0])},r,null,"ArgMax",o)}});const Ze=_e({argMin_:function(e,t=0){let n=Me(e,"x","argMin");const r={x:n},o={axis:t};return ke.runKernelFunc((e,r)=>{r([n]),null==t&&(t=0);let o=E(t,n.shape);const s=Ke(o,n.rank);return null!=s&&(n=He(n,s),o=Ue(o.length,n.rank)),e.argMin(n,o[0])},r,null,"ArgMin",o)}});const Xe=_e({asin_:function(e){const t=Me(e,"x","asin"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.asin(t);return n([t]),r},n,null,"Asin")}});const Qe=_e({asinh_:function(e){const t=Me(e,"x","asinh"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.asinh(t);return n([t]),r},n,null,"Asinh")}});const et=_e({atan_:function(e){const t=Me(e,"x","atan"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.atan(t);return n([t]),r},n,null,"Atan")}});const tt=_e({atan2_:function(e,t){let n=Me(e,"a","atan2"),r=Me(t,"b","atan2");[n,r]=fe(n,r);const o={a:n,b:r};return ke.runKernelFunc((e,t)=>{const o=e.atan2(n,r);return t([n,r]),o},o,null,"Atan2")}});const nt=_e({atanh_:function(e){const t=Me(e,"x","atanh"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.atanh(t);return n([t]),r},n,null,"Atanh")}});const rt=_e({cast_:function(e,t){const n=Me(e,"x","cast");if(!A(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},o={dtype:t};return ke.runKernelFunc(e=>e.cast(n,t),r,null,"Cast",o)}});function ot(e,t,n,r,o,s,a="channelsLast"){const[i,u]=lt(t);let l;if("channelsLast"===a)l=[i,u,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error("Unknown dataFormat "+a);l=[i,u,e[1],e[1]]}return at(e,l,n,r,o,s,!1,a)}function st(e,t,n,r,o,s,a="NDHWC"){const[i,u,l]=ct(t);let c,h;if("NDHWC"===a)h="channelsLast",c=[i,u,l,e[4],e[4]];else{if("NCDHW"!==a)throw new Error("Unknown dataFormat "+a);h="channelsFirst",c=[i,u,l,e[1],e[1]]}return it(e,c,n,r,o,!1,h,s)}function at(e,t,n,r,o,s,a=!1,i="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,h,l,c]=e}const[p,d,,f]=t,[g,b]=lt(n),[y,w]=lt(r),k=ht(p,y),x=ht(d,w),{padInfo:S,outHeight:E,outWidth:D}=function(e,t,n,r,o,s,a,i,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const o=function(e,t,n,r,o){null==r&&(r=ut(e,t,n));const s=e[0],a=e[1],i=pt((s-t+2*r)/n+1,o);m(v(i),()=>`The output # of rows (${i}) must be an integer. Change the stride and/or zero pad parameters`);const u=pt((a-t+2*r)/n+1,o);return m(v(u),()=>`The output # of columns (${u}) must be an integer. Change the stride and/or zero pad parameters`),[i,u]}([t,n],s,r,e,i);c=o[0],h=o[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/o);const e=Math.max(0,(c-1)*r+s-t),i=Math.max(0,(h-1)*o+a-n),u=Math.floor(e/2),p=e-u,d=Math.floor(i/2);l={top:u,bottom:p,left:d,right:i-d,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),h=Math.ceil((n-a+1)/o);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{const p="channelsLast"===u?e[1][0]:e[2][0],d="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=pt((t-s+p+d)/r+1,i),h=pt((n-a+f+m)/o+1,i)}}return{padInfo:l,outHeight:c,outWidth:h}}(o,l,c,g,b,k,x,s,i),N=a?f*h:f;let I;return"channelsFirst"===i?I=[u,N,E,D]:"channelsLast"===i&&(I=[u,E,D,N]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:c,inChannels:h,outHeight:E,outWidth:D,outChannels:N,padInfo:S,strideHeight:g,strideWidth:b,filterHeight:p,filterWidth:d,effectiveFilterHeight:k,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:w,inShape:e,outShape:I,filterShape:t}}function it(e,t,n,r,o,s=!1,a="channelsLast",i){let[u,l,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[u,l,c,h,p]=e;else{if("channelsFirst"!==a)throw new Error("Unknown dataFormat "+a);[u,p,l,c,h]=e}const[d,f,g,,b]=t,[y,w,k]=ct(n),[x,S,E]=ct(r),D=ht(d,x),N=ht(f,S),I=ht(g,E),{padInfo:F,outDepth:A,outHeight:T,outWidth:M}=function(e,t,n,r,o,s,a,i,u,l,c){let h,p,d,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,o,s){null==o&&(o=ut(e,t,r));const a=e[0],i=e[1],u=e[2],l=pt((a-t+2*o)/r+1,s);m(v(l),()=>`The output # of depths (${l}) must be an integer. Change the stride and/or zero pad parameters`);const c=pt((i-t+2*o)/r+1,s);m(v(c),()=>`The output # of rows (${c}) must be an integer. Change the stride and/or zero pad parameters`);const h=pt((u-t+2*o)/r+1,s);return m(v(h),()=>`The output # of columns (${h}) must be an integer. Change the stride and/or zero pad parameters`),[l,c,h,n]}([t,n,r,1],i,1,o,e,c);p=s[0],d=s[1],f=s[2]}else if("same"===e){p=Math.ceil(t/o),d=Math.ceil(n/s),f=Math.ceil(r/a);const e=(p-1)*o+i-t,c=(d-1)*s+u-n,m=(f-1)*a+l-r,g=Math.floor(e/2),b=e-g,y=Math.floor(c/2),w=c-y,k=Math.floor(m/2);h={top:y,bottom:w,left:k,right:m-k,front:g,back:b,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-i+1)/o),d=Math.ceil((n-u+1)/s),f=Math.ceil((r-l+1)/a)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(o,l,c,h,y,w,k,D,N,I,i),$=s?b*p:b;let _;return"channelsFirst"===a?_=[u,$,A,T,M]:"channelsLast"===a&&(_=[u,A,T,M,$]),{batchSize:u,dataFormat:a,inDepth:l,inHeight:c,inWidth:h,inChannels:p,outDepth:A,outHeight:T,outWidth:M,outChannels:$,padInfo:F,strideDepth:y,strideHeight:w,strideWidth:k,filterDepth:d,filterHeight:f,filterWidth:g,effectiveFilterDepth:D,effectiveFilterHeight:N,effectiveFilterWidth:I,dilationDepth:x,dilationHeight:S,dilationWidth:E,inShape:e,outShape:_,filterShape:t}}function ut(e,t,n,r=1){const o=ht(t,r);return Math.floor((e[0]*(n-1)-n+o)/2)}function lt(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function ct(e){return"number"==typeof e?[e,e,e]:e}function ht(e,t){return t<=1?e:e+(e-1)*(t-1)}function pt(e,t){if(!t)return e;switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function dt(e){const[t,n,r]=lt(e);return 1===t&&1===n&&1===r}function ft(e,t){return dt(e)||dt(t)}function mt(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}const gt=_e({avgPool_:function(e,t,n,r,o){const s=Me(e,"x","avgPool","float32");m(ft(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let a=s,i=!1;3===s.rank&&(i=!0,a=Ve(s,[1,s.shape[0],s.shape[1],s.shape[2]])),m(4===a.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),null!=o&&m(v(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const u={x:a},l={filterSize:t,strides:n,pad:r,dimRoundingMode:o};let c=ke.runKernelFunc((e,s)=>{const i=ot(a.shape,t,n,1,r,o);return s([a]),1===i.filterWidth&&1===i.filterHeight&&k(i.inShape,i.outShape)?a.clone():e.avgPool(a,i)},u,null,"AvgPool",l);return c=rt(c,s.dtype),i?Ve(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});function bt(e){n().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function yt(e,t){return ke.tidy(e,t)}function wt(e){ge(e).forEach(e=>e.dispose())}function kt(e){return ke.keep(e)}const vt=_e({avgPool3d_:function(e,t,n,r,o,s="NDHWC",a){null==a?a=[1,1,1]:bt("dilations is deprecated, this field will be gone in v3.0.0.");const i=Me(e,"x","avgPool3d","float32");let u=i,l=!1;4===i.rank&&(l=!0,u=Ve(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),m(5===u.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`),m("NDHWC"===s,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),m(ft(n,a),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),null!=o&&m(v(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const c={x:u},h={filterSize:t,strides:n,pad:r,dimRoundingMode:o,dataFormat:s,dilations:a};let p=ke.runKernelFunc((e,i)=>{null==a&&(a=[1,1,1]);const l=st(u.shape,t,n,a,r,o,s);return i([u]),e.avgPool3d(u,l)},c,null,"AvgPool3D",h);return p=rt(p,u.dtype),l?Ve(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});function xt(e,t){const n=e[0].length;e.forEach((e,t)=>{m(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),m(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,o)=>{for(let s=0;s<n;s++)m(s===t||e[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${o}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${o}.`)})}function St(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function Et(e,t,n,r){if(null==r&&(r=P(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!M(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){V(t);const e=w(t),r=w(n);m(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let e=0;e<n.length;++e){const r=n[e],o=e!==n.length-1||r!==w(t.slice(e));m(n[e]===t[e]||!o,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return M(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?O(e,r):y(e,[],!0),ke.makeTensor(e,t,r)}function Dt(e,t,n){return Et(e,t,Ae(e,n),n)}const Nt=_e({concat_:function(e,t=0){m(e.length>=1,()=>"Pass at least one tensor to concat");let n=$e(e,"tensors","concat");"complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)});const r=E(t,n[0].shape)[0],o=St(n.map(e=>e.shape),r);if(0===w(o))return Dt([],o);if(n=n.filter(e=>e.size>0),1===n.length)return n[0];xt(n.map(e=>e.shape),r);const s=n,a={axis:t};return ke.runKernelFunc((e,t)=>{const o=e.concat(n,r);return t(n),o},s,null,"Concat",a)}});const It=_e({matMul_:function(e,t,n=!1,r=!1){let o=Me(e,"a","matMul"),s=Me(t,"b","matMul");[o,s]=fe(o,s),m(o.rank>=2&&s.rank>=2&&o.rank===s.rank,()=>`Error in matMul: inputs must have the same rank of at least 2, got ranks ${o.rank} and ${s.rank}.`);const a=n?o.shape[o.rank-2]:o.shape[o.rank-1],i=r?s.shape[s.rank-1]:s.shape[s.rank-2],u=n?o.shape[o.rank-1]:o.shape[o.rank-2],l=r?s.shape[s.rank-2]:s.shape[s.rank-1],c=o.shape.slice(0,-2),h=s.shape.slice(0,-2),p=w(c),d=w(h);m(k(c,h),()=>`Error in matMul: outer dimensions (${c}) and (${h}) of Tensors with shapes ${o.shape} and `+s.shape+" must match."),m(a===i,()=>`Error in matMul: inner shapes (${a}) and (${i}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${n} and transposeB=${r} must match.`);const f=o.shape.slice(0,-2).concat([u,l]),g=Ve(o,n?[p,a,u]:[p,u,a]),b=Ve(s,r?[d,l,i]:[d,i,l]),y={a:g,b:b},v={transposeA:n,transposeB:r},x=ke.runKernelFunc((e,t)=>(t([g,b]),e.batchMatMul(g,b,n,r)),y,null,"BatchMatMul",v);return Ve(x,f)}});const Ft=_e({mul_:function(e,t){let n=Me(e,"a","mul"),r=Me(t,"b","mul");[n,r]=fe(n,r);const o={a:n,b:r};return ke.runKernelFunc((e,t)=>{const o=e.multiply(n,r);return t([n,r]),o},o,null,"Multiply")}});const At=_e({sigmoid_:function(e){const t=Me(e,"x","sigmoid"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.sigmoid(t);return n([r]),r},n,null,"Sigmoid")}});function Tt(e,t,n){m(e.rank===t.length,()=>`Error in slice${e.rank}D: Length of begin ${t} must match the rank of the array (${e.rank}).`),m(e.rank===n.length,()=>`Error in slice${e.rank}D: Length of size ${n} must match the rank of the array (${e.rank}).`);for(let r=0;r<e.rank;++r)m(t[r]+n[r]<=e.shape[r],()=>`Error in slice${e.rank}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function Mt(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function $t(e,t,n){const r=[];for(let o=0;o<e.length;o++)r[o]=Math.ceil((t[o]-e[o])/n[o]);return r}function _t(e,t,n,r){const o=[...e];for(let e=o.length;e<r.length;e++)o.push(1);for(let e=0;e<n;e++)0===e?o[t]=1:(o.splice(t,0,1),o.pop());return o}function Bt(e,t,n){return n<=e?n:n-(t-1)}function Rt(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Ct(e,t,n,r,o){const s=[...o],a=Rt(n,t);for(let o=0;o<s.length;o++)if(a.indexOf(o)>-1)s[o]=0;else{const a=Bt(t,n,o);let i=r[a];e&1<<a&&(i=0),s[o]=i}return s}function Pt(e,t,n,r,o){const s=[...o],a=Rt(n,t);for(let o=0;o<s.length;o++)if(a.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{const a=Bt(t,n,o);let i=r[a];e&1<<a&&(i=Number.MAX_SAFE_INTEGER),s[o]=i}for(let e=0;e<s.length;e++){const t=o[e];s[e]<0&&(s[e]+=t),s[e]=f(0,s[e],o[e])}return s}function zt(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Lt(e,t,n,r,o,s){let a=t[o];const i=n[o]||1;(e&1<<o||s&1<<o||null==a)&&(a=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[o];return a<0&&(a+=u),a=f(0,a,u-1),a}function qt(e,t,n,r,o,s){let a=t[o];const i=n[o]||1;(e&1<<o||s&1<<o||null==a)&&(a=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[o];return a<0&&(a+=u),a=i>0?f(0,a,u):f(-1,a,u-1),a}function Ot(e,t,n){let r,o;return r="number"==typeof t?[t,...new Array(e.rank-1).fill(0)]:t.length<e.rank?t.concat(new Array(e.rank-t.length).fill(0)):t.slice(),r.forEach(e=>{m(-1!==e,()=>"slice() does not support negative begin indexing.")}),o=null==n?new Array(e.rank).fill(-1):"number"==typeof n?[n,...new Array(e.rank-1).fill(-1)]:n.length<e.rank?n.concat(new Array(e.rank-n.length).fill(-1)):n,o=o.map((t,n)=>t>=0?t:(m(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,o]}var Wt=Object.freeze({__proto__:null,assertParamsValid:Tt,maskToAxes:Mt,computeOutShape:$t,stridesWithElidedDims:_t,startIndicesWithElidedDims:Ct,stopIndicesWithElidedDims:Pt,stridesForAxis:zt,startForAxis:Lt,stopForAxis:qt,isSliceContinous:function(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let o=r+1;o<n.length;o++)if(t[o]>0||n[o]!==e[o])return!1;return!0},computeFlatOffset:function(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n},parseSliceParams:Ot});const Kt=_e({slice_:function(e,t,n){const r=Me(e,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const[o,s]=Ot(r,t,n);Tt(r,o,s);const a={x:r},i={begin:t,size:n};return ke.runKernelFunc((e,t)=>(t([r]),e.slice(r,o,s)),a,null,"Slice",i)}});const Gt=_e({tanh_:function(e){const t=Me(e,"x","tanh"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.tanh(t);return n([r]),r},n,null,"Tanh")}});const Ut=_e({basicLSTMCell_:function(e,t,n,r,o,s){const a=Me(e,"forgetBias","basicLSTMCell"),i=Me(t,"lstmKernel","basicLSTMCell"),u=Me(n,"lstmBias","basicLSTMCell"),l=Me(r,"data","basicLSTMCell"),c=Me(o,"c","basicLSTMCell"),h=Me(s,"h","basicLSTMCell"),p=Nt([l,h],1),d=It(p,i),f=Pe(d,u),m=f.shape[0],g=f.shape[1]/4,b=[m,g],y=Kt(f,[0,0],b),w=Kt(f,[0,g],b),k=Kt(f,[0,2*g],b),v=Kt(f,[0,3*g],b),x=Pe(Ft(At(y),Gt(w)),Ft(c,At(Pe(a,k))));return[x,Ft(Gt(x),At(v))]}});const Vt=_e({batchToSpaceND_:function(e,t,n){const r=Me(e,"x","batchToSpaceND"),o=t.reduce((e,t)=>e*t);m(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),m(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),m(r.shape[0]%o==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${o}`);const s={x:r},a={blockShape:t,crops:n};return ke.runKernelFunc(e=>e.batchToSpaceND(r,t,n),s,null,"BatchToSpaceND",a)}});function Ht(e){return null==e?null:0===e.rank?Ve(e,[e.size]):1===e.rank?e:2===e.rank?Ve(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Ve(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e}const jt=_e({batchNorm_:function(e,t,n,r,o,s){null==s&&(s=.001);const a=Me(e,"x","batchNorm"),i=Me(t,"mean","batchNorm"),u=Me(n,"variance","batchNorm");let l,c;null!=o&&(l=Me(o,"scale","batchNorm")),null!=r&&(c=Me(r,"offset","batchNorm")),m(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),m(null==c||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),m(null==l||i.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h=function(e){let t;return t=0===e.rank||1===e.rank?Ve(e,[1,1,1,e.size]):2===e.rank?Ve(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Ve(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(a),p={x:h,scale:l,offset:c,mean:i,variance:u},d={varianceEpsilon:s},f=ke.runKernelFunc((e,t)=>(t([h,i,u,l]),e.batchNorm(h,Ht(i),Ht(u),Ht(c),Ht(l),s)),p,null,"FusedBatchNorm",d);return Ve(f,a.shape)}});const Jt=_e({batchNorm2d_:function(e,t,n,r,o,s){const a=Me(e,"x","batchNorm"),i=Me(t,"mean","batchNorm"),u=Me(n,"variance","batchNorm");let l,c;return null!=o&&(l=Me(o,"scale","batchNorm")),null!=r&&(c=Me(r,"offset","batchNorm")),m(2===a.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+a.rank+"."),m(2===i.rank||1===i.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),m(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=l&&m(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=c&&m(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),jt(a,i,u,c,l,s)}});const Yt=_e({batchNorm3d_:function(e,t,n,r,o,s){const a=Me(e,"x","batchNorm"),i=Me(t,"mean","batchNorm"),u=Me(n,"variance","batchNorm");let l,c;return null!=o&&(l=Me(o,"scale","batchNorm")),null!=r&&(c=Me(r,"offset","batchNorm")),m(3===a.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+a.rank+"."),m(3===i.rank||1===i.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),m(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=l&&m(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=c&&m(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),jt(a,i,u,c,l,s)}});const Zt=_e({batchNorm4d_:function(e,t,n,r,o,s){const a=Me(e,"x","batchNorm"),i=Me(t,"mean","batchNorm"),u=Me(n,"variance","batchNorm");let l,c;return null!=o&&(l=Me(o,"scale","batchNorm")),null!=r&&(c=Me(r,"offset","batchNorm")),m(4===a.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+a.rank+"."),m(4===i.rank||1===i.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),m(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=l&&m(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=c&&m(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),jt(a,i,u,c,l,s)}});const Xt=_e({clone_:function(e){const t=Me(e,"x","clone",null),n={x:t};return ke.runKernelFunc(()=>ke.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n,null,"Identity")}});const Qt=_e({broadcastTo_:function(e,t){let n=Me(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Ve(n,e)}const o=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(o[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return Xt(n);const a={x:n},i={shape:t,inputShape:o};return ke.runKernelFunc(e=>e.tile(n,s),a,null,"BroadcastTo",i)}});function en(e,t="float32",n){return t=t||"float32",V(e),new ne(e,t,n)}const tn=_e({ceil_:function(e){const t=Me(e,"x","ceil"),n={x:t};return ke.runKernelFunc(e=>e.ceil(t),n,null,"Ceil")}});const nn=_e({clipByValue_:function(e,t,n){const r=Me(e,"x","clipByValue");m(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);const o={x:r},s={clipValueMin:t,clipValueMax:n};return ke.runKernelFunc((e,o)=>{const s=e.clip(r,t,n);return o([r]),s},o,null,"ClipByValue",s)}});const rn=_e({complex_:function(e,t){const n=Me(e,"real","complex"),r=Me(t,"imag","complex");g(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const o={real:n,imag:r};return ke.runKernelFunc(e=>e.complex(n,r),o,null,"Complex")}});const on=_e({concat1d_:function(e){return Nt(e,0)}});const sn=_e({concat2d_:function(e,t){return Nt(e,t)}});const an=_e({concat3d_:function(e,t){return Nt(e,t)}});const un=_e({concat4d_:function(e,t){return Nt(e,t)}});const ln=_e({conv2d_:function(e,t,n,r,o="NHWC",s=[1,1],a){const i=Me(e,"x","conv2d"),u=Me(t,"filter","conv2d");let l=i,c=!1;3===i.rank&&(c=!0,l=Ve(i,[1,i.shape[0],i.shape[1],i.shape[2]])),m(4===l.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),m(4===u.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."),null!=a&&m(v(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const h="NHWC"===o?l.shape[3]:l.shape[1];m(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),m(ft(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);const p={x:l,filter:u},d={strides:n,pad:r,dataFormat:o,dilations:s,dimRoundingMode:a},f=ke.runKernelFunc((e,t)=>{const i=mt(o),c=at(l.shape,u.shape,n,s,r,a,!1,i),h=e.conv2d(l,u,c);return t([l,u]),h},p,null,"Conv2D",d);return c?Ve(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const cn=_e({conv1d_:function(e,t,n,r,o="NWC",s=1,a){const i=Me(e,"x","conv1d"),u=Me(t,"filter","conv1d");let l=i,c=!1;2===i.rank&&(c=!0,l=Ve(i,[1,i.shape[0],i.shape[1]])),m(3===l.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),m(3===u.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."),null!=a&&m(v(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`),m(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),m(ft(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),m("NWC"===o,()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);const h=Ve(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=Ve(l,[l.shape[0],1,l.shape[1],l.shape[2]]),d=ln(p,h,[1,n],r,"NHWC",[1,s],a);return Ve(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}});const hn=_e({conv2DBackpropInput_:function(e,t,n,r,o,s="NHWC",a){m(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,u=t,l=!1;3===t.rank&&(l=!0,u=Ve(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),m(4===i.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+i.length+"."),m(4===u.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank),m(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const c="NHWC"===s?i[3]:i[1],h="NHWC"===s?u.shape[3]:u.shape[1];m(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),m(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),null!=a&&m(v(o),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);const p={dy:u,filter:n},d={strides:r,pad:o,dataFormat:s,dimRoundingMode:a,inputShape:i},f=ke.runKernelFunc((e,t)=>{const l=mt(s),c=at(i,n.shape,r,1,o,a,!1,l),h=e.conv2dDerInput(u,n,c);return t([u,n]),h},p,null,"Conv2DBackpropInput",d);return l?Ve(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const pn=_e({conv2dTranspose_:function(e,t,n,r,o,s){const a=Me(e,"x","conv2dTranspose"),i=Me(t,"filter","conv2dTranspose");return hn(n,a,i,r,o,"NHWC",s)}});const dn=_e({conv3d_:function(e,t,n,r,o="NDHWC",s=[1,1,1]){const a=Me(e,"x","conv3d"),i=Me(t,"filter","conv3d");let u=a,l=!1;4===a.rank&&(l=!0,u=Ve(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),m(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),m(5===i.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+i.rank+"."),m(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),m(ft(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),m("NDHWC"===o,()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);const c={x:u,filter:i},h={strides:n,pad:r,dataFormat:o,dilations:s},p=ke.runKernelFunc((e,t)=>{const o=it(u.shape,i.shape,n,s,r),a=e.conv3d(u,i,o);return t([u,i]),a},c,null,"Conv3D",h);return l?Ve(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const fn=_e({conv3DBackpropInput_:function(e,t,n,r,o){m(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,a=t,i=!1;4===t.rank&&(i=!0,a=Ve(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=a.shape[4];m(5===s.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+s.length+"."),m(5===a.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+a.rank),m(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),m(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),m(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const c={dy:a},h={pad:o},p=ke.runKernelFunc(e=>{const t=it(s,n.shape,r,1,o);return e.conv3dDerInput(a,n,t)},c,null,"Conv3DBackpropInputV2",h);return i?Ve(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const mn=_e({conv3dTranspose_:function(e,t,n,r,o){const s=Me(e,"x","conv3dTranspose"),a=Me(t,"filter","conv3dTranspose");return fn(n,s,a,r,o)}});const gn=_e({cos_:function(e){const t=Me(e,"x","cos"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.cos(t);return n([t]),r},n,null,"Cos")}});const bn=_e({cosh_:function(e){const t=Me(e,"x","cosh"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.cosh(t);return n([t]),r},n,null,"Cosh")}});const yn=_e({cumsum_:function(e,t=0,n=!1,r=!1){const o=Me(e,"x","cumsum"),s={x:o},a={axis:t,exclusive:n,reverse:r};return ke.runKernelFunc((e,s)=>{const a=Ke([t],o.rank);let i=o;null!=a&&(i=He(o,a));const u=Ue(1,o.rank)[0];let l=e.cumsum(i,u,n,r);if(s([o]),null!=a){const e=Ge(a);l=He(l,e)}return l},s,null,"Cumsum",a)}});const wn=_e({depthToSpace_:function(e,t,n="NHWC"){const r=Me(e,"x","depthToSpace"),o="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];m(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${o} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),m(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`),m(a%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${r.shape}`);const i={x:r},u={blockSize:t,dataFormat:n};return ke.runKernelFunc(e=>e.depthToSpace(r,t,n),i,null,"DepthToSpace",u)}});const kn=_e({depthwiseConv2d_:function(e,t,n,r,o="NHWC",s=[1,1],a){const i=Me(e,"x","depthwiseConv2d"),u=Me(t,"filter","depthwiseConv2d");let l=i,c=!1;3===i.rank&&(c=!0,l=Ve(i,[1,i.shape[0],i.shape[1],i.shape[2]])),m(4===l.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),m(4===u.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."),m(l.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),null!=a&&m(v(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const h={x:l,filter:u},p={strides:n,pad:r,dataFormat:o,dilations:s,dimRoundingMode:a},d=ke.runKernelFunc((e,t)=>{null==s&&(s=[1,1]),m(ft(n,s),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);const o=at(l.shape,u.shape,n,s,r,a,!0),i=e.depthwiseConv2D(l,u,o);return t([l,u]),i},h,null,"DepthwiseConv2dNative",p);return c?Ve(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const vn=_e({diag_:function(e){const t=Me(e,"x","diag"),n={x:t};return ke.runKernelFunc(n=>{const r=Ve(t,[t.size]),o=n.diag(r),s=[...e.shape,...e.shape];return Ve(o,s)},n,null,"Diag")}});const xn=_e({dilation2d_:function(e,t,n,r,o=[1,1],s="NHWC"){const a=Me(e,"x","dilation2d"),i=Me(t,"filter","dilation2d");m(3===a.rank||4===a.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+a.rank+"."),m(3===i.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+i.rank+"."),m("NHWC"===s,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+s);let u=a,l=!1;3===a.rank&&(u=Ve(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=!0);const c={x:u,filter:i},h={strides:n,pad:r,dilations:o},p=ke.runKernel("Dilation2D",c,h);return l?Ve(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const Sn=_e({floorDiv_:function(e,t){let n=Me(e,"a","floorDiv"),r=Me(t,"b","floorDiv");[n,r]=fe(n,r);const o={a:n,b:r};return ke.runKernelFunc((e,t)=>{const o=e.floorDiv(n,r);return t([n,r]),o},o,null,"FloorDiv")}});const En=_e({div_:function(e,t){let n=Me(e,"a","div"),r=Me(t,"b","div");if([n,r]=fe(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Sn(n,r);const o={a:n,b:r};return ke.runKernelFunc((e,t)=>{const o=e.realDivide(n,r);return t([n,r]),o},o,null,"Div",{})}});function Dn(e,t){const n=[];for(let r=0;r<t.length;r++){const o=e[e.length-r-1],s=t.length-r-1,a=t[s];(null==o||1===o&&a>1)&&n.unshift(s)}return n}function Nn(e,t){const n=[],r=Math.max(e.length,t.length);for(let o=0;o<r;o++){let r=e[e.length-o-1];null==r&&(r=1);let s=t[t.length-o-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}const In=_e({equal_:function(e,t){let n=Me(e,"a","equal"),r=Me(t,"b","equal");[n,r]=fe(n,r),Nn(n.shape,r.shape);const o={a:n,b:r};return ke.runKernelFunc(e=>e.equal(n,r),o,null,"Equal")}});const Fn=_e({where_:function(e,t,n){const r=Me(t,"a","where"),o=Me(n,"b","where"),s=Me(e,"condition","where","bool"),a=Nn(r.shape,o.shape),i=Qt(r,a),u=Qt(o,a);1===s.rank&&m(s.shape[0]===r.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==s.rank&&g(s.shape,u.shape,"Error in where: ");const l={condition:s,t:i,e:u};return ke.runKernelFunc((e,t)=>{const n=e.select(s,i,u);return t([s]),n},l,null,"SelectV2")}});const An=_e({zerosLike_:function(e){const t=Me(e,"x","zerosLike"),n={x:t};return ke.runKernelFunc(e=>e.zerosLike(t),n,null,"ZerosLike")}});const Tn=_e({divNoNan_:function(e,t){let n=Me(e,"a","div"),r=Me(t,"b","div");[n,r]=fe(n,r);const o=En(n,r),s=An(o),a=In(r,s);return Fn(a,s,o)}});const Mn=_e({dot_:function(e,t){const n=Me(e,"t1","dot"),r=Me(t,"t2","dot");m(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const o=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(m(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),1===n.rank&&1===r.rank){const e=Ve(n,[1,-1]),t=Ve(r,[-1,1]),o=It(e,t);return Ve(o,[])}if(1===n.rank&&2===r.rank){const e=Ve(n,[1,-1]),t=Ve(r,[r.shape[0],r.shape[1]]),o=It(e,t);return Ve(o,[o.size])}if(2===n.rank&&1===r.rank){const e=Ve(r,[-1,1]),t=It(n,e);return Ve(t,[t.size])}{const e=Ve(r,[r.shape[0],r.shape[1]]);return It(n,e)}}});const $n=_e({elu_:function(e){const t=Me(e,"x","elu"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.elu(t);return n([r]),r},n,null,"Elu")}});const _n=_e({erf_:function(e){let t=Me(e,"x","erf");m("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=rt(t,"float32"));const n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.erf(t);return n([t]),r},n,null,"Erf")}});const Bn=_e({exp_:function(e){const t=Me(e,"x","exp"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.exp(t);return n([r]),r},n,null,"Exp")}});const Rn=_e({expandDims_:function(e,t=0){const n=Me(e,"x","expandDims",null);m(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r=n.shape.slice();return t<0&&(m(-(n.rank+1)<=t,()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`),t=n.rank+t+1),r.splice(t,0,1),Ve(n,r)}});const Cn=_e({expm1_:function(e){const t=Me(e,"x","expm1"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.expm1(t);return n([t]),r},n,null,"Expm1")}});const Pn=_e({tile_:function(e,t){const n=Me(e,"x","tile",null);m(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const r=[n],o={x:n},s={reps:t};return ke.runKernelFunc((e,r)=>{const o=e.tile(n,t);return r([n]),o},o,null,"Tile",s,r)}});const zn=_e({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const o=en([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)o.set(1,e,e);const a=Ve(o.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return Pn(Rn(a,0),[n[0],1,1]);if(2===n.length)return Pn(Rn(Rn(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Pn(Rn(Rn(Rn(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const Ln=_e({fft_:function(e){m("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return ke.runKernelFunc(t=>{const n=e.shape[e.shape.length-1],r=e.size/n,o=e.as2D(r,n);return t.fft(o).reshape(e.shape)},t,null,"FFT")}});function qn(e,t,n){const r={shape:e,value:t,dtype:n};return ke.runKernelFunc(r=>r.fill(e,t,n),{},null,"Fill",r)}const On=_e({floor_:function(e){const t=Me(e,"x","floor"),n={x:t};return ke.runKernelFunc(e=>e.floor(t),n,null,"Floor")}});function Wn(e,t,n){const r=e.shape[n],o=[];let s=1,a=1;for(let t=0;t<n;t++)o.push(e.shape[t]),s*=e.shape[t];for(let e=0;e<t.rank;e++)o.push(t.shape[e]);for(let t=n+1;t<e.rank;t++)o.push(e.shape[t]),a*=e.shape[t];return{batchSize:s,sliceSize:a,dimSize:r,outputShape:o}}var Kn=Object.freeze({__proto__:null,segOpComputeOptimalWindowSize:function(e,t){let n,r=!1;for(e<=30?(n=e,r=!0):n=L(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=L(e,n+1);return n},computeOutShape:function(e,t,n){const r=[],o=e.length;for(let s=0;s<o;s++)s!==t?r.push(e[s]):r.push(n);return r},collectGatherOpShapeInfo:Wn});const Gn=_e({gather_:function(e,t,n=0){const r=Me(e,"x","gather"),o=Me(t,"indices","gather","int32"),s={x:r,indices:o},a={axis:n};return ke.runKernelFunc((e,t)=>{const s=E(n,r.shape)[0],a=Wn(r,o,s),i=e.gather(r,Ve(o,[o.size]),s);return t([r,o]),Ve(i,a.outputShape)},s,null,"GatherV2",a)}});const Un=_e({greater_:function(e,t){let n=Me(e,"a","greater"),r=Me(t,"b","greater");[n,r]=fe(n,r),Nn(n.shape,r.shape);const o={a:n,b:r};return ke.runKernelFunc(e=>e.greater(n,r),o,null,"Greater")}});const Vn=_e({greaterEqual_:function(e,t){let n=Me(e,"a","greaterEqual"),r=Me(t,"b","greaterEqual");[n,r]=fe(n,r),Nn(n.shape,r.shape);const o={a:n,b:r};return ke.runKernelFunc((e,t)=>{const o=e.greaterEqual(n,r);return t([n,r]),o},o,null,"GreaterEqual")}});const Hn=_e({ifft_:function(e){m("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return ke.runKernelFunc(t=>{const n=e.shape[e.shape.length-1],r=e.size/n,o=Ve(e,[r,n]),s=t.ifft(o);return Ve(s,e.shape)},t,null,"IFFT")}});const jn=_e({imag_:function(e){const t=Me(e,"input","imag"),n={input:t};return ke.runKernelFunc(e=>e.imag(t),n,null,"Imag")}});const Jn=_e({real_:function(e){const t=Me(e,"input","real"),n={input:t};return ke.runKernelFunc(e=>e.real(t),n,null,"Real")}});const Yn=_e({reverse_:function(e,t){const n=Me(e,"x","reverse"),r={x:n},o={dims:t};return ke.runKernelFunc(e=>{const r=E(t,n.shape);if(0===n.rank)return Xt(n);const o=e.reverse(n,r);return Ve(o,n.shape)},r,null,"Reverse",o)}});function Zn(e,t){if((M(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&M(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Et(e,[],[],t)}const Xn=_e({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const o=Ve(e,[n,t]);r=Hn(o)}else{const o=[n,2*(t-1)],s=Ve(Jn(e),[n,t]),a=Ve(jn(e),[n,t]),i=Yn(Kt(s,[0,1],[n,t-2]),1),u=Ft(Yn(Kt(a,[0,1],[n,t-2]),1),Zn(-1)),l=Nt([s,i],1),c=Nt([a,u],1),h=Ve(rn(l,c),[o[0],o[1]]);r=Hn(h)}if(r=Jn(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Ve(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});const Qn=_e({isFinite_:function(e){const t=Me(e,"x","isFinite"),n={x:t};return ke.runKernelFunc(e=>e.isFinite(t),n,null,"IsFinite")}});const er=_e({isInf_:function(e){const t=Me(e,"x","isInf"),n={x:t};return ke.runKernelFunc(e=>e.isInf(t),n,null,"IsInf")}});const tr=_e({isNaN_:function(e){const t=Me(e,"x","isNaN"),n={x:t};return ke.runKernelFunc(e=>e.isNaN(t),n,null,"IsNan")}});const nr=_e({maximum_:function(e,t){let n=Me(e,"a","maximum"),r=Me(t,"b","maximum");[n,r]=fe(n,r),"bool"===n.dtype&&(n=rt(n,"int32"),r=rt(r,"int32")),Nn(n.shape,r.shape);const o={a:n,b:r};return ke.runKernelFunc((e,t)=>{const o=e.maximum(n,r);return t([n,r]),o},o,null,"Maximum")}});const rr=_e({leakyRelu_:function(e,t=.2){const n=Me(e,"x","leakyRelu");return nr(Ft(Zn(t),n),n)}});const or=_e({less_:function(e,t){let n=Me(e,"a","less"),r=Me(t,"b","less");[n,r]=fe(n,r),Nn(n.shape,r.shape);const o={a:n,b:r};return ke.runKernelFunc(e=>e.less(n,r),o,null,"Less")}});const sr=_e({lessEqual_:function(e,t){let n=Me(e,"a","lessEqual"),r=Me(t,"b","lessEqual");[n,r]=fe(n,r),Nn(n.shape,r.shape);const o={a:n,b:r};return ke.runKernelFunc((e,t)=>{const o=e.lessEqual(n,r);return t([n,r]),o},o,null,"LessEqual")}});function ar(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return ke.runKernelFunc(r=>r.linspace(e,t,n),{},null,"LinSpace",r)}const ir=_e({localResponseNormalization_:function(e,t=5,n=1,r=1,o=.5){const s=Me(e,"x","localResponseNormalization");m(4===s.rank||3===s.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`),m(v(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let a=s,i=!1;3===s.rank&&(i=!0,a=Ve(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:a},l={depthRadius:t,bias:n,alpha:r,beta:o},c=ke.runKernelFunc((e,s)=>{const i=e.localResponseNormalization4D(a,t,n,r,o);return s([a,i]),i},u,null,"LRN",l);return i?Ve(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const ur=_e({log_:function(e){const t=Me(e,"x","log"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.log(t);return n([t]),r},n,null,"Log")}});const lr=_e({log1p_:function(e){const t=Me(e,"x","log1p"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.log1p(t);return n([t]),r},n,null,"Log1p")}});function cr(e,t){m(z(e),()=>"The f passed in variableGrads(f) must be a function"),m(null==t||Array.isArray(t)&&t.every(e=>e instanceof ae),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in ke.registeredVariables)t.push(ke.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,o=t.length;m((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const{value:s,grads:a}=ke.gradients(e,t,null,!0);m(a.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),m(0===s.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`);const i={};return t.forEach((e,t)=>{null!=a[t]&&(i[e.name]=a[t])}),null!=r&&r.forEach(e=>i[e.name]=null),{value:s,grads:i}}function hr(e){return ke.customGrad(e)}function pr(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}const dr=_e({neg_:function(e){const t=Me(e,"x","neg"),n={x:t};return ke.runKernelFunc(e=>e.neg(t),n,null,"Negate")}});const fr=_e({softplus_:function(e){const t=Me(e,"x","softplus"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.softplus(t);return n([t]),r},n,null,"Softplus")}});const mr=_e({logSigmoid_:function(e){const t=Me(e,"x","logSigmoid");return hr(e=>({value:dr(fr(dr(e))),gradFunc:t=>Ft(t,At(dr(e)))}))(t)}});const gr=_e({max_:function(e,t=null,n=!1){const r=Me(e,"x","max"),o={x:r},s={reductionIndices:t,keepDims:n};return ke.runKernelFunc((e,o)=>{let s=E(t,r.shape);const a=Ke(s,r.rank);let i=r;null!=a&&(i=He(r,a),s=Ue(s.length,i.rank));const u=e.max(i,s);null!=a&&i.dispose();let l=u;if(n){const e=We(l.shape,E(t,r.shape));l=Ve(l,e),u.dispose()}return o([r,l]),l},o,null,"Max",s)}});const br=_e({sub_:function(e,t){let n=Me(e,"a","sub"),r=Me(t,"b","sub");[n,r]=fe(n,r);const o={a:n,b:r};return ke.runKernelFunc((e,t)=>{const o=e.subtract(n,r);return t([n,r]),o},o,null,"Sub")}});const yr=_e({sum_:function(e,t=null,n=!1){let r=Me(e,"x","sum");"bool"===r.dtype&&(r=rt(r,"int32"));const o={x:r},s={axis:t,keepDims:n};return ke.runKernelFunc((e,o)=>{o([r]);const s=E(t,r.shape),a=Ke(s,r.rank);let i=s,u=r;null!=a&&(u=He(r,a),i=Ue(i.length,r.rank));let l=e.sum(u,i);if(n){const e=We(l.shape,s);l=Ve(l,e)}return l},o,null,"Sum",s)}});const wr=_e({logSoftmax_:function(e,t=-1){const n=Me(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r={logits:n},o={axis:t};return ke.runKernelFunc((n,r)=>{const o=gr(e,t,!0),s=br(e,o),a=br(rt(s,"float32"),ur(yr(Bn(s),t,!0)));return r([a]),a},r,null,"LogSoftmax",o)}});const kr=_e({logSumExp_:function(e,t=null,n=!1){const r=Me(e,"x","logSumExp"),o=E(t,r.shape),s=gr(r,o,!0),a=br(r,s),i=Bn(a),u=yr(i,o),l=ur(u),c=Pe(Ve(s,l.shape),l);if(n){const e=We(c.shape,o);return Ve(c,e)}return c}});const vr=_e({logicalAnd_:function(e,t){const n=Me(e,"a","logicalAnd","bool"),r=Me(t,"b","logicalAnd","bool");Nn(n.shape,r.shape);const o={a:n,b:r};return ke.runKernelFunc(e=>e.logicalAnd(n,r),o,null,"LogicalAnd")}});const xr=_e({logicalNot_:function(e){const t=Me(e,"x","logicalNot","bool"),n={x:t};return ke.runKernelFunc(e=>e.logicalNot(t),n,null,"LogicalNot")}});const Sr=_e({logicalOr_:function(e,t){const n=Me(e,"a","logicalOr","bool"),r=Me(t,"b","logicalOr","bool");Nn(n.shape,r.shape);const o={a:n,b:r};return ke.runKernelFunc(e=>e.logicalOr(n,r),o,null,"LogicalOr")}});const Er=_e({logicalXor_:function(e,t){const n=Me(e,"a","logicalXor","bool"),r=Me(t,"b","logicalXor","bool");return Nn(n.shape,r.shape),vr(Sr(e,t),xr(vr(e,t)))}});const Dr=_e({maxPool_:function(e,t,n,r,o){const s=Me(e,"x","maxPool");let a=s,i=!1;3===s.rank&&(i=!0,a=Ve(s,[1,s.shape[0],s.shape[1],s.shape[2]])),m(4===a.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),m(ft(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=o&&m(v(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const u={x:a},l={filterSize:t,strides:n,pad:r,dimRoundingMode:o},c=ke.runKernelFunc((e,s)=>{const i=ot(a.shape,t,n,1,r,o);let u;return u=1===i.filterWidth&&1===i.filterHeight&&k(i.inShape,i.outShape)?a.clone():e.maxPool(a,i),s([a,u]),u},u,null,"MaxPool",l);return i?Ve(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Nr=_e({maxPool3d_:function(e,t=[1,1,1],n,r,o,s="NDHWC",a){null==a?a=[1,1,1]:bt("dilations is deprecated, this field will be gone in v3.0.0.");const i=Me(e,"x","maxPool3d");let u=i,l=!1;4===i.rank&&(l=!0,u=Ve(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),m(5===u.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`),m("NDHWC"===s,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),m(ft(n,a),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),null!=o&&m(v(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const c={x:u},h={filterSize:t,strides:n,pad:r,dimRoundingMode:o,dataFormat:s,dilations:a},p=ke.runKernelFunc((e,i)=>{null==a&&(a=[1,1,1]);const l=st(u.shape,t,n,a,r,o,s),c=e.maxPool3d(u,l);return i([u,c]),c},c,null,"MaxPool3D",h);return l?Ve(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const Ir=_e({maxPoolWithArgmax_:function(e,t,n,r,o=!1){const s={x:Me(e,"x","maxPoolWithArgmax")},a={filterSize:t,strides:n,pad:r,includeBatchInIndex:o},i=ke.runKernel("MaxPoolWithArgmax",s,a);return{result:i[0],indexes:i[1]}}});function Fr(e,t="float32"){if("complex64"===t){const t=Fr(e,"float32"),n=Fr(e,"float32");return rn(t,n)}const n=G(w(e),t);return ke.makeTensor(n,e,t)}function Ar(e,t="float32"){if("complex64"===t){const t=Ar(e,"float32"),n=Fr(e,"float32");return rn(t,n)}const n=K(w(e),t);return ke.makeTensor(n,e,t)}const Tr=_e({mean_:function(e,t=null,n=!1){const r=Me(e,"x","mean"),o=E(t,r.shape),s=w(Oe(r.shape,o)[1]);return hr(e=>{const r=Zn(s),a=r.dtype===e.dtype?e:rt(e,r.dtype),i=En(a,r);return{value:yr(i,t,n),gradFunc:t=>{const n=e.shape.slice();o.forEach(e=>{n[e]=1});const r=Ve(t,n);return En(Ft(r,Ar(e.shape,"float32")),s)}}})(r)}});const Mr=_e({min_:function(e,t=null,n=!1){const r=Me(e,"x","min"),o={x:r},s={axis:t,keepDims:n};return ke.runKernelFunc((e,o)=>{const s=E(t,r.shape);let a=s;const i=Ke(a,r.rank);let u=r;null!=i&&(u=He(r,i),a=Ue(a.length,r.rank));const l=e.min(u,a);null!=i&&u.dispose();let c=l;if(n){const e=We(c.shape,s);c=Ve(l,e),l.dispose()}return o([r,c]),c},o,null,"Min",s)}});const $r=_e({minimum_:function(e,t){let n=Me(e,"a","minimum"),r=Me(t,"b","minimum");[n,r]=fe(n,r),"bool"===n.dtype&&(n=rt(n,"int32"),r=rt(r,"int32")),Nn(n.shape,r.shape);const o={a:n,b:r};return ke.runKernelFunc((e,t)=>{const o=e.minimum(n,r);return t([n,r]),o},o,null,"Minimum")}});const _r=_e({mod_:function(e,t){let n=Me(e,"a","mod"),r=Me(t,"b","mod");[n,r]=fe(n,r);const o={a:n,b:r};return ke.runKernelFunc((e,t)=>{const o=e.mod(n,r);return t([n,r]),o},o,null,"Mod")}});const Br=_e({square_:function(e){const t=Me(e,"x","square"),n=[t];return ke.runKernelFunc((e,n)=>(n([t]),e.square(t)),{x:t},null,"Square",{},n,[])}});const Rr=_e({moments_:function(e,t=null,n=!1){const r=E(t,(e=Me(e,"x","moments")).shape),o=Tr(e,r,n);let s=o.shape;n||(s=We(o.shape,r));const a=Br(br(rt(e,"float32"),Ve(o,s)));return{mean:o,variance:Tr(a,r,n)}}});const Cr=_e({multiRNNCell_:function(e,t,n,r){const o=Me(t,"data","multiRNNCell"),s=$e(n,"c","multiRNNCell"),a=$e(r,"h","multiRNNCell");let i=o;const u=[];for(let t=0;t<e.length;t++){const n=e[t](i,s[t],a[t]);u.push(n[0]),u.push(n[1]),i=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}});const Pr=_e({multinomial_:function(e,t,n,r=!1){const o=Me(e,"logits","multinomial"),s=o.size,a=o.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+s+".");if(a>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+a);n=n||Math.random();const i=1===a?Ve(o,[1,-1]):o,u=ke.runKernelFunc(e=>e.multinomial(i,r,t,n),{logits2D:i});return 1===a?Ve(u,[u.size]):u}});const zr=_e({notEqual_:function(e,t){let n=Me(e,"a","notEqual"),r=Me(t,"b","notEqual");[n,r]=fe(n,r),Nn(n.shape,r.shape);const o={a:n,b:r};return ke.runKernelFunc(e=>e.notEqual(n,r),o,null,"NotEqual")}});const Lr=_e({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const o=Me(e,"indices","oneHot","int32"),s=[...o.shape,t],a={indices:o},i={depth:t,onValue:n,offValue:r};return ke.runKernelFunc((e,a)=>(a([o]),Ve(e.oneHot(Ve(o,[o.size]),t,n,r),s)),a,null,"OneHot",i)}});const qr=_e({onesLike_:function(e){const t=Me(e,"x","onesLike"),n={x:t};return ke.runKernelFunc((e,n)=>{if("complex64"===t.dtype){const e=qr(Jn(t)),n=An(jn(t));return rn(e,n)}return e.onesLike(t)},n,null,"OnesLike")}});const Or=_e({outerProduct_:function(e,t){const n=Me(e,"v1","outerProduct"),r=Me(t,"v2","outerProduct");m(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const o=Ve(n,[-1,1]),s=Ve(r,[1,-1]);return It(o,s)}});const Wr=_e({pad_:function(e,t,n=0){const r=Me(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},s={x:r};return ke.runKernelFunc((e,o)=>(o([r]),e.pad(r,t,n)),s,null,"PadV2",o)}});const Kr=_e({pad1d_:function(e,t,n=0){return m(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),Wr(e,[t],n)}});const Gr=_e({pad2d_:function(e,t,n=0){return m(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Wr(e,t,n)}});const Ur=_e({pad3d_:function(e,t,n=0){return m(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Wr(e,t,n)}});const Vr=_e({pad4d_:function(e,t,n=0){return m(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Wr(e,t,n)}});const Hr=_e({spaceToBatchND_:function(e,t,n){const r=Me(e,"x","spaceToBatchND");m(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),m(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),m(r.shape.reduce((e,r,o)=>o>0&&o<=t.length?e&&(r+n[o-1][0]+n[o-1][1])%t[o-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const o={x:r},s={blockShape:t,paddings:n};return ke.runKernelFunc(e=>e.spaceToBatchND(r,t,n),o,null,"SpaceToBatchND",s)}});const jr=_e({pool_:function(e,t,n,r,o,s){null==o&&(o=[1,1]),null==s&&(s=1),0===r&&(r="valid");const a=Me(e,"x","maxPool");let i=a,u=!1;3===a.rank&&(u=!0,i=Ve(a,[1,a.shape[0],a.shape[1],a.shape[2]])),m(ft(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);const l=ot(i.shape,t,s,o,r),c=[l.dilationHeight,l.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),o=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],o[t]])}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[d,f]=function(e,t,n){const r=n.map(e=>e[0]),o=n.map(e=>e[1]),s=e.concat(r,o),a=t.map((e,t)=>(e-s[t]%e)%e),i=o.map((e,t)=>e+a[t]),u=t.map((e,t)=>[r[t],i[t]]),l=t.map((e,t)=>[0,a[t]]);return[u,l]}([l.inHeight,l.inWidth],c,h),g=p?r:"valid",b=p?i:Hr(i,c,d),y=("avg"===n?()=>gt(b,t,s,g):()=>Dr(b,t,s,g))(),w=p?y:Vt(y,c,f);return u?Ve(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});const Jr=_e({pow_:function(e,t){let n=Me(e,"base","pow"),r=Me(t,"exp","pow");[n,r]=fe(n,r);const o={a:n,b:r};return ke.runKernelFunc((e,t)=>{const o=e.pow(n,r);return t([n,r,o]),o},o,null,"Pow")}});const Yr=_e({prelu_:function(e,t){const n=Me(e,"x","prelu"),r=Me(t,"alpha","prelu"),o={x:n,alpha:r};return ke.runKernelFunc((e,t)=>{const o=e.prelu(n,r);return t([n,r]),o},o,null,"Prelu")}});function Zr(e,t=!1){console.log(e.toString(t))}const Xr=_e({prod_:function(e,t=null,n=!1){let r=Me(e,"x","prod");const o={x:r},s={axis:t,keepDims:n};return ke.runKernelFunc(e=>{"bool"===r.dtype&&(r=rt(r,"int32"));const o=E(t,r.shape),s=Ke(o,r.rank);let a=o,i=r;null!=s&&(i=He(r,s),a=Ue(a.length,r.rank));let u=e.prod(i,a);if(n){const e=We(u.shape,o);u=Ve(u,e)}return u},o,null,"Prod",s)}});const Qr=_e({rand_:function(e,t,n){const r=w(e);let o=null;if(null==n||"float32"===n)o=new Float32Array(r);else if("int32"===n)o=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);o=new Uint8Array(r)}for(let e=0;e<r;e++)o[e]=t();return ke.makeTensor(o,e,n)}});"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function eo(e,t){return e(t={exports:{}},t.exports),t.exports}var to=eo((function(e){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,s&&("object"==typeof s&&o(s,n),a.state=function(){return o(n,{})}),a}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,e,!1)})),no=eo((function(e){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,s&&("object"==typeof s&&o(s,n),a.state=function(){return o(n,{})}),a}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,e,!1)})),ro=eo((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,s&&("object"==typeof s&&o(s,n),a.state=function(){return o(n,{})}),a}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,e,!1)})),oo=eo((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,o=t.i;return e=r[o],n=(e^=e>>>7)^e<<24,n^=(e=r[o+1&7])^e>>>10,n^=(e=r[o+3&7])^e>>>3,n^=(e=r[o+4&7])^e<<7,e=r[o+7&7],n^=(e^=e<<13)^e<<9,r[o]=n,t.i=o+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,s&&(s.x&&o(s,n),a.state=function(){return o(n,{})}),a}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,e,!1)})),so=eo((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,o=t.X,s=t.i;return t.w=r=r+1640531527|0,n=o[s+34&127],e=o[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=o[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,o,s,a,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),o=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(a=a+1640531527|0,o=0==(n=i[127&s]^=r+a)?o+1:0);for(o>=128&&(i[127&(t&&t.length||0)]=-1),o=127,s=512;s>0;--s)r=i[o+34&127],n=i[o=o+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[o]=r^n;e.w=a,e.X=i,e.i=o}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,s&&(s.X&&o(s,n),a.state=function(){return o(n,{})}),a}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,e,!1)})),ao=eo((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,o=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^o,o=o-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^o,t.a=o-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,s&&("object"==typeof s&&o(s,n),a.state=function(){return o(n,{})}),a}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,e,!1)})),io=eo((function(e){!function(t,n){var r,o=this,s=n.pow(256,6),a=n.pow(2,52),i=2*a;function u(e,u,d){var f=[],m=h(function e(t,n){var r,o=[],s=typeof t;if(n&&"object"==s)for(r in t)try{o.push(e(t[r],n-1))}catch(e){}return o.length?o:"string"==s?t:t+"\0"}((u=1==u?{entropy:!0}:u||{}).entropy?[e,p(t)]:null==e?function(){try{var e;return r&&(e=r.randomBytes)?e=e(256):(e=new Uint8Array(256),(o.crypto||o.msCrypto).getRandomValues(e)),p(e)}catch(e){var n=o.navigator,s=n&&n.plugins;return[+new Date,o,s,o.screen,p(t)]}}():e,3),f),g=new l(f),b=function(){for(var e=g.g(6),t=s,n=0;e<a;)e=256*(e+n),t*=256,n=g.g(1);for(;e>=i;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|g.g(4)},b.quick=function(){return g.g(4)/4294967296},b.double=b,h(p(g.S),t),(u.pass||d||function(e,t,r,o){return o&&(o.S&&c(o,g),e.state=function(){return c(g,{})}),r?(n.random=e,t):e})(b,m,"global"in u?u.global:this==n,u.state)}function l(e){var t,n=e.length,r=this,o=0,s=r.i=r.j=0,a=r.S=[];for(n||(e=[n++]);o<256;)a[o]=o++;for(o=0;o<256;o++)a[o]=a[s=255&s+e[o%n]+(t=a[o])],a[s]=t;(r.g=function(e){for(var t,n=0,o=r.i,s=r.j,a=r.S;e--;)t=a[o=255&o+1],n=256*n+a[255&(a[o]=a[s=255&s+t])+(a[s]=t)];return r.i=o,r.j=s,n})(256)}function c(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function h(e,t){for(var n,r=e+"",o=0;o<r.length;)t[255&o]=255&(n^=19*t[255&o])+r.charCodeAt(o++);return p(t)}function p(e){return String.fromCharCode.apply(0,e)}if(n.seedrandom=u,h(n.random(),t),e.exports){e.exports=u;try{r=require("crypto")}catch(e){}}}([],Math)}));io.alea=to,io.xor128=no,io.xorwow=ro,io.xorshift7=oo,io.xor4096=so,io.tychei=ao;var uo=io.alea;function lo(){return 32===ke.backend.floatPrecision()?.001:.1}function co(e,t,n){let r=!0;if((M(e)||M(t))&&(r=!1),M(e)&&M(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+r)}if(Array.isArray(e)&&Array.isArray(t)){const n=Ae(e),r=Ae(t);if(!k(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const o=M(e)?e:y(e),s=M(t)?t:y(t);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.\nActual:   ${o}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=o[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${o}.\nExpected: ${s}.`)}}function ho(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}var po=Object.freeze({__proto__:null,TEST_EPSILON_FLOAT16:.1,expectArraysClose:function(e,t,n){return null==n&&(n=lo()),co(e,t,(e,t)=>ho(e,t,n))},testEpsilon:lo,expectPromiseToFail:function(e,t){e().then(()=>t.fail(),()=>t())},expectArraysEqual:function(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return B(e)||B(e[0])||B(t)||B(t[0])?co(e,n,(e,t)=>e==t):co(e,t,(e,t)=>ho(e,t,0))},expectNumbersClose:function(e,t,n){if(null==n&&(n=lo()),!ho(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)},expectValuesInRange:function(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)},expectArrayBuffersEqual:function(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}});class fo{constructor(e,t,n,r,o){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=o||Math.random();this.random=uo(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,o,s;do{r=2*this.random()-1,o=2*this.random()-1,s=r*r+o*o}while(s>=1||0===s);const a=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*o*a,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class mo{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const o=r||Math.random();this.randu=uo(o.toString()),this.randn=new fo(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,o,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),o=this.randu(),o<t||Math.log(o)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class go{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=uo(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const bo=_e({randomGamma_:function(e,t,n=1,r="float32",o){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const s=new mo(t,n,r,o),a=en(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=s.nextValue();return a.toTensor()}});const yo=_e({randomNormal_:function(e,t=0,n=1,r,o){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const s=new fo(t,n,r,!1,o),a=en(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=s.nextValue();return a.toTensor()}});const wo=_e({randomUniform_:function(e,t=0,n=1,r="float32",o){const s=en(e,r),a=new go(t,n,null,o);for(let e=0;e<s.values.length;e++)s.values[e]=a.nextValue();return s.toTensor()}});function ko(e,t){b(e);const n=Ae(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Et(e,null,n,t)}function vo(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const o={start:e,stop:t,step:n,dtype:r};return ke.runKernelFunc(()=>{if(e===t||e<t&&n<0||t<e&&n>1)return Fr([0],r);const o=G(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),o[0]=e;for(let e=1;e<o.length;e++)o[e]=o[e-1]+n;return ko(o,r)},{},null,"Range",o)}const xo=_e({reciprocal_:function(e){const t=Me(e,"x","reciprocal"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.reciprocal(t);return n([t]),r},n,null,"Reciprocal")}});const So=_e({relu_:function(e){const t=Me(e,"x","relu"),n={x:t};return ke.runKernelFunc((e,n)=>(n([t]),"bool"===t.dtype?rt(t,"int32"):e.relu(t)),n,null,"Relu")}});const Eo=_e({relu6_:function(e){const t=Me(e,"x","relu6"),n={x:t};return ke.runKernelFunc((e,n)=>(n([t]),"bool"===t.dtype?rt(t,"int32"):e.relu6(t)),n,null,"Relu6")}});const Do=_e({reverse1d_:function(e){const t=Me(e,"x","reverse");return m(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Yn(t,0)}});const No=_e({reverse2d_:function(e,t){const n=Me(e,"x","reverse");return m(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Yn(n,t)}});const Io=_e({reverse3d_:function(e,t){const n=Me(e,"x","reverse");return m(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Yn(n,t)}});const Fo=_e({reverse4d_:function(e,t){const n=Me(e,"x","reverse");return m(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Yn(n,t)}});function Ao(e,t,n=0){let r=[];if("number"==typeof t)m(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{m(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array.");const o=t.indexOf(-1);if(-1!==o){const r=t.reduce((e,t)=>t>0?e+t:e);t[o]=e.shape[n]-r}m(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}const To=_e({split_:function(e,t,n=0){const r=Me(e,"x","split"),o={x:r},s={numOrSizeSplits:t,axis:n};return ke.runKernelFunc((e,o)=>{const s=E(n,r.shape)[0],a=Ao(r,t,s);return e.split(r,a,s)},o,null,"SplitV",s)}});const Mo=_e({rfft_:function(e,t){m("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n=e.shape[e.shape.length-1];const r=e.size/n;let o;if(null!=t&&t<n){const r=e.shape.map(e=>0),s=e.shape.map(e=>e);s[e.shape.length-1]=t,o=Kt(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,o=Nt([e,Fr(r)],e.shape.length-1),n=t}else o=e;const s=An(o),a=Ve(rn(o,s),[r,n]),i=Ln(a),u=Math.floor(n/2)+1,l=Jn(i),c=jn(i),h=To(l,[u,n-u],l.shape.length-1),p=To(c,[u,n-u],c.shape.length-1),d=o.shape.slice();return d[o.shape.length-1]=u,Ve(rn(h[0],p[0]),d)}});const $o=_e({round_:function(e){const t=Me(e,"x","round"),n={x:t};return ke.runKernelFunc(e=>e.round(t),n,null,"Round")}});const _o=_e({rsqrt_:function(e){const t=Me(e,"x","rsqrt"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.rsqrt(t);return n([t]),r},n,null,"Rsqrt")}});const Bo=_e({selu_:function(e){const t=Me(e,"x","selu"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.selu(t);return n([t]),r},n,null,"Selu")}});const Ro=_e({separableConv2d_:function(e,t,n,r,o,s=[1,1],a="NHWC"){const i=Me(e,"x","separableConv2d"),u=Me(t,"depthwiseFilter","separableConv2d"),l=Me(n,"pointwiseFilter","separableConv2d");let c=i,h=!1;if(3===i.rank&&(h=!0,c=Ve(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");m(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),m(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),m(4===l.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),m(1===l.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),m(1===l.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const p=u.shape[2],d=u.shape[3];m(l.shape[2]===p*d,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${l.shape[2]}.`);const f=kn(c,u,r,o,a,s),g=ln(f,l,1,"valid",a);return h?Ve(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const Co=async function(e,t){const n=Me(e,"x","setdiff1d"),r=Me(t,"y","setdiff1d");m(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),m(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),m(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const o=await n.data(),s=await r.data(),a=new Set(s);let i=0;for(let e=0;e<o.length;e++)a.has(o[e])||i++;const u=new ne([i],n.dtype),l=new ne([i],"int32");for(let e=0,t=0;e<o.length;e++)a.has(o[e])||(u.values[t]=o[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]};const Po=_e({sign_:function(e){const t=Me(e,"x","sign"),n={x:t};return ke.runKernelFunc(e=>e.sign(t),n,null,"Sign")}});const zo=_e({sin_:function(e){const t=Me(e,"x","sin"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.sin(t);return n([t]),r},n,null,"Sin")}});const Lo=_e({sinh_:function(e){const t=Me(e,"x","sinh"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.sinh(t);return n([t]),r},n,null,"Sinh")}});const qo=_e({slice1d_:function(e,t,n){const r=Me(e,"x","slice1d");return m(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Kt(r,[t],[n])}});const Oo=_e({slice2d_:function(e,t,n){const r=Me(e,"x","slice2d");return m(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Kt(r,t,n)}});const Wo=_e({slice3d_:function(e,t,n){const r=Me(e,"x","slice3d");return m(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Kt(r,t,n)}});const Ko=_e({slice4d_:function(e,t,n){const r=Me(e,"x","slice4d");return m(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Kt(r,t,n)}});const Go=_e({softmax_:function(e,t=-1){const n=Me(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},o={dim:t};return ke.runKernelFunc((e,r)=>{const o=e.softmax(n,t);return r([o]),o},r,null,"Softmax",o)}});const Uo=_e({sqrt_:function(e){const t=Me(e,"x","sqrt"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.sqrt(t);return n([t]),r},n,null,"Sqrt")}});const Vo=_e({squaredDifference_:function(e,t){let n=Me(e,"a","squaredDifference"),r=Me(t,"b","squaredDifference");[n,r]=fe(n,r),Nn(n.shape,r.shape);const o={a:n,b:r};return ke.runKernelFunc((e,t)=>{const o=e.squaredDifference(n,r);return t([n,r]),o},o,null,"SquaredDifference",{})}});const Ho=_e({squeeze_:function(e,t){const n=Me(e,"x","squeeze");return Ve(n,D(n.shape,t).newShape)}});const jo=_e({stack_:function(e,t=0){const n=$e(e,"tensors","stack");if(m(n.length>=1,()=>"Pass at least one tensor to tf.stack"),1===n.length)return Rn(n[0],t);const r=n[0].rank,o=n[0].shape,s=n[0].dtype;m(t<=r,()=>"Axis must be <= rank of the tensor"),n.forEach(e=>{g(o,e.shape,"All tensors passed to stack must have matching shapes"),m(s===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=n.map(e=>Rn(e,t));return Nt(a,t)}});const Jo=_e({step_:function(e,t=0){const n=Me(e,"x","step"),r={x:n},o={alpha:t};return ke.runKernelFunc(e=>e.step(n,t),r,null,"Step",o)}});const Yo=_e({stridedSlice_:function(e,t,n,r,o=0,s=0,a=0,i=0,u=0){null==r&&(r=new Array(t.length));let l=Me(e,"x","stridedSlice");const c={x:l},h={begin:t,end:n,strides:r,beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return ke.runKernelFunc(e=>{const c=Mt(a);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==a&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==a&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=l.rank-t.length,p=Mt(i),d=l.shape.slice();if(p.forEach(e=>{t[e]=0,n[e]=1,d.splice(e,0,1)}),l=Ve(l,d),c.length&&h>0){const e=c[0],a=h+1;t=Ct(o,e,a,t,l.shape),n=Pt(s,e,a,n,l.shape),r=_t(r,e,a,l.shape)}else for(let e=0;e<l.rank;e++)t[e]=Lt(o,t,r,l.shape,e,a),n[e]=qt(s,n,r,l.shape,e,a),r[e]=zt(r,e,a);const f=Mt(u);f.forEach(e=>{n[e]=t[e]+1,r[e]=1});const m=$t(t,n,r),g=m.filter((e,t)=>-1===f.indexOf(t));if(r.every(e=>1===e))return Ve(Kt(l,t,m),g);const b=e.stridedSlice(l,t,n,r);return Ve(b,g)},c,null,"StridedSlice",h)}});const Zo=_e({tan_:function(e){const t=Me(e,"x","tan"),n={x:t};return ke.runKernelFunc((e,n)=>{const r=e.tan(t);return n([t]),r},n,null,"Tan")}});function Xo(e,t,n){if(b(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Ae(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Et(e,t,r,n)}function Qo(e,t,n){if(b(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Ae(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Et(e,t,r,n)}function es(e,t,n){if(b(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Ae(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Et(e,t,r,n)}function ts(e,t,n){if(b(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Ae(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Et(e,t,r,n)}function ns(e,t,n){if(b(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Ae(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Et(e,t=t||r,r,n)}const rs=_e({topk_:function(e,t=1,n=!0){const r=Me(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=r.shape[r.shape.length-1];if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got `+t);const s={x:r},a={k:t,sorted:n},[i,u]=ke.runKernelFunc(e=>e.topk(r,t,n),s,null,"TopK",a);return{values:i,indices:u}}});const os=_e({truncatedNormal_:function(e,t=0,n=1,r,o){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new fo(t,n,r,!0,o),a=en(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=s.nextValue();return a.toTensor()}});const ss=_e({unsortedSegmentSum_:function(e,t,n){const r=Me(e,"x","unsortedSegmentSum"),o=Me(t,"segmentIds","unsortedSegmentSum","int32");m(v(n),()=>"numSegments must be of dtype int");const s={x:r,segmentIds:o},a={numSegments:n};return ke.runKernelFunc((e,t)=>{const s=e.unsortedSegmentSum(r,o,n);return t([o]),s},s,null,"UnsortedSegmentSum",a)}});const as=_e({unstack_:function(e,t=0){const n=Me(e,"x","unstack");m(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`),t<0&&(t+=n.shape.length);const r={value:n},o={axis:t};return ke.runKernelFunc(e=>e.unstack(n,t),r,null,"Unpack",o)}});function is(e,t=!0,n,r){return ke.makeVariable(e,t,n,r)}function us(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=en(e,"int32"),o=en([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),a=t*e.length;o.values.set(s,a)}return o.toTensor()}const ls=async function(e){const t=Me(e,"condition","whereAsync","bool"),n=await t.data(),r=us(t.shape,n);return e!==t&&t.dispose(),r};const cs=async function(e,t,n){const r=Me(e,"tensor","boolMask"),o=Me(t,"mask","boolMask","bool"),s=null==n?0:n,a=o.rank,i=r.shape;m(a>0,()=>"mask cannot be scalar"),g(i.slice(s,s+a),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+a;e++)u*=i[e];const l=i.slice(0,s).concat([u],i.slice(s+a)),c=Ve(r,l),h=Ve(o,[-1]),p=await ls(h),d=Ho(p,[1]),f=Gn(c,d,s);return e!==r&&r.dispose(),t!==o&&o.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f};const hs=_e({equalStrict_:function(e,t){bt("strict variants of ops have been deprecated and will be removed in future");const n=Me(e,"a","equalStrict"),r=Me(t,"b","equalStrict");return g(n.shape,r.shape,"Error in equalStrict: "),In(n,r)}}),ps=_e({greaterEqualStrict_:function(e,t){bt("strict variants of ops have been deprecated and will be removed in future");const n=Me(e,"a","greaterEqualStrict"),r=Me(t,"b","greaterEqualStrict");return g(n.shape,r.shape,"Error in greaterEqualStrict: "),Vn(n,r)}}),ds=_e({greaterStrict_:function(e,t){bt("strict variants of ops have been deprecated and will be removed in future");const n=Me(e,"a","greaterStrict"),r=Me(t,"b","greaterStrict");return g(n.shape,r.shape,"Error in greaterStrict: "),Un(n,r)}}),fs=_e({lessEqualStrict_:function(e,t){bt("strict variants of ops have been deprecated and will be removed in future");const n=Me(e,"a","lessEqualStrict"),r=Me(t,"b","lessEqualStrict");return g(n.shape,r.shape,"Error in lessEqualStrict: "),sr(n,r)}}),ms=_e({lessStrict_:function(e,t){bt("strict variants of ops have been deprecated and will be removed in future");const n=Me(e,"a","lessStrict"),r=Me(t,"b","lessStrict");return g(n.shape,r.shape,"Error in lessStrict: "),or(n,r)}}),gs=_e({notEqualStrict_:function(e,t){bt("strict variants of ops have been deprecated and will be removed in future");const n=Me(e,"a","notEqualStrict"),r=Me(t,"b","notEqualStrict");return g(n.shape,r.shape,"Error in notEqualStrict: "),zr(n,r)}});const bs=_e({addStrict_:function(e,t){bt("strict variants of ops have been deprecated and will be removed in future");const n=Me(e,"a","addStrict"),r=Me(t,"b","addStrict");return g(n.shape,r.shape,"Error in addStrict: "),Pe(n,r)}}),ys=_e({divStrict_:function(e,t){bt("strict variants of ops have been deprecated and will be removed in future");const n=Me(e,"a","div"),r=Me(t,"b","div");return g(n.shape,r.shape,"Error in divideStrict: "),En(n,r)}}),ws=_e({maximumStrict_:function(e,t){bt("strict variants of ops have been deprecated and will be removed in future");const n=Me(e,"a","maximumStrict"),r=Me(t,"b","maximumStrict");return g(n.shape,r.shape,"Error in maximumStrict: "),nr(n,r)}}),ks=_e({minimumStrict_:function(e,t){bt("strict variants of ops have been deprecated and will be removed in future");const n=Me(e,"a","minimumStrict"),r=Me(t,"b","minimumStrict");return g(n.shape,r.shape,"Error in minimumStrict: "),$r(n,r)}}),vs=_e({modStrict_:function(e,t){bt("strict variants of ops have been deprecated and will be removed in future");const n=Me(e,"a","modStrict"),r=Me(t,"b","modStrict");return g(n.shape,r.shape,"Error in modStrict: "),_r(n,r)}}),xs=_e({mulStrict_:function(e,t){bt("strict variants of ops have been deprecated and will be removed in future");const n=Me(e,"a","mul"),r=Me(t,"b","mul");return g(n.shape,r.shape,"Error in multiplyStrict: "),Ft(n,r)}}),Ss=_e({powStrict_:function(e,t){return bt("strict variants of ops have been deprecated and will be removed in future"),g(e.shape,t.shape,"Error in powStrict: "),Jr(e,t)}}),Es=_e({squaredDifferenceStrict_:function(e,t){bt("strict variants of ops have been deprecated and will be removed in future");const n=Me(e,"a","squaredDifferenceStrict"),r=Me(t,"b","squaredDifferenceStrict");return g(n.shape,r.shape,"Error in squaredDifferenceStrict: "),Vo(n,r)}}),Ds=_e({subStrict_:function(e,t){bt("strict variants of ops have been deprecated and will be removed in future");const n=Me(e,"a","subStrict"),r=Me(t,"b","subStrict");return g(n.shape,r.shape,"Error in subStrict: "),br(n,r)}});const Ns=_e({norm_:function(e,t="euclidean",n=null,r=!1){const o=function e(t,n,r=null){if(0===t.rank)return Be(t);if(1!==t.rank&&null===r)return e(Ve(t,[-1]),n,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return yr(Be(t),r);if(n===1/0)return gr(Be(t),r);if(n===-1/0)return Mr(Be(t),r);if("euclidean"===n||2===n)return Uo(yr(Jr(Be(t),Zn(2,"int32")),r));throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return gr(yr(Be(t),r[0]),r[1]-1);if(n===1/0)return gr(yr(Be(t),r[1]),r[0]);if(n===-1/0)return Mr(yr(Be(t),r[1]),r[0]);if("fro"===n||"euclidean"===n)return Uo(yr(Br(t),r));throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(e=Me(e,"x","norm"),t,n);let s=o.shape;if(r){const t=E(n,e.shape);s=We(o.shape,t)}return Ve(o,s)}});const Is=_e({movingAverage_:function(e,t,n,r,o=!0){const s=Me(e,"v","movingAverage"),a=Me(t,"x","movingAverage"),i=Me(n,"decay","movingAverage");me(s,a),m(k(s.shape,a.shape),()=>"Shape mismatch in v and x");const u=Zn(1),l=br(u,i);let c=Ft(br(a,s),l);if(o){m(null!=r,()=>"When using zeroDebias: true, step is required.");const e=Me(r,"step","movingAverage");c=En(c,br(u,Jr(i,e)))}return Pe(s,c)}});function Fs(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${o}.`;if(n.rank<o)throw new Error(s+` update.rank < ${o}. `);if(e.length<r+(n.rank-o))throw new Error(s+" Output shape length < "+(r+(n.rank-o)));if(n.rank!==o+e.length-r)throw new Error(s+" update.rank != "+(o+e.length-r));for(let e=0;e<o;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-o;++t)if(n.shape[t+o]!==e[t+r])throw new Error(s+` updates.shape[${t+o}] (${n.shape[t+o]}) != shape[${t+o}] (${e[t+o]})`)}function As(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}Fs(n,t,e)}function Ts(e,t,n){const r=t.shape.length,o=r>1?t.shape[r-1]:1,s=n.length;let a=1;for(let e=o;e<s;++e)a*=n[e];const i=o<1?1:o;return{sliceRank:o,numUpdates:w(t.shape)/i,sliceSize:a,strides:[...q(n.slice(0,o)),1],outputSize:w(n)}}var Ms=Object.freeze({__proto__:null,validateUpdateShape:Fs,validateInput:As,calculateShapes:Ts});const $s=_e({scatterND_:function(e,t,n){const r=Me(e,"indices","scatterND","int32"),o=Me(t,"updates","scatterND");As(o,r,n);const s={indices:r,updates:o},a={shape:n};return ke.runKernelFunc(e=>e.scatterND(r,o,n),s,null,"ScatterNd",a)}});const _s=_e({sparseToDense_:function(e,t,n,r=0){const o=Me(e,"sparseIndices","sparseToDense","int32"),s=Me(t,"sparseValues","sparseToDense"),a=Me(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const o=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const a=t.size;if(0!==t.rank&&(1!==t.rank||a!==o))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${o}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,s,n,a);const i={sparseIndices:o,sparseValues:s,defaultValue:a},u={outputShape:n};return ke.runKernelFunc(e=>e.sparseToDense(o,s,n,a),i,null,"SparseToDense",u)}});const Bs=_e({gatherND_:function(e,t){const n=Me(t,"indices","gatherND","int32"),r=Me(e,"x","gatherND"),o={params:r,indices:n};return ke.runKernelFunc(e=>e.gatherND(r,n),o,null,"GatherNd")}});const Rs=_e({dropout_:function(e,t,n,r){const o=Me(e,"x","dropout");if(m("float32"===o.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),m(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof se?o.clone():o;const s=function(e,t){if(null==t)return e.shape.slice();if(k(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(o,n),a=1-t,i=En(On(Pe(wo(s,0,1,"float32",r),a)),a);return Ft(o,i)}});function Cs(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Ps(e,t,n){const r=1-e%2,o=new Float32Array(e);for(let s=0;s<e;++s){const a=2*Math.PI*s/(e+r-1);o[s]=t-n*Math.cos(a)}return ko(o,"float32")}const zs=async function(e,t,n=1){const r=Me(e,"predictions","inTopK"),o=Me(t,"targets","inTopK");m(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),m(r.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${o.rank}`),g(r.shape.slice(0,r.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];m(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);const a=await r.data(),i=await o.data(),[u,l]=[a.length/s,s],c=N("bool",u);for(let e=0;e<u;e++){const t=e*l,r=a.subarray(t,t+l),o=[];for(let e=0;e<r.length;e++)o.push({value:r[e],index:e});o.sort((e,t)=>t.value-e.value),c[e]=0;for(let t=0;t<n;t++)if(o[t].index===i[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==o&&o.dispose(),Dt(c,o.shape,"bool")};const Ls=_e({conv2DBackpropFilter_:function(e,t,n,r,o,s="NHWC",a){let i=e;3===e.rank&&(i=Ve(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Ve(t,[1,t.shape[0],t.shape[1],t.shape[2]])),m(4===i.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+i.shape+"."),m(4===u.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."),m(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const l="NHWC"===s?i.shape[3]:i.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];m(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),m(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),null!=a&&m(v(o),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);const h={x:i,dy:u},p={strides:r,pad:o,dataFormat:s,dimRoundingMode:a};return ke.runKernelFunc(e=>{const t=mt(s),l=at(i.shape,n,r,1,o,a,!1,t);return e.conv2dDerFilter(i,u,l)},h,null,"Conv2DBackpropFilter",p)}});function qs(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Ft(e,Jo(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Os(e,t){let n=t;const r=Dn(e.shape,t.shape);return r.length>0&&(n=yr(n,r)),Ve(n,e.shape)}function Ws(e,t,n){if("linear"===t)return e;if("relu"===t)return So(e);if("elu"===t)return $n(e);if("relu6"===t)return Eo(e);if("prelu"===t)return Yr(e,n);throw new Error(`Unknown fused activation ${t}.`)}const Ks=(e,t)=>!(e>0)||"linear"===t;const Gs=_e({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l}){if(u=u||"linear",!1===Ks(ke.state.gradientDepth,u)){let c=ln(e,t,n,r,o,s,a);return null!=i&&(c=Pe(c,i)),Ws(c,u,l)}const c=Me(e,"x","conv2d"),h=Me(t,"filter","conv2d");let p=c,d=!1;3===c.rank&&(d=!0,p=Ve(c,[1,c.shape[0],c.shape[1],c.shape[2]])),m(4===p.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+p.rank+"."),m(4===h.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+h.rank+"."),null!=a&&m(v(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`),m(p.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${h.shape[2]}.`),m(ft(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),m("NHWC"===o,()=>`Error in conv2d: got dataFormat of ${o} but only NHWC is currently supported.`);const f=at(p.shape,h.shape,n,s,r,a);let g,b;null!=i&&(g=Me(i,"bias","fused conv2d"),[g]=fe(g,c),Nn(f.outShape,g.shape)),null!=l&&(b=Me(l,"prelu weights","fused conv2d"));const y=(e,t)=>{const[o,a,i,l]=t,c=qs(e,i,u);m(dt(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const h=[hn(a.shape,c,o,n,r),Ls(a,c,o.shape,n,r)];if(null!=l){const e=Os(l,c);h.push(e)}return h},w=e=>e.fusedConv2d({input:p,filter:h,convInfo:f,bias:g,activation:u,preluActivationWeights:b}),k={x:p,filter:h,bias:g,preluActivationWeights:b},x={strides:n,pad:r,dataFormat:o,dilations:s,dimRoundingMode:a,activation:u};if(null==i){return hr((e,t,n)=>{let r=ke.runKernelFunc(w,k,null,"FusedConv2D",x);return n([t,e,r]),d&&(r=Ve(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}})(p,h)}return hr((e,t,n,r)=>{let o=ke.runKernelFunc(w,k,null,"FusedConv2D",x);return r([t,e,o,n]),d&&(o=Ve(o,[o.shape[1],o.shape[2],o.shape[3]])),{value:o,gradFunc:y}})(p,h,g)}});const Us=_e({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r){let o=e;3===e.rank&&(o=Ve(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let s=t;3===s.rank&&(s=Ve(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const a={x:o,dy:s};return ke.runKernelFunc(e=>e.depthwiseConv2DDerFilter(o,s,r),a,null,"DepthwiseConv2dNativeBackpropFilter")}});const Vs=_e({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r){let o=t,s=!1;3===t.rank&&(s=!0,o=Ve(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const a={dy:o},i=ke.runKernelFunc(e=>e.depthwiseConv2DDerInput(o,n,r),a,null,"DepthwiseConv2dNativeBackpropInput");return s?Ve(i,[i.shape[1],i.shape[2],i.shape[3]]):i}});const Hs=_e({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l}){if(!1===Ks(ke.state.gradientDepth,u)){let c=kn(e,t,n,r,o,s,a);return null!=i&&(c=Pe(c,i)),Ws(c,u,l)}const c=Me(e,"x","depthwiseConv2d"),h=Me(t,"filter","depthwiseConv2d");let p=c,d=!1;3===c.rank&&(d=!0,p=Ve(c,[1,c.shape[0],c.shape[1],c.shape[2]])),m(4===p.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),m(4===h.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),m(p.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),null==s&&(s=[1,1]),m(ft(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),null!=a&&m(v(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${r}.`);const f=at(p.shape,h.shape,n,s,r,a,!0);let g,b;null!=i&&(g=Me(i,"bias","fused conv2d"),[g]=fe(g,c),Nn(f.outShape,g.shape)),null!=l&&(b=Me(l,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{m(dt(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);const[n,r,o,a]=t,i=qs(e,o,u),l=Vs(r.shape,i,n,f),c=Us(r,i,n.shape,f);if(null!=a){return[l,c,Os(g,i)]}return[l,c]},w=e=>e.fusedDepthwiseConv2D({input:p,filter:h,convInfo:f,bias:g,activation:u,preluActivationWeights:b}),k={x:p,filter:h,bias:g,preluActivationWeights:b},x={strides:n,pad:r,dataFormat:o,dilations:s,dimRoundingMode:a,activation:u};if(null==i){return hr((e,t,n)=>{let r=ke.runKernelFunc(w,k,null,"FusedDepthwiseConv2D",x);return n([t,e,r]),d&&(r=Ve(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}})(p,h)}return hr((e,t,n,r)=>{let o=ke.runKernelFunc(w,k,null,"FusedDepthwiseConv2D",x);return r([t,e,o,n]),d&&(o=Ve(o,[o.shape[1],o.shape[2],o.shape[3]])),{value:o,gradFunc:y}})(p,h,g)}});const js=_e({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:o,activation:s="linear",preluActivationWeights:a}){if(!1===Ks(ke.state.gradientDepth,s)){let i=It(e,t,n,r);return null!=o&&(i=Pe(i,o)),Ws(i,s,a)}let i=Me(e,"a","fused matMul"),u=Me(t,"b","fused matMul");[i,u]=fe(i,u);const l=n?i.shape[i.rank-2]:i.shape[i.rank-1],c=r?u.shape[u.rank-1]:u.shape[u.rank-2],h=n?i.shape[i.rank-1]:i.shape[i.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],d=i.shape.slice(0,-2),f=u.shape.slice(0,-2),g=w(d),b=w(f);m(i.rank>=2&&u.rank>=2&&i.rank===u.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${i.rank} and ${u.rank}.`),m(k(d,f),()=>`Error in fused matMul: outer dimensions (${d}) and (${f}) of Tensors with shapes ${i.shape} and `+u.shape+" must match."),m(l===c,()=>`Error in fused matMul: inner shapes (${l}) and (${c}) of Tensors with shapes ${i.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);const y=i.shape.slice(0,-2).concat([h,p]),v=Ve(i,n?[g,l,h]:[g,h,l]),x=Ve(u,r?[b,p,c]:[b,c,p]);let S,E;null!=o&&(S=Me(o,"bias","fused matMul"),[S]=fe(S,i),Nn(y,S.shape)),null!=a&&(E=Me(a,"prelu weights","fused matMul"));const D=(e,t)=>{const[a,i,u,l]=t,c=qs(Ve(e,u.shape),u,s);let h,p;if(n||r?!n&&r?(h=It(c,i,!1,!1),p=It(c,a,!0,!1)):n&&!r?(h=It(i,c,!1,!0),p=It(a,c,!1,!1)):(h=It(i,c,!0,!0),p=It(c,a,!0,!0)):(h=It(c,i,!1,!0),p=It(a,c,!0,!1)),null!=o){return[h,p,Os(l,c)]}return[h,p]},N=e=>e.fusedBatchMatMul({a:v,b:x,transposeA:n,transposeB:r,bias:S,activation:s,preluActivationWeights:E}),I={a:v,b:x,bias:S,preluActivationWeights:E},F={transposeA:n,transposeB:r,activation:s};if(null==o){return hr((e,t,n)=>{const r=ke.runKernelFunc(N,I,null,"_FusedMatMul",F);return n([e,t,r]),{value:Ve(r,y),gradFunc:D}})(v,x)}return hr((e,t,n,r)=>{const o=ke.runKernelFunc(N,I,null,"_FusedMatMul",F);return r([e,t,o,n]),{value:Ve(o,y),gradFunc:D}})(v,x,S)}});var Js=Object.freeze({__proto__:null,conv2d:Gs,depthwiseConv2d:Hs,matMul:js});const Ys=_e({hammingWindow_:function(e){return Ps(e,.54,.46)}});const Zs=_e({hannWindow_:function(e){return Ps(e,.5,.5)}});const Xs=_e({frame_:function(e,t,n,r=!1,o=0){let s=0;const a=[];for(;s+t<=e.size;)a.push(Kt(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,i=Nt([Kt(e,s,t-r),qn([r],o)]);a.push(i),s+=n}return 0===a.length?Xo([],[0,t]):Ve(Nt(a),[a.length,t])}});const Qs=_e({stft_:function(e,t,n,r,o=Zs){null==r&&(r=Cs(t));const s=Xs(e,t,n),a=Ft(s,o(t)),i=[];for(let e=0;e<s.shape[0];e++)i.push(Mo(Kt(a,[e,0],[1,t]),r));return Nt(i)}});const ea=_e({cropAndResize_:function(e,t,n,r,o,s){const a=Me(e,"image","cropAndResize"),i=Me(t,"boxes","cropAndResize","float32"),u=Me(n,"boxInd","cropAndResize","int32");o=o||"bilinear",s=s||0;const l=i.shape[0];m(4===a.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),m(2===i.rank&&4===i.shape[1],()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`),m(1===u.rank&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`),m(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),m(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),m("bilinear"===o||"nearest"===o,()=>"method must be bilinear or nearest, but was "+o);const c={image:a,boxes:i,boxInd:u},h={method:o,extrapolationValue:s,cropSize:r};return ke.runKernelFunc(e=>e.cropAndResize(a,i,u,r,o,s),c,null,"CropAndResize",h)}});const ta=_e({flipLeftRight_:function(e){const t=Me(e,"image","flipLeftRight","float32");m(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return ke.runKernel("FlipLeftRight",n,{})}});const na=_e({rotateWithOffset_:function(e,t,n=0,r=.5){const o=Me(e,"image","rotateWithOffset","float32");m(4===o.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);const s={image:o},a={radians:t,fillValue:n,center:r};return ke.runKernel("RotateWithOffset",s,a)}});function ra(e,t,n,r,o,s){null==r&&(r=.5),null==o&&(o=Number.NEGATIVE_INFINITY),null==s&&(s=0);const a=e.shape[0];return n=Math.min(n,a),m(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),m(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),m(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),m(1===t.rank,()=>"scores must be a 1D tensor"),m(t.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was `+t.shape[0]),m(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:o,softNmsSigma:s}}const oa=_e({nonMaxSuppression_:function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY){const s=Me(e,"boxes","nonMaxSuppression"),a=Me(t,"scores","nonMaxSuppression"),i=ra(s,a,n,r,o);n=i.maxOutputSize,r=i.iouThreshold,o=i.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:o};return ke.runKernelFunc(e=>e.nonMaxSuppression(s,a,n,r,o),{boxes:s,scores:a},null,"NonMaxSuppressionV3",u)}});function sa(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,o=e.length,s=0,a=!1;for(;r<o;){s=r+(o-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(o=s,a=!i)}return a?r:-r-1}(e,t,n||aa)}(e,t,n),o=r<0?-(r+1):r;e.splice(o,0,t)}function aa(e,t){return e>t?1:e<t?-1:0}function ia(e,t,n,r,o){return ca(e,t,n,r,o,0).selectedIndices}function ua(e,t,n,r,o,s){return ca(e,t,n,r,o,0,!1,s,!0)}function la(e,t,n,r,o,s){return ca(e,t,n,r,o,s,!0)}function ca(e,t,n,r,o,s,a=!1,i=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>o&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(da);const c=s>0?-.5/s:0,h=[],p=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:a}=t;if(n<o)break;let i=!1;for(let n=h.length-1;n>=a;--n){const a=ha(e,s,h[n]);if(a>=r){i=!0;break}if(t.score=t.score*pa(r,c,a),t.score<=o)break}t.suppressBeginIndex=h.length,i||(t.score===n?(h.push(s),p.push(t.score)):t.score>o&&sa(l,t,da))}const d=h.length,f=n-d;i&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:ko(h,"int32")};return a&&(m.selectedScores=ko(p,"float32")),u&&(m.validOutputs=Zn(d,"int32")),m}function ha(e,t,n){const r=e.subarray(4*t,4*t+4),o=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(o[0],o[2]),c=Math.min(o[1],o[3]),h=Math.max(o[0],o[2]),p=Math.max(o[1],o[3]),d=(i-s)*(u-a),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(a,c),b=Math.min(i,h),y=Math.min(u,p),w=Math.max(b-m,0)*Math.max(y-g,0);return w/(d+f-w)}function pa(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function da(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const fa=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY){const s=Me(e,"boxes","nonMaxSuppressionAsync"),a=Me(t,"scores","nonMaxSuppressionAsync"),i=ra(s,a,n,r,o);n=i.maxOutputSize,r=i.iouThreshold,o=i.scoreThreshold;const u=await Promise.all([s.data(),a.data()]),l=ia(u[0],u[1],n,r,o);return s!==e&&s.dispose(),a!==t&&a.dispose(),l};const ma=_e({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,s=0){const a=Me(e,"boxes","nonMaxSuppression"),i=Me(t,"scores","nonMaxSuppression"),u=ra(a,i,n,r,o,s),l={boxes:a,scores:i},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:o=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},h=ke.runKernel("NonMaxSuppressionV5",l,c);return{selectedIndices:h[0],selectedScores:h[1]}}});const ga=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,s=0){const a=Me(e,"boxes","nonMaxSuppressionAsync"),i=Me(t,"scores","nonMaxSuppressionAsync"),u=ra(a,i,n,r,o,s);n=u.maxOutputSize,r=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([a.data(),i.data()]),c=la(l[0],l[1],n,r,o,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),c};const ba=_e({nonMaxSuppressionPadded_:function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,s=!1){const a=Me(e,"boxes","nonMaxSuppression"),i=Me(t,"scores","nonMaxSuppression"),u=ra(a,i,n,r,o,null),l={boxes:a,scores:i},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},h=ke.runKernel("NonMaxSuppressionV4",l,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const ya=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,s=!1){const a=Me(e,"boxes","nonMaxSuppressionAsync"),i=Me(t,"scores","nonMaxSuppressionAsync"),u=ra(a,i,n,r,o,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([a.data(),i.data()]),f=ua(p,d,l,c,h,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),f};const wa=_e({resizeBilinear_:function(e,t,n=!1){const r=Me(e,"images","resizeBilinear");m(3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),m(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+".");let o=r,s=!1;3===r.rank&&(s=!0,o=Ve(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[a,i]=t,u={images:o},l={alignCorners:n,size:t},c=ke.runKernelFunc((e,t)=>(t([o]),e.resizeBilinear(o,a,i,n)),u,null,"ResizeBilinear",l);return s?Ve(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const ka=_e({resizeNearestNeighbor_:function(e,t,n=!1){const r=Me(e,"images","resizeNearestNeighbor");m(3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),m(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."),m("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype");let o=r,s=!1;3===r.rank&&(s=!0,o=Ve(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[a,i]=t,u={images:o},l={alignCorners:n,size:t},c=ke.runKernelFunc((e,t)=>(t([o]),e.resizeNearestNeighbor(o,a,i,n)),u,null,"ResizeNearestNeighbor",l);return s?Ve(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const va=_e({bandPart_:function(e,t,n){m(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),m(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=Me(e,"a","bandPart");m(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const o=r.shape,[s,a]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);t<0&&(t=s),n<0&&(n=a);const i=Ve(vo(0,s,1,"int32"),[-1,1]),u=vo(0,a,1,"int32"),l=br(i,u),c=vr(sr(l,Zn(+t,"int32")),Vn(l,Zn(-n,"int32"))),h=Fr([s,a],r.dtype);return Ve(jo(as(Ve(r,[-1,s,a])).map(e=>Fn(c,e,h))),o)}});const xa=_e({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,m(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)m(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=To(e,e.shape[0],0).map(e=>Ho(e,[0]));m(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ke.tidy(()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Ft(yr(Ft(n[r],e)),n[r]);e=br(e,t)}return En(e,Ns(e,"euclidean"))}));return t?jo(n,0):n}});function Sa(e,t=!1){return ke.tidy(()=>{m(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let o=zn(n),s=Xt(e);const a=Xo([[1]],[1,1]);let i=Xt(a);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=i,l=o;[i,s,o]=ke.tidy(()=>{const t=Kt(s,[e,e],[n-e,1]),u=Ns(t),l=Kt(s,[e,e],[1,1]),c=Fn(Un(l,0),Xo([[-1]]),Xo([[1]])),h=br(l,Ft(c,u)),p=En(t,h);i=1===p.shape[0]?Xt(a):Nt([a,Kt(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=dr(En(It(c,h),u)),f=Kt(s,[e,0],[n-e,r]),m=Ft(d,i),g=He(i);if(0===e)s=br(f,It(m,It(g,f)));else{const t=br(f,It(m,It(g,f)));s=Nt([Kt(s,[0,0],[e,r]),t],0)}const b=He(m),y=Kt(o,[0,e],[n,o.shape[1]-e]);if(0===e)o=br(y,It(It(y,i),b));else{const t=br(y,It(It(y,i),b));o=Nt([Kt(o,[0,0],[n,e]),t],1)}return[i,s,o]}),wt([t,u,l])}return!t&&n>r&&(o=Kt(o,[0,0],[n,r]),s=Kt(s,[0,0],[r,r])),[o,s]})}const Ea=_e({qr_:function(e,t=!1){if(m(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank),2===e.rank)return Sa(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=as(Ve(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),o=[],s=[];return r.forEach(e=>{const[n,r]=Sa(e,t);o.push(n),s.push(r)}),[Ve(jo(o,0),e.shape),Ve(jo(s,0),e.shape)]}}});var Da;(Da=e.Reduction||(e.Reduction={}))[Da.NONE=0]="NONE",Da[Da.MEAN=1]="MEAN",Da[Da.SUM=2]="SUM",Da[Da.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const Na=_e({computeWeightedLoss_:function(t,n,r=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const o=Me(t,"losses","computeWeightedLoss");let s=null;null!=n&&(s=Me(n,"weights","computeWeightedLoss"));const a=null==s?o:Ft(o,s);if(r===e.Reduction.NONE)return a;if(r===e.Reduction.SUM)return yr(a);if(r===e.Reduction.MEAN){if(null==s)return Tr(a);{const e=o.size/s.size,t=En(yr(a),yr(s));return e>1?En(t,Zn(e)):t}}if(r===e.Reduction.SUM_BY_NONZERO_WEIGHTS){if(null==s)return En(yr(a),Zn(o.size));{const e=Ft(s,Ar(o.shape)),t=rt(yr(zr(e,Zn(0))),"float32");return En(yr(a),t)}}throw Error("Unknown reduction: "+r)}});const Ia=_e({absoluteDifference_:function(t,n,r,o=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const s=Me(t,"labels","absoluteDifference"),a=Me(n,"predictions","absoluteDifference");let i=null;null!=r&&(i=Me(r,"weights","absoluteDifference")),g(s.shape,a.shape,"Error in absoluteDifference: ");const u=Be(br(s,a));return Na(u,i,o)}});const Fa=_e({cosineDistance_:function(t,n,r,o,s=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const a=Me(t,"labels","cosineDistance"),i=Me(n,"predictions","cosineDistance");let u=null;null!=o&&(u=Me(o,"weights","cosineDistance")),g(a.shape,i.shape,"Error in cosineDistance: ");const l=Zn(1),c=br(l,yr(Ft(a,i),r,!0));return Na(c,u,s)}});const Aa=_e({hingeLoss_:function(t,n,r,o=e.Reduction.SUM_BY_NONZERO_WEIGHTS){let s=Me(t,"labels","hingeLoss");const a=Me(n,"predictions","hingeLoss");let i=null;null!=r&&(i=Me(r,"weights","hingeLoss")),g(s.shape,a.shape,"Error in hingeLoss: ");const u=Zn(1);s=br(Ft(Zn(2),s),u);const l=So(br(u,Ft(s,a)));return Na(l,i,o)}});const Ta=_e({huberLoss_:function(t,n,r,o=1,s=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const a=Me(t,"labels","huberLoss"),i=Me(n,"predictions","huberLoss");let u=null;null!=r&&(u=Me(r,"weights","huberLoss")),g(a.shape,i.shape,"Error in huberLoss: ");const l=Zn(o),c=Be(br(i,a)),h=$r(c,l),p=br(c,h),d=Pe(Ft(Zn(.5),Br(h)),Ft(l,p));return Na(d,u,s)}});const Ma=_e({logLoss_:function(t,n,r,o=1e-7,s=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const a=Me(t,"labels","logLoss"),i=Me(n,"predictions","logLoss");let u=null;null!=r&&(u=Me(r,"weights","logLoss")),g(a.shape,i.shape,"Error in logLoss: ");const l=Zn(1),c=Zn(o),h=dr(Ft(a,ur(Pe(i,c)))),p=Ft(br(l,a),ur(Pe(br(l,i),c))),d=br(h,p);return Na(d,u,s)}});const $a=_e({meanSquaredError_:function(t,n,r,o=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const s=Me(t,"labels","meanSquaredError"),a=Me(n,"predictions","meanSquaredError");let i=null;null!=r&&(i=Me(r,"weights","meanSquaredError")),g(s.shape,a.shape,"Error in meanSquaredError: ");const u=Vo(s,a);return Na(u,i,o)}});const _a=_e({sigmoidCrossEntropy_:function(t,n,r,o=0,s=e.Reduction.SUM_BY_NONZERO_WEIGHTS){let a=Me(t,"multiClassLabels","sigmoidCrossEntropy");const i=Me(n,"logits","sigmoidCrossEntropy");let u=null;if(null!=r&&(u=Me(r,"weights","sigmoidCrossEntropy")),g(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),o>0){const e=Zn(o),t=Zn(1),n=Zn(.5);a=Pe(Ft(a,br(t,e)),Ft(n,e))}const l=function(e,t){const n=Me(e,"labels","sigmoidCrossEntropyWithLogits"),r=Me(t,"logits","sigmoidCrossEntropyWithLogits");g(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=So(r),s=Ft(r,n),a=lr(Bn(dr(Be(r))));return Pe(br(o,s),a)}(a,i);return Na(l,u,s)}});const Ba=_e({softmaxCrossEntropy_:function(t,n,r,o=0,s=e.Reduction.SUM_BY_NONZERO_WEIGHTS){let a=Me(t,"onehotLabels","softmaxCrossEntropy");const i=Me(n,"logits","softmaxCrossEntropy");let u=null;if(null!=r&&(u=Me(r,"weights","softmaxCrossEntropy")),g(a.shape,i.shape,"Error in softmaxCrossEntropy: "),o>0){const e=Zn(o),t=Zn(1),n=Zn(a.shape[1]);a=Pe(Ft(a,br(t,e)),En(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);return hr((e,t,r)=>{const o=kr(t,[n],!0),s=br(rt(t,"float32"),o);r([e,s]);const a=dr(Ft(s,e));return{value:yr(a,[n]),gradFunc:(e,t)=>{const[r,o]=t,s=We(e.shape,[n]);return[Ft(Ve(e,s),br(rt(r,"float32"),Bn(o))),Ft(Ve(e,s),br(Bn(o),rt(r,"float32")))]}}})(e,t)}(a,i);return Na(l,u,s)}}),Ra={fft:Ln,ifft:Hn,rfft:Mo,irfft:Xn},Ca={hammingWindow:Ys,hannWindow:Zs,frame:Xs,stft:Qs},Pa={flipLeftRight:ta,resizeNearestNeighbor:ka,resizeBilinear:wa,rotateWithOffset:na,cropAndResize:ea,nonMaxSuppression:oa,nonMaxSuppressionAsync:fa,nonMaxSuppressionWithScore:ma,nonMaxSuppressionWithScoreAsync:ga,nonMaxSuppressionPadded:ba,nonMaxSuppressionPaddedAsync:ya},za={bandPart:va,gramSchmidt:xa,qr:Ea},La={absoluteDifference:Ia,computeWeightedLoss:Na,cosineDistance:Fa,hingeLoss:Aa,huberLoss:Ta,logLoss:Ma,meanSquaredError:$a,sigmoidCrossEntropy:_a,softmaxCrossEntropy:Ba};oe=Object.freeze({__proto__:null,image:Pa,linalg:za,losses:La,spectral:Ra,fused:Js,signal:Ca,abs:Be,acos:Re,acosh:Ce,add:Pe,addN:ze,all:je,any:Je,argMax:Ye,argMin:Ze,asin:Xe,asinh:Qe,atan:et,atan2:tt,atanh:nt,avgPool:gt,avgPool3d:vt,basicLSTMCell:Ut,batchToSpaceND:Vt,batchNorm:jt,batchNorm2d:Jt,batchNorm3d:Yt,batchNorm4d:Zt,broadcastTo:Qt,buffer:en,cast:rt,ceil:tn,clipByValue:nn,clone:Xt,complex:rn,concat:Nt,concat1d:on,concat2d:sn,concat3d:an,concat4d:un,conv1d:cn,conv2d:ln,conv2dTranspose:pn,conv3d:dn,conv3dTranspose:mn,cos:gn,cosh:bn,cumsum:yn,depthToSpace:wn,depthwiseConv2d:kn,diag:vn,dilation2d:xn,div:En,divNoNan:Tn,dot:Mn,elu:$n,equal:In,erf:_n,exp:Bn,expandDims:Rn,expm1:Cn,eye:zn,fft:Ln,fill:qn,floor:On,floorDiv:Sn,gather:Gn,greater:Un,greaterEqual:Vn,ifft:Hn,imag:jn,irfft:Xn,isFinite:Qn,isInf:er,isNaN:tr,leakyRelu:rr,less:or,lessEqual:sr,linspace:ar,localResponseNormalization:ir,log:ur,log1p:lr,logSigmoid:mr,logSoftmax:wr,logSumExp:kr,logicalAnd:vr,logicalNot:xr,logicalOr:Sr,logicalXor:Er,matMul:It,max:gr,maxPool:Dr,maxPool3d:Nr,maxPoolWithArgmax:Ir,maximum:nr,mean:Tr,min:Mr,minimum:$r,mod:_r,moments:Rr,mul:Ft,multiRNNCell:Cr,multinomial:Pr,neg:dr,notEqual:zr,oneHot:Lr,ones:Ar,onesLike:qr,outerProduct:Or,pad:Wr,pad1d:Kr,pad2d:Gr,pad3d:Ur,pad4d:Vr,pool:jr,pow:Jr,prelu:Yr,print:Zr,prod:Xr,rand:Qr,randomGamma:bo,randomNormal:yo,randomUniform:wo,range:vo,real:Jn,reciprocal:xo,relu:So,relu6:Eo,reshape:Ve,reverse:Yn,reverse1d:Do,reverse2d:No,reverse3d:Io,reverse4d:Fo,rfft:Mo,round:$o,rsqrt:_o,scalar:Zn,selu:Bo,separableConv2d:Ro,setdiff1dAsync:Co,sigmoid:At,sign:Po,sin:zo,sinh:Lo,slice:Kt,slice1d:qo,slice2d:Oo,slice3d:Wo,slice4d:Ko,softmax:Go,softplus:fr,spaceToBatchND:Hr,split:To,sqrt:Uo,square:Br,squaredDifference:Vo,squeeze:Ho,stack:jo,step:Jo,stridedSlice:Yo,sub:br,sum:yr,tan:Zo,tanh:Gt,tensor:Dt,tensor1d:ko,tensor2d:Xo,tensor3d:Qo,tensor4d:es,tensor5d:ts,tensor6d:ns,tile:Pn,topk:rs,truncatedNormal:os,unsortedSegmentSum:ss,unstack:as,variable:is,where:Fn,whereAsync:ls,zeros:Fr,zerosLike:An,op:_e,booleanMaskAsync:cs,equalStrict:hs,greaterEqualStrict:ps,greaterStrict:ds,lessEqualStrict:fs,lessStrict:ms,notEqualStrict:gs,addStrict:bs,divStrict:ys,maximumStrict:ws,minimumStrict:ks,modStrict:vs,mulStrict:xs,powStrict:Ss,squaredDifferenceStrict:Es,subStrict:Ds,transpose:He,norm:Ns,movingAverage:Is,scatterND:$s,sparseToDense:_s,gatherND:Bs,dropout:Rs,enclosingPowerOfTwo:Cs,cosineWindow:Ps,inTopKAsync:zs});const qa={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};function Oa(e,t){const n={};let r,o=0;for(const s of t){const t=s.name,a=s.dtype,i=s.shape,u=w(i);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${a}.`)}const i=qa[n.dtype],c=e.slice(o,o+u*i),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===a)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=ja()),l=r(h)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}o+=u*i}else if("string"===a){const t=w(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(o,o+4))[0];o+=4;const n=new Uint8Array(e.slice(o,o+t));l.push(n),o+=t}}else{const r=qa[a],s=e.slice(o,o+u*r);if("float32"===a)l=new Float32Array(s);else if("int32"===a)l=new Int32Array(s);else if("bool"===a)l=new Uint8Array(s);else{if("complex64"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const o=Dt(e,i,"float32"),a=Dt(r,i,"float32");n[t]=rn(o,a)}}o+=u*r}"complex64"!==a&&(n[t]=Dt(l,i,a))}return n}function Wa(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)});const r=new Uint8Array(t);let o=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),o),o+=e.byteLength}),r.buffer}const Ka="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ga(e){return Ka?Buffer.byteLength(e):new Blob([e]).size}function Ua(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function Va(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Ha(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ga(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ga(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function ja(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const o=new ArrayBuffer(4*r.length),s=new Uint32Array(o);for(let o=0;o<r.length;o++){const a=r[o],i=e[n[a>>10]+(1023&a)]+t[a>>10];s[o]=i}return new Float32Array(o)}}class Ja{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ja.instance&&(Ja.instance=new Ja),Ja.instance}static registerSaveRouter(e){Ja.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ja.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ja.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ja.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Ja.getInstance().loadRouters:Ja.getInstance().saveRouters).forEach(t=>{const o=t(e,n);null!==o&&r.push(o)}),r}}class Ya{constructor(){this.managers={}}static getInstance(){return null==Ya.instance&&(Ya.instance=new Ya),Ya.instance}static registerManager(e,t){m(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),m(e.length>0,()=>"scheme must not be an empty string.");const n=Ya.getInstance();m(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function Za(e){if(-1===e.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+Ya.getSchemes().join(","));return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function Xa(e,t,n=!1){m(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=Ja.getLoadHandlers(e);m(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),m(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const o=r[0],s=Ja.getSaveHandlers(t);m(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),m(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const a=s[0],i=Za(e).scheme,u=Za(e).path,l=i===Za(e).scheme,c=await o.load();n&&l&&await Ya.getManager(i).removeModel(u);const h=await a.save(c);return n&&!l&&await Ya.getManager(i).removeModel(u),h.modelArtifactsInfo}function Qa(){if(!n().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ei(e){const t=e.result;t.createObjectStore("models_store",{keyPath:"modelPath"}),t.createObjectStore("model_info_store",{keyPath:"modelPath"})}class ti{constructor(e){if(this.indexedDB=Qa(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>ei(r),r.onsuccess=()=>{const o=r.result;if(null==t){const t=o.transaction("models_store","readonly"),r=t.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return o.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(o.close(),n(r.error)),t.oncomplete=()=>o.close()}else{const r=Ha(t),s=o.transaction("model_info_store","readwrite");let a=s.objectStore("model_info_store");const i=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=o.transaction("models_store","readwrite");const i=u.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{a=s.objectStore("model_info_store");const t=a.delete(this.modelPath);t.onsuccess=()=>(o.close(),n(i.error)),t.onerror=e=>(o.close(),n(i.error))}},i.onerror=e=>(o.close(),n(i.error)),s.oncomplete=()=>{null==u?o.close():u.oncomplete=()=>o.close()}}},r.onerror=e=>n(r.error)})}}ti.URL_SCHEME="indexeddb://";const ni=e=>{return n().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ti.URL_SCHEME)?(t=e.slice(ti.URL_SCHEME.length),new ti(t)):null;var t};Ja.registerSaveRouter(ni),Ja.registerLoadRouter(ni);class ri{constructor(){this.indexedDB=Qa()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>ei(n),n.onsuccess=()=>{const r=n.result,o=r.transaction("model_info_store","readonly"),s=o.objectStore("model_info_store").getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),o.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(ti.URL_SCHEME)?t.slice(ti.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>ei(r),r.onsuccess=()=>{const o=r.result,s=o.transaction("model_info_store","readwrite"),a=s.objectStore("model_info_store"),i=a.get(e);let u;i.onsuccess=()=>{if(null==i.result)return o.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=a.delete(e),s=()=>{u=o.transaction("models_store","readwrite");const r=u.objectStore("models_store").delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),o.close(),n(i.error))}},i.onerror=e=>(o.close(),n(i.error)),s.oncomplete=()=>{null==u?o.close():u.oncomplete=()=>o.close()}},r.onerror=e=>n(r.error)})}}if(n().getBool("IS_BROWSER"))try{Ya.registerManager(ti.URL_SCHEME,new ri)}catch(e){}const oi="tensorflowjs_models",si="info",ai="model_topology",ii="weight_specs",ui="weight_data",li="model_metadata";function ci(e){return{info:[oi,e,si].join("/"),topology:[oi,e,ai].join("/"),weightSpecs:[oi,e,ii].join("/"),weightData:[oi,e,ui].join("/"),modelMetadata:[oi,e,li].join("/")}}function hi(e){const t=e.split("/");if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join("/")}class pi{constructor(e){if(!n().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ci(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Ha(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ka)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(null!=o){const e=JSON.parse(o);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,t.userDefinedMetadata=e.userDefinedMetadata}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ka){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}pi.URL_SCHEME="localstorage://";const di=e=>{return n().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(pi.URL_SCHEME)?(t=e.slice(pi.URL_SCHEME.length),new pi(t)):null;var t};Ja.registerSaveRouter(di),Ja.registerLoadRouter(di);class fi{constructor(){m(n().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),m("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=oi+"/",n="/"+si;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(t)&&o.endsWith(n)){e[hi(o)]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){var t;const n=ci(e=(t=e).startsWith(pi.URL_SCHEME)?t.slice(pi.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}if(n().getBool("IS_BROWSER"))try{Ya.registerManager(pi.URL_SCHEME,new fi)}catch(e){}function mi(e){return new Promise(e=>setTimeout(e)).then(e)}class gi{constructor(e){if(!n().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(gi.URL_SCHEME)&&(e=e.slice(gi.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},o=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=o,await mi(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await mi(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ha(e)}}}}gi.URL_SCHEME="downloads://";class bi{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise((n,r)=>{const o=new FileReader;o.onload=o=>{const s=JSON.parse(o.target.result),a=s.modelTopology;if(null==a)return void r(new Error("modelTopology field is missing from file "+e.name));0===t.length&&n({modelTopology:a});const i=s.weightsManifest;if(null==i)return void r(new Error("weightManifest field is missing from file "+e.name));let u;try{u=this.checkManifestAndWeightFiles(i,t)}catch(e){return void r(e)}const l=[],c=[],h=[];i.forEach(e=>{e.paths.forEach(e=>{c.push(e),h.push(null)}),l.push(...e.weights)}),i.forEach(e=>{e.paths.forEach(e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,o=c.indexOf(e);h[o]=r,-1===h.indexOf(null)&&n({modelTopology:a,weightSpecs:l,weightData:Ua(h),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,userDefinedMetadata:s.userDefinedMetadata})},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(u[e])})})},o.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),o.readAsText(e)})}checkManifestAndWeightFiles(e,t){const n=[],r=t.map(e=>Va(e.name)),o={};for(const s of e)s.paths.forEach(e=>{const s=Va(e);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);o[e]=t[r.indexOf(s)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return o}}function yi(e,t,n,r){!function(e){m(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){m(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),m(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),m(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t)}(n=null==n?0:n,r=null==r?1:r);let o=0;return Promise.all(e.map(s=>(s.then(s=>{const a=n+ ++o/e.length*(r-n);return t(a),s}),s)))}async function wi(e,t){null==t&&(t={});const r=null==t.fetchFunc?n().platform.fetch:t.fetchFunc,o=e.map(e=>r(e,t.requestInit,{isBinary:!0})),s=(null==t.onProgress?await Promise.all(o):await yi(o,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(s):await yi(s,t.onProgress,.5,1)}function ki(e){return async(t,n="",r)=>{const o=t.map(()=>!1),s={},a=null!=r?r.map(()=>!1):[],i=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=qa[u]*w(e.shape),c=()=>{o[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach((t,n)=>{t===e.name&&(c(),a[n]=!0)}):c(),i.push(e.name),n+=l})}),!a.every(e=>e)){const e=r.filter((e,t)=>!a[t]);throw new Error("Could not find weights in manifest with names: "+e.join(", ")+". \nManifest JSON has weights with names: "+i.join(", ")+".")}const u=o.reduce((e,t,n)=>(t&&e.push(n),e),[]),l=[];u.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)})});const c=await e(l),h={};let p=0;return u.forEach(e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[p+e].byteLength;const o=new ArrayBuffer(r),a=new Uint8Array(o);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);a.set(t,i),i+=t.byteLength}s[e].forEach(e=>{const t=Oa(o.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]}),p+=n}),h}}Ja.registerSaveRouter(e=>n().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(gi.URL_SCHEME)?function(e="model"){return new gi(e)}(e.slice(gi.URL_SCHEME.length)):null);class vi{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,null!=t.fetchFunc?(m("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=n().platform.fetch,m(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&m(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:n};t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:Ha(e),responses:[o]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+o.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,o=t.generatedBy,s=t.convertedBy,a=t.format,i=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,l;if(null!=r){const e=await this.loadWeights(r);[u,l]=e}return{modelTopology:n,weightSpecs:u,weightData:l,userDefinedMetadata:i,generatedBy:o,convertedBy:s,format:a}}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),o=n>t?e.substring(n):"";return[r+"/",o]}(t),o=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const a=[];return e.forEach(e=>{e.paths.forEach(e=>{a.push(o+e+r)})}),[s,Ua(await wi(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function xi(e){return null!=e.match(vi.URL_SCHEME_REGEX)}vi.URL_SCHEME_REGEX=/^https?:\/\//;const Si=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>xi(e)):xi(e),n)return Ei(e,t)}return null};function Ei(e,t){return new vi(e,t)}Ja.registerSaveRouter(Si),Ja.registerLoadRouter(Si);class Di{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Ni{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}var Ii=Object.freeze({__proto__:null,browserFiles:function(e){return new bi(e)},browserHTTPRequest:function(e,t){return Ei(e,t)},concatenateArrayBuffers:Ua,decodeWeights:Oa,encodeWeights:async function(e,t){const n=[],r=[],o=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let s=0;s<o.length;++s){const a=o[s],i=Array.isArray(e)?e[s].tensor:e[a];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${i.dtype}`);const u={name:a,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise(async e=>{const t=await i.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let o=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,o),o+=4,r.set(n,o),o+=n.length}e(r)});r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:Wa(await Promise.all(r)),specs:n}},fromMemory:function(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new Di(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Di({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Di({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})},getLoadHandlers:(e,t)=>Ja.getLoadHandlers(e,t),getModelArtifactsInfoForJSON:Ha,getSaveHandlers:e=>Ja.getSaveHandlers(e),http:Ei,isHTTPScheme:xi,loadWeights:async function(e,t="",n,r){return ki(e=>wi(e,{requestInit:r}))(e,t,n)},registerLoadRouter:e=>Ja.registerLoadRouter(e),registerSaveRouter:e=>Ja.registerSaveRouter(e),weightsLoaderFactory:ki,withSaveHandler:function(e){return new Ni(e)},copyModel:async function(e,t){return Xa(e,t,!1)},listModels:async function(){const e=Ya.getSchemes(),t={};for(const n of e){const e=await Ya.getManager(n).listModels();for(const r in e){t[n+"://"+r]=e[r]}}return t},moveModel:async function(e,t){return Xa(e,t,!0)},removeModel:async function(e){const t=Za(e);return Ya.getManager(t.scheme).removeModel(t.path)}});const Fi=_e({confusionMatrix_:function(e,t,n){const r=Me(e,"labels","confusionMatrix"),o=Me(t,"predictions","confusionMatrix");m(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),m(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),m(1===o.rank,()=>"Expected the rank of predictions to be 1, but got "+o.rank),m(r.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),m(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const s=Lr(rt(r,"int32"),n),a=Lr(rt(o,"int32"),n),i=He(s);return rt(It(i,a),"int32")}});var Ai=Object.freeze({__proto__:null,confusionMatrix:Fi});let Ti;const Mi=_e({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,o=!1,s=!1,a=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)o=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else{if(null==e.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);a=!0}if(o){const t=2;if(o&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=u("FromPixels",ke.backendName)){const n={pixels:e},r={numChannels:t};return ke.runKernel("FromPixels",n,r)}const[i,l]=o?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(a?c=e.getContext("2d").getImageData(0,0,i,l).data:r||n?c=e.data:(s||o)&&(null==Ti&&(Ti=document.createElement("canvas").getContext("2d")),Ti.canvas.width=i,Ti.canvas.height=l,Ti.drawImage(e,0,0,i,l),c=Ti.getImageData(0,0,i,l).data),4===t)h=new Int32Array(c);else{const e=i*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return Qo(h,[l,i,t],"int32")}});var $i=Object.freeze({__proto__:null,toPixels:async function(e,t){let n=Me(e,"img","toPixels");if(!(e instanceof se)){const e=n;n=rt(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,o]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);const a=await n.data(),i=Mr(n),u=gr(n),l=await Promise.all([i.data(),u.data()]),c=l[0],h=l[1],p=c[0],d=h[0];if(i.dispose(),u.dispose(),"float32"===n.dtype){if(p<0||d>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but got range [${p} - ${d}].`)}else{if("int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);if(p<0||d>255)throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but got range [${p} - ${d}].`)}const f="float32"===n.dtype?255:1,m=new Uint8ClampedArray(o*r*4);for(let e=0;e<r*o;++e){let t,n,r,o;1===s?(t=a[e]*f,n=a[e]*f,r=a[e]*f,o=255):3===s?(t=a[3*e]*f,n=a[3*e+1]*f,r=a[3*e+2]*f,o=255):4===s&&(t=a[4*e]*f,n=a[4*e+1]*f,r=a[4*e+2]*f,o=a[4*e+3]*f);const i=4*e;m[i+0]=Math.round(t),m[i+1]=Math.round(n),m[i+2]=Math.round(r),m[i+3]=Math.round(o)}if(null!=t){t.width=o,t.height=r;const e=t.getContext("2d"),n=new ImageData(m,o,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),m},fromPixels:Mi});function _i(e,t){if(e.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[t.rank-1]>e.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[t.rank-1]} vs. ${e.rank}`);if(0===e.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const n=t.shape,r=n[n.length-1];let o=1;for(let e=0;e<n.length-1;++e)o*=n[e];const s=e.shape,a=n.slice();a.pop();let i=1;for(let t=r;t<e.rank;++t)i*=s[t],a.push(s[t]);const u=[...q(e.shape).map(e=>e/i),1].slice(0,r);return[a,o,i,u]}var Bi=Object.freeze({__proto__:null,prepareAndValidate:_i});class Ri{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ci{constructor(){this.classNameMap={}}static getMap(){return null==Ci.instance&&(Ci.instance=new Ci),Ci.instance}static register(e){Ci.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Pi(e){m(null!=e.className,()=>"Class being registered does not have the static className property defined."),m("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),m(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Ci.register(e)}var zi=Object.freeze({__proto__:null,Serializable:Ri,SerializationMap:Ci,registerClass:Pi});class Li extends Ri{minimize(e,t=!1,n){const{value:r,grads:o}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:o[e.name]}));this.applyGradients(e)}else this.applyGradients(o);return wt(o),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return cr(e,t)}dispose(){null!=this.iterations_&&wt(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Zn(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Li,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class qi extends Li{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ke.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ke.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:yt(()=>An(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:yt(()=>An(r).variable(!1))});const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const s=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;yt(()=>{const e=Pe(Ft(s,this.rho),Ft(Br(o),1-this.rho)),t=Ft(En(Uo(Pe(a,this.epsilon)),Uo(Pe(s,this.epsilon))),o),n=Pe(Ft(a,this.rho),Ft(Br(t),1-this.rho));s.assign(e),a.assign(n);const i=Pe(Ft(t,-this.learningRate),r);r.assign(i)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(wt(this.accumulatedGrads.map(e=>e.variable)),wt(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}qi.className="Adadelta",Pi(qi);class Oi extends Li{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ke.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:yt(()=>qn(r.shape,this.initialAccumulatorValue).variable(e))}}const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const s=this.accumulatedGrads[n].variable;yt(()=>{const e=Pe(s,Br(o));s.assign(e);const t=Pe(Ft(En(o,Uo(Pe(e,ke.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&wt(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Oi.className="Adagrad",Pi(Oi);class Wi extends Li{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],yt(()=>{this.accBeta1=Zn(t).variable(),this.accBeta2=Zn(n).variable()}),null==r&&(this.epsilon=ke.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);yt(()=>{const n=br(1,this.accBeta1),r=br(1,this.accBeta2);t.forEach((t,o)=>{const s=ke.registeredVariables[t];null==this.accumulatedFirstMoment[o]&&(this.accumulatedFirstMoment[o]={originalName:t+"/m",variable:yt(()=>An(s).variable(!1))}),null==this.accumulatedSecondMoment[o]&&(this.accumulatedSecondMoment[o]={originalName:t+"/v",variable:yt(()=>An(s).variable(!1))});const a=Array.isArray(e)?e[o].tensor:e[t];if(null==a)return;const i=this.accumulatedFirstMoment[o].variable,u=this.accumulatedSecondMoment[o].variable,l=Pe(Ft(i,this.beta1),Ft(a,1-this.beta1)),c=Pe(Ft(u,this.beta2),Ft(Br(a),1-this.beta2)),h=En(l,n),p=En(c,r);i.assign(l),u.assign(c);const d=Pe(Ft(En(h,Pe(Uo(p),this.epsilon)),-this.learningRate),s);s.assign(d)}),this.accBeta1.assign(Ft(this.accBeta1,this.beta1)),this.accBeta2.assign(Ft(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&wt(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&wt(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),yt(()=>{this.accBeta1.assign(Jr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Jr(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Wi.className="Adam",Pi(Wi);class Ki extends Li{constructor(e,t,n,r=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],yt(()=>{this.iteration=Zn(0).variable(),this.accBeta1=Zn(t).variable()}),null==r&&(this.epsilon=ke.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);yt(()=>{const n=br(1,this.accBeta1),r=En(-this.learningRate,Pe(Ft(this.iteration,this.decay),1));t.forEach((t,o)=>{const s=ke.registeredVariables[t];null==this.accumulatedFirstMoment[o]&&(this.accumulatedFirstMoment[o]={originalName:t+"/m",variable:An(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[o]&&(this.accumulatedWeightedInfNorm[o]={originalName:t+"/v",variable:An(s).variable(!1)});const a=Array.isArray(e)?e[o].tensor:e[t];if(null==a)return;const i=this.accumulatedFirstMoment[o].variable,u=this.accumulatedWeightedInfNorm[o].variable,l=Pe(Ft(i,this.beta1),Ft(a,1-this.beta1)),c=Ft(u,this.beta2),h=Be(a),p=nr(c,h);i.assign(l),u.assign(p);const d=Pe(Ft(En(r,n),En(l,Pe(p,this.epsilon))),s);s.assign(d)}),this.iteration.assign(Pe(this.iteration,1)),this.accBeta1.assign(Ft(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&wt(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&wt(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Ki.className="Adamax",Pi(Ki);class Gi extends Li{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const o=ke.registeredVariables[t];yt(()=>{const e=Pe(Ft(this.c,r),o);o.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=kt(Zn(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Gi.className="SGD",Pi(Gi);class Ui extends Gi{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Zn(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ke.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:yt(()=>An(r).variable(e))}}const o=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&yt(()=>{let e;const t=Pe(Ft(this.m,o),s);e=this.useNesterov?Pe(Ft(this.c,Pe(s,Ft(t,this.m))),r):Pe(Ft(this.c,t),r),o.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&wt(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Ui.className="Momentum",Pi(Ui);class Vi extends Li{constructor(e,t=.9,n=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,null==r&&(this.epsilon=ke.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ke.registeredVariables[t];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:yt(()=>An(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:yt(()=>An(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:yt(()=>An(r).variable(!1))});const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const s=this.accumulatedMeanSquares[n].variable,a=this.accumulatedMoments[n].variable;yt(()=>{const e=Pe(Ft(s,this.decay),Ft(Br(o),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,i=Pe(Ft(t,this.decay),Ft(o,1-this.decay)),u=En(Ft(o,this.learningRate),Uo(br(e,Pe(Br(i),this.epsilon)))),l=Pe(Ft(a,this.momentum),u);s.assign(e),t.assign(i),a.assign(l);const c=br(r,l);r.assign(c)}else{const e=Pe(Ft(s,this.decay),Ft(Br(o),1-this.decay)),t=Pe(Ft(a,this.momentum),En(Ft(o,this.learningRate),Uo(Pe(e,this.epsilon))));s.assign(e),a.assign(t);const n=br(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&wt(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&wt(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&wt(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Vi.className="RMSProp",Pi(Vi);class Hi{static sgd(e){return new Gi(e)}static momentum(e,t,n=!1){return new Ui(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,o=!1){return new Vi(e,t,n,r,o)}static adam(e=.001,t=.9,n=.999,r=null){return new Wi(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new qi(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,o=0){return new Ki(e,t,n,r,o)}static adagrad(e,t=.1){return new Oi(e,t)}}const ji={sgd:Hi.sgd,momentum:Hi.momentum,adadelta:Hi.adadelta,adagrad:Hi.adagrad,rmsprop:Hi.rmsprop,adamax:Hi.adamax,adam:Hi.adam},Ji="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();var Yi=Object.freeze({__proto__:null,segment_util:Kn,castTensor:function(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();const t=Fr(e.shape),r=rt(e,"float32"),o=n.complex(r,t);return t.dispose(),r.dispose(),o}if(!T(e.dtype,t))return ke.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){const r=n.real(e),o=rt(r,t);return r.dispose(),o}if("int32"===t)return n.int(e);if("bool"===t){const t=Zn(0,e.dtype),r=n.notEqual(e,t);return t.dispose(),r}throw new Error(`Error in Cast: failed to cast ${e.dtype} to ${t}`)},reshapeTensor:function(e,t){return ke.makeTensorFromDataId(e.dataId,t,e.dtype)},linspaceImpl:function(e,t,n){const r=(t-e)/(n-1),o=G(n,"float32");o[0]=e;for(let e=1;e<o.length;e++)o[e]=o[e-1]+r;return ko(o,"float32")},upcastType:de,axesAreInnerMostDims:Le,combineLocations:qe,computeOutAndReduceShapes:Oe,expandShapeToKeepDim:We,assertAxesAreInnerMostDims:function(e,t,n){m(Le(t,n),()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`)},getAxesPermutation:Ke,getUndoAxesPermutation:Ge,getInnerMostAxes:Ue,getBroadcastDims:function(e,t){const n=e.length,r=[];for(let o=0;o<n;o++){const s=n-1-o,a=e[s]||1;(t[t.length-1-o]||1)>1&&1===a&&r.unshift(s)}return r},getReductionAxes:Dn,assertAndGetBroadcastShape:Nn,assertParamsConsistent:xt,computeOutShape:St,computeDilation2DInfo:function(e,t,n,r,o="NHWC",s){return at(e,[...t,e[3]],n,s,r,null,null,mt(o))},computePool2DInfo:ot,computePool3DInfo:st,computeConv2DInfo:at,computeConv3DInfo:it,computeDefaultPad:ut,tupleValuesAreOne:dt,eitherStridesOrDilationsAreOne:ft,convertConv2DDataFormat:mt,getFusedDyActivation:qs,getFusedBiasGradient:Os,applyActivation:Ws,shouldFuse:Ks,PARALLELIZE_THRESHOLD:30,computeOptimalWindowSize:function(e){return e<=30?e:L(e,Math.floor(Math.sqrt(e)))},getImageCenter:function(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]},getReshaped:function(e,t,n,r=!0){let o=[];if(r)o=o.concat(t.slice(0)),o.push(e[0]/n),o=o.concat(e.slice(1));else{o=o.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)o=o.concat([e[r+1]/t[r],t[r]]);o=o.concat(e.slice(n+1))}return o},getPermuted:function(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],o=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?o.push(r):n.push(r);r.push(...n),r.push(0),r.push(...o)}return r},getReshapedPermuted:function(e,t,n,r=!0){const o=[];r?o.push(e[0]/n):o.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?o.push(t[n-1]*e[n]):o.push(e[n]/t[n-1]):o.push(e[n]);return o},getSliceBeginCoords:function(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n},getSliceSize:function(e,t,n){const r=e.slice(0,1);for(let o=0;o<n;++o)r.push(e[o+1]-t[o][0]-t[o][1]);return r},prepareAndValidate:_i,validateUpdateShape:Fs,validateInput:As,calculateShapes:Ts,SELU_SCALEALPHA:1.7580993408473768,SELU_SCALE:1.0507009873554805,ERF_P:.3275911,ERF_A1:.254829592,ERF_A2:-.284496736,ERF_A3:1.421413741,ERF_A4:-1.453152027,ERF_A5:1.061405429,warn:function(...e){n().getBool("IS_TEST")||console.warn(...e)},log:function(...e){n().getBool("IS_TEST")||console.log(...e)},mergeRealAndImagArrays:function(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n},splitRealAndImagArrays:function(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}},complexWithEvenIndex:function(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}},complexWithOddIndex:function(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}},getComplexWithIndex:function(e,t){return{real:e[2*t],imag:e[2*t+1]}},assignToTypedArray:function(e,t,n,r){e[2*r]=t,e[2*r+1]=n},exponents:function(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let o=0;o<Math.ceil(e/2);o++){const s=(t?2:-2)*Math.PI*(o/e);n[o]=Math.cos(s),r[o]=Math.sin(s)}return{real:n,imag:r}},exponent:function(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}},prepareSplitSize:Ao});var Zi=Object.freeze({__proto__:null,nonMaxSuppressionV3Impl:ia,nonMaxSuppressionV4Impl:ua,nonMaxSuppressionV5Impl:la,split:function(e,t,n){const r=new Array(e.rank).fill(0),o=e.shape.slice();return t.map(t=>{const s=[...o];s[n]=t;const a=Kt(e,r,s);return r[n]+=t,a})},tile:function(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=en(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),o=new Array(e.rank);for(let t=0;t<o.length;t++)o[t]=n[t]%e.shape[t];const s=e.locToIndex(o);r.values[t]=e.values[s]}return r.toTensor()},topkImpl:function(e,t,n,r,o){const s=t[t.length-1],[a,i]=[e.length/s,s],u=N(n,a*r),l=N("int32",a*r);for(let t=0;t<a;t++){const n=t*i,o=e.subarray(n,n+i),s=[];for(let e=0;e<o.length;e++)s.push({value:o[e],index:e});s.sort((e,t)=>t.value-e.value);const a=t*r,c=u.subarray(a,a+r),h=l.subarray(a,a+r);for(let e=0;e<r;e++)c[e]=s[e].value,h[e]=s[e].index}const c=t.slice();return c[c.length-1]=r,[Dt(u,c,n),Dt(l,c,"int32")]},whereImpl:us});function Xi(e){throw new Error(`'${e}' not yet implemented or not found in the registry. Did you forget to import the kernel?`)}const Qi={kernelName:"Abs",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ft(e,Jo(rt(n,"float32"),-1))}}},eu={kernelName:"Acos",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Br(rt(n,"float32")),r=Uo(br(Zn(1),t));return dr(En(e,r))}}}},tu={kernelName:"Acosh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Uo(br(Br(rt(n,"float32")),1));return En(e,t)}}}},nu={kernelName:"Add",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,o=Nn(n.shape,r.shape);return{a:()=>{let t=e;const r=Dn(n.shape,o);return r.length>0&&(t=yr(t,r)),Ve(t,n.shape)},b:()=>{let t=e;const n=Dn(r.shape,o);return n.length>0&&(t=yr(t,n)),Ve(t,r.shape)}}}},ru={kernelName:"AddN",saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}},ou={kernelName:"ArgMax",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>An(n)}}},su={kernelName:"ArgMin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>An(n)}}},au={kernelName:"Asin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>En(e,Uo(br(Zn(1),Br(rt(n,"float32")))))}}},iu={kernelName:"Asinh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Uo(Pe(Zn(1),Br(rt(n,"float32"))));return En(e,t)}}}},uu={kernelName:"Atan2",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,o=Nn(n.shape,r.shape);return{a:()=>{const t=Pe(Br(n),Br(r));let s=Ft(e,En(r,t));const a=Dn(n.shape,o);return a.length>0&&(s=yr(s,a)),Ve(s,n.shape)},b:()=>{const t=Pe(Br(n),Br(r));let s=dr(Ft(e,En(n,t)));const a=Dn(r.shape,o);return a.length>0&&(s=yr(s,a)),Ve(s,r.shape)}}}},lu={kernelName:"Atan",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>En(e,Pe(Br(rt(n,"float32")),1))}}},cu={kernelName:"Atanh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>En(e,br(Zn(1),Br(rt(n,"float32"))))}}};const hu=_e({avgPool3dBackprop_:function(e,t,n,r,o=[1,1,1],s,a){const i=Me(e,"dy","avgPool3dBackprop"),u=Me(t,"input","avgPool3dBackprop");let l=i,c=u,h=!1;4===u.rank&&(h=!0,l=Ve(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=Ve(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),m(5===l.rank,()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+l.rank+"."),m(5===c.rank,()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+c.rank+"."),m(ft(r,o),()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${o}'`),null!=a&&m(v(s),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const p={dy:l,input:c},d={filterSize:n,strides:r,dilations:o,pad:s,dimRoundingMode:a},f=ke.runKernelFunc(e=>{const t=st(c.shape,n,r,o,s,a);return e.avgPool3dBackprop(l,c,t)},p,null,"AvgPool3DBackprop",d);return h?Ve(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),pu={kernelName:"AvgPool3D",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:o,strides:s,dilations:a,pad:i,dimRoundingMode:u}=n,l=null==a?[1,1,1]:a;return{x:()=>hu(e,r,o,s,l,i,u)}}};const du=_e({avgPoolBackprop_:function(e,t,n,r,o){const s=Me(e,"dy","avgPoolBackprop"),a=Me(t,"input","avgPoolBackprop");m(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let i=a,u=s,l=!1;3===a.rank&&(l=!0,i=Ve(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=Ve(s,[1,s.shape[0],s.shape[1],s.shape[2]])),m(4===u.rank,()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+u.rank+"."),m(4===i.rank,()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+i.rank+".");const c={dy:u,input:i},h={filterSize:n,strides:r,pad:o},p=ke.runKernelFunc(e=>{const t=ot(i.shape,n,r,1,o);return e.avgPoolBackprop(u,i,t)},c,null,"AvgPoolBackprop",h);return l?Ve(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),fu={kernelName:"AvgPool",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:o,strides:s,pad:a}=n;return{x:()=>du(e,r,o,s,a)}}},mu={kernelName:"BatchMatMul",inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,o]=t,{transposeA:s,transposeB:a}=n;return s||a?!s&&a?{a:()=>It(e,o,!1,!1),b:()=>It(e,r,!0,!1)}:s&&!a?{a:()=>It(o,e,!1,!0),b:()=>It(r,e,!1,!1)}:{a:()=>It(o,e,!0,!0),b:()=>It(e,r,!0,!0)}:{a:()=>It(e,o,!1,!0),b:()=>It(r,e,!0,!1)}}},gu={kernelName:"BatchToSpaceND",gradFunc:(e,t,n)=>{const{blockShape:r,crops:o}=n;return{x:()=>Hr(e,r,o)}}},bu={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,o=r.inputShape,s=r.shape,a=Array.from(s);for(let e=o.length-1;e>=0;e--)if(o[e]===s[e])a[e]=1;else if(1!==o[e])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);const i=[];for(let e=0;e<a.length;e++)a[e]>1&&i.push(e);return{x:()=>yr(e,i,!0)}}},yu={kernelName:"Cast",gradFunc:e=>({x:()=>e.clone()})},wu={kernelName:"Ceil",gradFunc:e=>({x:()=>An(e)})},ku={kernelName:"ClipByValue",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:o,clipValueMax:s}=n;return{x:()=>Fn(vr(Vn(r,o),sr(r,s)),e,An(e))}}},vu={kernelName:"Concat",saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:o}=n,s=E(o,t[0].shape)[0],a=r.map(e=>e[s]);return To(e,a,s).map(e=>()=>e)}},xu={kernelName:"Conv2D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,o]=t,{dilations:s,strides:a,pad:i,dataFormat:u}=n;return m(dt(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>hn(r.shape,e,o,a,i,u),filter:()=>Ls(r,e,o.shape,a,i,u)}}},Su={kernelName:"Conv2DBackpropInput",inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,o]=t,{strides:s,pad:a,dataFormat:i,dimRoundingMode:u}=n;return{dy:()=>ln(e,o,s,a,i,1,u),filter:()=>Ls(e,r,o.shape,s,a,i,u)}}};const Eu=_e({conv3DBackpropFilter_:function(e,t,n,r,o){let s=e;4===e.rank&&(s=Ve(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let a=t;4===a.rank&&(a=Ve(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),m(5===s.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+s.shape+"."),m(5===a.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+a.shape+"."),m(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),m(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),m(a.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`);const i={x:s,y:a},u={strides:r,pad:o};return ke.runKernelFunc(e=>{const t=it(s.shape,n,r,1,o);return e.conv3dDerFilter(s,a,t)},i,null,"Conv3DBackpropFilterV2",u)}}),Du={kernelName:"Conv3D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:o,pad:s}=n;m(dt(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[a,i]=t;return{x:()=>fn(a.shape,e,i,o,s),filter:()=>Eu(a,e,i.shape,o,s)}}},Nu={kernelName:"Cos",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ft(dr(zo(rt(n,"float32"))),e)}}},Iu={kernelName:"Cosh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ft(Lo(rt(n,"float32")),e)}}},Fu={kernelName:"Cumsum",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:o,exclusive:s,reverse:a}=n;return{x:()=>{const t=Ke([o],r.rank);let n=yn(e,o,s,!a);return null!=t&&(n=He(n,t)),n}}}},Au={kernelName:"DepthwiseConv2dNative",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:o,pad:s,dimRoundingMode:a}=n,i=null==r?[1,1]:r;m(dt(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[u,l]=t;m(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),m(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),m(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),m(ft(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),null!=a&&m(v(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const c=at(u.shape,l.shape,o,i,s,a,!0);return{x:()=>Vs(u.shape,e,l,c),filter:()=>Us(u,e,l.shape,c)}}},Tu={kernelName:"Dilation2D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,o]=t,s={x:r,filter:o,dy:e},a={x:r,filter:o,dy:e};return{x:()=>ke.runKernel("Dilation2DBackpropInput",s,n),filter:()=>ke.runKernel("Dilation2DBackpropFilter",a,n)}}},Mu={kernelName:"Div",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,o=Nn(n.shape,r.shape);return{a:()=>{const t=En(e,rt(r,"float32")),s=Dn(n.shape,o);return s.length>0?Ve(yr(t,s),n.shape):t},b:()=>{let t=Ft(e,rt(n,"float32"));const s=Dn(r.shape,o);s.length>0&&(t=Ve(yr(t,s),r.shape));const a=Br(r);return dr(En(t,rt(a,"float32")))}}}},$u={kernelName:"Elu",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r=t=>t.eluDer(e,n),o={dy:e,y:n};return{x:()=>ke.runKernelFunc(r,o,null,"EluGrad")}}},_u={kernelName:"Erf",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ft(Bn(dr(Br(n))),2/Math.sqrt(Math.PI));return{x:()=>Ft(e,r)}}},Bu={kernelName:"Exp",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ft(e,n)}}},Ru={kernelName:"Expm1",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ft(e,Bn(n))}}},Cu={kernelName:"Floor",gradFunc:e=>({x:()=>An(e)})},Pu={kernelName:"FloorDiv",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,o=Nn(n.shape,r.shape);return{a:()=>{const t=En(e,rt(r,"float32")),s=Dn(n.shape,o);return s.length>0?Ve(yr(t,s),n.shape):t},b:()=>{let t=Ft(e,rt(n,"float32"));const s=Dn(r.shape,o);s.length>0&&(t=Ve(yr(t,s),r.shape));const a=Br(r);return dr(En(t,rt(a,"float32")))}}}},zu={kernelName:"FusedBatchNorm",inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[o,s,a,i]=t,u=null==i?Zn(1):i,l=Dn(s.shape,o.shape),c=[];if(1===s.rank){for(let e=0;e<o.shape.length-1;++e)c.push(o.shape[e]);c.push(1)}const h=br(o,s),p=Ft(e,u),d=_o(Pe(a,Zn(r))),f=Ft(Ft(Ft(d,d),d),Zn(-.5));return{x:()=>1===s.rank?Ve(Ft(Ft(e,Pn(Ve(d,[1,1,1,s.shape[0]]),c)),u),o.shape):Ve(Ft(Ft(e,d),u),o.shape),mean:()=>{let e=Ft(Ft(d,Zn(-1)),p);return 1===s.rank&&(e=yr(e,l)),Ve(e,s.shape)},variance:()=>{let e=Ft(Ft(f,h),p);return 1===s.rank&&(e=yr(e,l)),Ve(e,s.shape)},scale:()=>{const t=Ft(h,d);let n=Ft(e,t);return 1===s.rank&&(n=yr(n,l)),Ve(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=yr(t,l)),Ve(t,s.shape)}}}},Lu={kernelName:"GatherV2",inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,o]=t,{axis:s}=n,a=E(s,r.shape)[0];return{x:()=>{const t=r.shape,n=o.size,i=t.slice(0,a),u=i.length,l=t.slice(s,t.length).slice(1),c=l.length,h=qu(0,u),p=qu(u+1,u+1+c),d=Ou([i,[n],l]),f=Ve(e,d),m=Ve(o,[n]),g=Ou([[u],h,p]),b=He(f,g);let y=ss(b,m,r.shape[a]);const w=Ge(g);return y=He(y,w),y},indices:()=>o}}};function qu(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Ou(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Wu={kernelName:"GreaterEqual",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>An(n),b:()=>An(r)}}},Ku={kernelName:"Identity",gradFunc:e=>({x:()=>rt(e,"float32")})},Gu={kernelName:"IsFinite",gradFunc:e=>({x:()=>An(e)})},Uu={kernelName:"IsInf",gradFunc:e=>({x:()=>An(e)})},Vu={kernelName:"IsNan",gradFunc:e=>({x:()=>An(e)})},Hu={kernelName:"Log1p",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>En(e,Pe(n,1))}}},ju={kernelName:"Log",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>En(e,rt(n,"float32"))}}},Ju={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:o}=n;return{logits:()=>{const t=Bn(r);return br(e,Ft(yr(e,o,!0),t))}}}};const Yu=_e({localResponseNormalizationBackprop_:function(e,t,n,r=5,o=1,s=1,a=.5){const i={x:e,y:t,dy:n},u={depthRadius:r,bias:o,alpha:s,beta:a};return ke.runKernelFunc(i=>i.LRNGrad(n,e,t,r,o,s,a),i,null,"LRNBackprop",u)}}),Zu={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,o]=t,{depthRadius:s,bias:a,alpha:i,beta:u}=n;return{x:()=>Yu(r,o,e,s,a,i,u)}}};function Xu(e,t,n,r,o){return t.rank<n.rank&&(t=Ve(t,We(t.shape,r))),e.rank<n.rank&&(e=Ve(e,We(e.shape,r))),{x:()=>{const r=Ft(e,rt(In(n,t),e.dtype));return null==o?r:He(r,o)}}}const Qu={kernelName:"Max",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:o}=r,[s,a]=t,i=E(o,s.shape),u=Ke(i,s.rank),l=Xu(e,a,s,i,u);return{x:()=>{let e=l.x();return null!=u&&(e=He(e)),e}}}},el={kernelName:"Maximum",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ft(e,rt(Vn(n,r),"float32")),b:()=>Ft(e,rt(or(n,r),"float32"))}}};const tl=_e({maxPool3dBackprop_:function(e,t,n,r,o,s=[1,1,1],a,i){const u=Me(e,"dy","maxPool3dBackprop"),l=Me(t,"input","maxPool3dBackprop"),c=Me(n,"output","maxPool3dBackprop");let h=u,p=l,d=c,f=!1;4===l.rank&&(f=!0,h=Ve(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=Ve(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Ve(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),m(5===h.rank,()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+h.rank+"."),m(5===p.rank,()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+p.rank+"."),m(5===d.rank,()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+d.rank+"."),m(ft(o,s),()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`),null!=i&&m(v(a),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const g={dy:h,input:p,output:d},b={filterSize:r,strides:o,dilations:s,pad:a,dimRoundingMode:i},y=ke.runKernelFunc(e=>{const t=st(p.shape,r,o,s,a,i);return e.maxPool3dBackprop(h,p,d,t)},g,null,"MaxPool3DBackprop",b);return f?Ve(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),nl={kernelName:"MaxPool3D",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,o]=t,{filterSize:s,strides:a,dilations:i,pad:u,dimRoundingMode:l}=n,c=null==i?[1,1,1]:i;return{x:()=>tl(e,r,o,s,a,c,u,l)}}};const rl=_e({maxPoolBackprop_:function(e,t,n,r,o,s,a){const i=Me(e,"dy","maxPoolBackprop"),u=Me(t,"input","maxPoolBackprop"),l=Me(n,"output","maxPoolBackprop");m(u.rank===i.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`),m(4===i.rank,()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+i.rank+"."),m(4===u.rank,()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+u.rank+"."),null!=a&&m(v(s),()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const c={dy:i,input:u,output:l},h={filterSize:r,strides:o,pad:s,dimRoundingMode:a};return ke.runKernelFunc(e=>{const t=ot(u.shape,r,o,1,s,a);return e.maxPoolBackprop(i,u,l,t)},c,null,"MaxPoolBackprop",h)}}),ol={kernelName:"PadV2",inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:o}=n,s=o.map(e=>e[0]);return{x:()=>Kt(e,s,r.shape)}}},sl={kernelName:"SpaceToBatchND",gradFunc:(e,t,n)=>{const{blockShape:r,paddings:o}=n;return{x:()=>Vt(e,r,o)}}},al={kernelName:"SplitV",gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Nt(e,r)}}};const il=[Qi,eu,tu,nu,ru,ou,su,au,iu,uu,lu,cu,pu,fu,mu,gu,bu,yu,wu,ku,vu,Su,xu,Du,Nu,Iu,Fu,Au,Tu,Mu,$u,_u,Bu,Ru,Pu,Cu,zu,Lu,Wu,Ku,Gu,Uu,Vu,Hu,ju,Ju,Zu,Qu,Qu,el,nl,{kernelName:"MaxPool",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,o]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>rl(e,r,o,s,a,i)}}},{kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:o}=r,[s,a]=t,i=E(o,s.shape),u=Ke(i,s.rank),l=Xu(e,a,s,i,u);return{x:()=>{let e=l.x();return null!=u&&(e=He(e)),e}}}},{kernelName:"Minimum",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ft(e,rt(sr(n,r),"float32")),b:()=>Ft(e,rt(Un(n,r),"float32"))}}},{kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,o=Nn(n.shape,r.shape);return{a:()=>{const t=Dn(n.shape,o);return t.length>0?Ve(yr(e,t),n.shape):e},b:()=>{const t=Ft(e,dr(On(En(n,r)))),s=Dn(r.shape,o);return s.length>0?Ve(yr(t,s),r.shape):t}}}},{kernelName:"Multiply",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,o=Nn(n.shape,r.shape);return{a:()=>{const t=Ft(e,rt(r,"float32")),s=Dn(n.shape,o);return s.length>0?Ve(yr(t,s),n.shape):t},b:()=>{const t=Ft(e,rt(n,"float32")),s=Dn(r.shape,o);return s.length>0?Ve(yr(t,s),r.shape):t}}}},{kernelName:"Negate",gradFunc:e=>({x:()=>dr(e)})},{kernelName:"OneHot",inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Fr(n.shape,"float32")}}},{kernelName:"OnesLike",gradFunc:e=>({x:()=>An(e)})},ol,ol,{kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,o]=t,s=n,a=r,i=Nn(s.shape,a.shape);return{a:()=>{const t=rt(a,"float32");let n=Ft(e,Ft(t,Jr(s,br(t,Zn(1)))));const r=Dn(s.shape,i);return r.length>0&&(n=yr(n,r)),Ve(n,s.shape)},b:()=>{const t=Un(s,0),n=Fn(t,ur(s),An(s));let r=Ft(e,Ft(o,n));const u=Dn(a.shape,i);return u.length>0&&(r=yr(r,u)),Ve(r,a.shape)}}}},{kernelName:"Prelu",inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,o=Un(n,0);return{x:()=>Fn(o,e,Ft(e,r)),alpha:()=>{let t=Fn(o,An(e),Ft(e,n));const s=Dn(r.shape,e.shape);return s.length>0&&(t=yr(t,s)),Ve(t,r.shape)}}}},{kernelName:"Reciprocal",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>En(e,dr(Br(n)))}}},{kernelName:"Relu6",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ft(sr(n,6),Jo(n));return{x:()=>Ft(e,rt(r,"float32"))}}},{kernelName:"Relu",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ft(e,rt(Jo(n),"float32"))}}},{kernelName:"Reshape",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ve(e,n.shape)}}},{kernelName:"ResizeBilinear",inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,o=t=>{const{alignCorners:o}=n;return t.resizeBilinearBackprop(e,r,o)},s={images:r};return{images:()=>ke.runKernelFunc(o,s,null,"ResizeBilinearGrad",n)}}},{kernelName:"ResizeNearestNeighbor",inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,o=t=>{const{alignCorners:o}=n;return t.resizeNearestNeighborBackprop(e,r,o)},s={images:r};return{images:()=>ke.runKernelFunc(o,s,null,"ResizeNearestNeighborGrad",n)}}},{kernelName:"Reverse",gradFunc:(e,t,n)=>{const{dims:r}=n,o=E(r,e.shape);return{x:()=>Yn(e,o)}}},{kernelName:"Round",gradFunc:e=>({x:()=>An(e)})},{kernelName:"Rsqrt",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>dr(En(e,Ft(Jr(n,1.5),2)))}}},{kernelName:"SelectV2",inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>rt(An(n),"float32"),t:()=>Ft(e,rt(n,e.dtype)),e:()=>Ft(e,rt(xr(n),e.dtype))}}},{kernelName:"Selu",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Un(n,Zn(0)),r=Zn(1.7580993408473768),o=Zn(1.0507009873554805),s=Ft(e,o),a=Ft(Ft(e,r),Bn(rt(n,"float32")));return Fn(t,s,a)}}}},{kernelName:"Sigmoid",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ft(e,Ft(n,br(Zn(1),n)))}}},{kernelName:"Sign",gradFunc:e=>({x:()=>An(e)})},{kernelName:"Sin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ft(gn(rt(n,"float32")),e)}}},{kernelName:"Sinh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ft(bn(rt(n,"float32")),e)}}},{kernelName:"Slice",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:o,size:s}=n,a=r.shape,[i,u]=Ot(r,o,s),l=[];for(let t=0;t<e.rank;t++)l.push([i[t],a[t]-i[t]-u[t]]);return{x:()=>Wr(e,l)}}},{kernelName:"Softmax",outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:o}=n,s=Ft(e,r);return{logits:()=>br(s,Ft(yr(s,[o],!0),r))}}},{kernelName:"Softplus",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ft(e,At(n))}}},sl,sl,al,al,{kernelName:"Sqrt",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>En(e,Ft(Uo(rt(n,"float32")),2))}}},{kernelName:"SquaredDifference",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,o=Zn(2);return{a:()=>Ft(e,Ft(o,br(n,r))),b:()=>Ft(e,Ft(o,br(r,n)))}}},{kernelName:"Square",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ft(e,Ft(rt(n,"float32"),2))}}},{kernelName:"Step",gradFunc:e=>({x:()=>An(e)})},{kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,o=Nn(n.shape,r.shape);return{a:()=>{let t=e;const r=Dn(n.shape,o);return r.length>0&&(t=yr(t,r)),Ve(t,n.shape)},b:()=>{let t=e;const n=Dn(r.shape,o);return n.length>0&&(t=yr(t,n)),Ve(dr(t),r.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,o=r.shape.slice(),{axis:s}=n;E(s,r.shape).forEach(e=>{o[e]=1});const a=Ve(e,o),i=Ft(a,Ar(r.shape,"float32"));return{x:()=>i}}},{kernelName:"Tan",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>En(e,Br(gn(n)))}}},{kernelName:"Tanh",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ft(br(Zn(1),Br(n)),e)}}},{kernelName:"Tile",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:o}=n;return{x:()=>{let t=An(r);if(1===r.rank)for(let n=0;n<o[0];++n)t=Pe(t,Kt(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<o[0];++n)for(let s=0;s<o[1];++s)t=Pe(t,Kt(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<o[0];++n)for(let s=0;s<o[1];++s)for(let a=0;a<o[2];++a)t=Pe(t,Kt(e,[n*r.shape[0],s*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<o[0];++n)for(let s=0;s<o[1];++s)for(let a=0;a<o[2];++a)for(let i=0;i<o[3];++i)t=Pe(t,Kt(e,[n*r.shape[0],s*r.shape[1],a*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:"Transpose",gradFunc:(e,t,n)=>{const r=n,{perm:o}=r,s=Ge(o);return{x:()=>He(e,s)}}},{kernelName:"Unpack",gradFunc:(e,t,n)=>{const r=n,{axis:o}=r;return{value:()=>jo(e,o)}}},{kernelName:"UnsortedSegmentSum",inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=nr(t,An(t)),r=Gn(e,n);let o=Vn(t,Zn(0,"int32"));const s=r.rank-o.rank;for(let e=0;e<s;++e)o=Rn(o,e+1);o=vr(o,Ar(r.shape,"bool"));const a=An(r);return Fn(o,r,a)}(e,n)}}},{kernelName:"ZerosLike",gradFunc:e=>({x:()=>An(e)})}];for(const e of il)h(e);se.prototype.abs=function(){return this.throwIfDisposed(),Be(this)},se.prototype.acos=function(){return this.throwIfDisposed(),Re(this)},se.prototype.acosh=function(){return this.throwIfDisposed(),Ce(this)},se.prototype.addStrict=function(e){return this.throwIfDisposed(),bs(this,e)},se.prototype.add=function(e){return this.throwIfDisposed(),Pe(this,e)},se.prototype.all=function(e,t){return this.throwIfDisposed(),je(this,e,t)},se.prototype.any=function(e,t){return this.throwIfDisposed(),Je(this,e,t)},se.prototype.argMax=function(e){return this.throwIfDisposed(),Ye(this,e)},se.prototype.argMin=function(e){return this.throwIfDisposed(),Ze(this,e)},se.prototype.asScalar=function(){return this.throwIfDisposed(),m(1===this.size,()=>"The array must have only 1 element."),Ve(this,[])},se.prototype.asType=function(e){return this.throwIfDisposed(),rt(this,e)},se.prototype.as1D=function(){return this.throwIfDisposed(),Ve(this,[this.size])},se.prototype.as2D=function(e,t){return this.throwIfDisposed(),Ve(this,[e,t])},se.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Ve(this,[e,t,n])},se.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Ve(this,[e,t,n,r])},se.prototype.as5D=function(e,t,n,r,o){return this.throwIfDisposed(),Ve(this,[e,t,n,r,o])},se.prototype.asin=function(){return this.throwIfDisposed(),Xe(this)},se.prototype.asinh=function(){return this.throwIfDisposed(),Qe(this)},se.prototype.atan=function(){return this.throwIfDisposed(),et(this)},se.prototype.atan2=function(e){return this.throwIfDisposed(),tt(this,e)},se.prototype.atanh=function(){return this.throwIfDisposed(),nt(this)},se.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),gt(this,e,t,n,r)},se.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Vt(this,e,t)},se.prototype.batchNorm=function(e,t,n,r,o){return this.throwIfDisposed(),jt(this,e,t,n,r,o)},se.prototype.broadcastTo=function(e){return this.throwIfDisposed(),Qt(this,e)},se.prototype.cast=function(e){return this.throwIfDisposed(),rt(this,e)},se.prototype.ceil=function(){return this.throwIfDisposed(),tn(this)},se.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),nn(this,e,t)},se.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof se&&(e=[e]),Nt([this,...e],t)},se.prototype.conv1d=function(e,t,n,r,o,s){return this.throwIfDisposed(),cn(this,e,t,n,r,o,s)},se.prototype.conv2dTranspose=function(e,t,n,r,o){return this.throwIfDisposed(),pn(this,e,t,n,r,o)},se.prototype.conv2d=function(e,t,n,r,o,s){return this.throwIfDisposed(),ln(this,e,t,n,r,o,s)},se.prototype.cos=function(){return this.throwIfDisposed(),gn(this)},se.prototype.cosh=function(){return this.throwIfDisposed(),bn(this)},se.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),yn(this,e,t,n)},se.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),wn(this,e,t)},se.prototype.depthwiseConv2D=function(e,t,n,r,o,s){return bt("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),kn(this,e,t,n,r,o,s)},se.prototype.depthwiseConv2d=function(e,t,n,r,o,s){return this.throwIfDisposed(),kn(this,e,t,n,r,o,s)},se.prototype.dilation2d=function(e,t,n,r,o){return this.throwIfDisposed(),xn(this,e,t,n,r,o)},se.prototype.divNoNan=function(e){return this.throwIfDisposed(),Tn(this,e)},se.prototype.divStrict=function(e){return this.throwIfDisposed(),ys(this,e)},se.prototype.div=function(e){return this.throwIfDisposed(),En(this,e)},se.prototype.dot=function(e){return this.throwIfDisposed(),Mn(this,e)},se.prototype.elu=function(){return this.throwIfDisposed(),$n(this)},se.prototype.equalStrict=function(e){return this.throwIfDisposed(),hs(this,e)},se.prototype.equal=function(e){return this.throwIfDisposed(),In(this,e)},se.prototype.erf=function(){return this.throwIfDisposed(),_n(this)},se.prototype.exp=function(){return this.throwIfDisposed(),Bn(this)},se.prototype.expandDims=function(e){return this.throwIfDisposed(),Rn(this,e)},se.prototype.expm1=function(){return this.throwIfDisposed(),Cn(this)},se.prototype.fft=function(){return this.throwIfDisposed(),Ln(this)},se.prototype.flatten=function(){return this.throwIfDisposed(),Ve(this,[this.size])},se.prototype.floor=function(){return this.throwIfDisposed(),On(this)},se.prototype.floorDiv=function(e){return this.throwIfDisposed(),Sn(this,e)},se.prototype.gather=function(e,t){return this.throwIfDisposed(),Gn(this,e,t)},se.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),ps(this,e)},se.prototype.greaterEqual=function(e){return this.throwIfDisposed(),Vn(this,e)},se.prototype.greaterStrict=function(e){return this.throwIfDisposed(),ds(this,e)},se.prototype.greater=function(e){return this.throwIfDisposed(),Un(this,e)},se.prototype.ifft=function(){return this.throwIfDisposed(),Hn(this)},se.prototype.irfft=function(){return this.throwIfDisposed(),Xn(this)},se.prototype.isFinite=function(){return this.throwIfDisposed(),Qn(this)},se.prototype.isInf=function(){return this.throwIfDisposed(),er(this)},se.prototype.isNaN=function(){return this.throwIfDisposed(),tr(this)},se.prototype.leakyRelu=function(e){return this.throwIfDisposed(),rr(this,e)},se.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),fs(this,e)},se.prototype.lessEqual=function(e){return this.throwIfDisposed(),sr(this,e)},se.prototype.lessStrict=function(e){return this.throwIfDisposed(),ms(this,e)},se.prototype.less=function(e){return this.throwIfDisposed(),or(this,e)},se.prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),ir(this,e,t,n,r)},se.prototype.logSigmoid=function(){return this.throwIfDisposed(),mr(this)},se.prototype.logSoftmax=function(e){return this.throwIfDisposed(),wr(this,e)},se.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),kr(this,e,t)},se.prototype.log=function(){return this.throwIfDisposed(),ur(this)},se.prototype.log1p=function(){return this.throwIfDisposed(),lr(this)},se.prototype.logicalAnd=function(e){return this.throwIfDisposed(),vr(this,e)},se.prototype.logicalNot=function(){return this.throwIfDisposed(),xr(this)},se.prototype.logicalOr=function(e){return this.throwIfDisposed(),Sr(this,e)},se.prototype.logicalXor=function(e){return this.throwIfDisposed(),Er(this,e)},se.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),It(this,e,t,n)},se.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Dr(this,e,t,n,r)},se.prototype.max=function(e,t){return this.throwIfDisposed(),gr(this,e,t)},se.prototype.maximumStrict=function(e){return this.throwIfDisposed(),ws(this,e)},se.prototype.maximum=function(e){return this.throwIfDisposed(),nr(this,e)},se.prototype.mean=function(e,t){return this.throwIfDisposed(),Tr(this,e,t)},se.prototype.min=function(e,t){return this.throwIfDisposed(),Mr(this,e,t)},se.prototype.minimumStrict=function(e){return this.throwIfDisposed(),ks(this,e)},se.prototype.minimum=function(e){return this.throwIfDisposed(),$r(this,e)},se.prototype.modStrict=function(e){return this.throwIfDisposed(),vs(this,e)},se.prototype.mod=function(e){return this.throwIfDisposed(),_r(this,e)},se.prototype.mulStrict=function(e){return this.throwIfDisposed(),xs(this,e)},se.prototype.mul=function(e){return this.throwIfDisposed(),Ft(this,e)},se.prototype.neg=function(){return this.throwIfDisposed(),dr(this)},se.prototype.norm=function(e,t,n){return this.throwIfDisposed(),Ns(this,e,t,n)},se.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),gs(this,e)},se.prototype.notEqual=function(e){return this.throwIfDisposed(),zr(this,e)},se.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Lr(this,e,t,n)},se.prototype.onesLike=function(){return this.throwIfDisposed(),qr(this)},se.prototype.pad=function(e,t){return this.throwIfDisposed(),Wr(this,e,t)},se.prototype.pool=function(e,t,n,r,o){return this.throwIfDisposed(),jr(this,e,t,n,r,o)},se.prototype.powStrict=function(e){return this.throwIfDisposed(),Ss(this,e)},se.prototype.pow=function(e){return this.throwIfDisposed(),Jr(this,e)},se.prototype.prelu=function(e){return this.throwIfDisposed(),Yr(this,e)},se.prototype.prod=function(e,t){return this.throwIfDisposed(),Xr(this,e,t)},se.prototype.reciprocal=function(){return this.throwIfDisposed(),xo(this)},se.prototype.relu=function(){return this.throwIfDisposed(),So(this)},se.prototype.relu6=function(){return this.throwIfDisposed(),Eo(this)},se.prototype.reshapeAs=function(e){return this.throwIfDisposed(),Ve(this,e.shape)},se.prototype.reshape=function(e){return this.throwIfDisposed(),Ve(this,e)},se.prototype.resizeBilinear=function(e,t){return this.throwIfDisposed(),wa(this,e,t)},se.prototype.resizeNearestNeighbor=function(e,t){return this.throwIfDisposed(),ka(this,e,t)},se.prototype.reverse=function(e){return this.throwIfDisposed(),Yn(this,e)},se.prototype.rfft=function(){return this.throwIfDisposed(),Mo(this)},se.prototype.round=function(){return this.throwIfDisposed(),$o(this)},se.prototype.rsqrt=function(){return this.throwIfDisposed(),_o(this)},se.prototype.selu=function(){return this.throwIfDisposed(),Bo(this)},se.prototype.separableConv2d=function(e,t,n,r,o,s){return this.throwIfDisposed(),Ro(this,e,t,n,r,o,s)},se.prototype.sigmoid=function(){return this.throwIfDisposed(),At(this)},se.prototype.sign=function(){return this.throwIfDisposed(),Po(this)},se.prototype.sin=function(){return this.throwIfDisposed(),zo(this)},se.prototype.sinh=function(){return this.throwIfDisposed(),Lo(this)},se.prototype.slice=function(e,t){return this.throwIfDisposed(),Kt(this,e,t)},se.prototype.softmax=function(e){return this.throwIfDisposed(),Go(this,e)},se.prototype.softplus=function(){return this.throwIfDisposed(),fr(this)},se.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Hr(this,e,t)},se.prototype.split=function(e,t){return this.throwIfDisposed(),To(this,e,t)},se.prototype.sqrt=function(){return this.throwIfDisposed(),Uo(this)},se.prototype.square=function(){return this.throwIfDisposed(),Br(this)},se.prototype.squaredDifference=function(e){return this.throwIfDisposed(),Vo(this,e)},se.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),Es(this,e)},se.prototype.squeeze=function(e){return this.throwIfDisposed(),Ho(this,e)},se.prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof se?[this,e]:[this,...e];return jo(n,t)},se.prototype.step=function(e){return this.throwIfDisposed(),Jo(this,e)},se.prototype.stridedSlice=function(e,t,n,r,o,s,a,i){return this.throwIfDisposed(),Yo(this,e,t,n,r,o,s,a,i)},se.prototype.subStrict=function(e){return this.throwIfDisposed(),Ds(this,e)},se.prototype.sub=function(e){return this.throwIfDisposed(),br(this,e)},se.prototype.sum=function(e,t){return this.throwIfDisposed(),yr(this,e,t)},se.prototype.tan=function(){return this.throwIfDisposed(),Zo(this)},se.prototype.tanh=function(){return this.throwIfDisposed(),Gt(this)},se.prototype.tile=function(e){return this.throwIfDisposed(),Pn(this,e)},se.prototype.toBool=function(){return this.throwIfDisposed(),rt(this,"bool")},se.prototype.toFloat=function(){return this.throwIfDisposed(),rt(this,"float32")},se.prototype.toInt=function(){return this.throwIfDisposed(),rt(this,"int32")},se.prototype.topk=function(e,t){return this.throwIfDisposed(),rs(this,e,t)},se.prototype.transpose=function(e){return this.throwIfDisposed(),He(this,e)},se.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),ss(this,e,t)},se.prototype.unstack=function(e){return this.throwIfDisposed(),as(this,e)},se.prototype.where=function(e,t){return this.throwIfDisposed(),Fn(e,this,t)},se.prototype.zerosLike=function(){return this.throwIfDisposed(),An(this)},e.Abs="Abs",e.Acos="Acos",e.Acosh="Acosh",e.AdadeltaOptimizer=qi,e.AdagradOptimizer=Oi,e.AdamOptimizer=Wi,e.AdamaxOptimizer=Ki,e.Add="Add",e.AddN="AddN",e.All="All",e.Any="Any",e.ArgMax="ArgMax",e.ArgMin="ArgMin",e.Asin="Asin",e.Asinh="Asinh",e.Atan="Atan",e.Atan2="Atan2",e.Atanh="Atanh",e.AvgPool="AvgPool",e.AvgPool3D="AvgPool3D",e.AvgPool3DBackprop="AvgPool3DBackprop",e.AvgPoolBackprop="AvgPoolBackprop",e.BatchMatMul="BatchMatMul",e.BatchToSpaceND="BatchToSpaceND",e.BroadcastTo="BroadcastTo",e.Cast="Cast",e.Ceil="Ceil",e.ClipByValue="ClipByValue",e.Complex="Complex",e.Concat="Concat",e.Conv2D="Conv2D",e.Conv2DBackpropFilter="Conv2DBackpropFilter",e.Conv2DBackpropInput="Conv2DBackpropInput",e.Conv3D="Conv3D",e.Conv3DBackpropFilterV2="Conv3DBackpropFilterV2",e.Conv3DBackpropInputV2="Conv3DBackpropInputV2",e.Cos="Cos",e.Cosh="Cosh",e.CropAndResize="CropAndResize",e.Cumsum="Cumsum",e.DataStorage=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},e.DepthToSpace="DepthToSpace",e.DepthwiseConv2dNative="DepthwiseConv2dNative",e.DepthwiseConv2dNativeBackpropFilter="DepthwiseConv2dNativeBackpropFilter",e.DepthwiseConv2dNativeBackpropInput="DepthwiseConv2dNativeBackpropInput",e.Diag="Diag",e.Dilation2D="Dilation2D",e.Dilation2DBackpropFilter="Dilation2DBackpropFilter",e.Dilation2DBackpropInput="Dilation2DBackpropInput",e.Div="Div",e.Elu="Elu",e.EluGrad="EluGrad",e.Environment=t,e.Equal="Equal",e.Erf="Erf",e.Exp="Exp",e.Expm1="Expm1",e.FFT="FFT",e.Fill="Fill",e.FlipLeftRight="FlipLeftRight",e.Floor="Floor",e.FloorDiv="FloorDiv",e.FromPixels="FromPixels",e.FusedBatchNorm="FusedBatchNorm",e.FusedConv2D="FusedConv2D",e.FusedDepthwiseConv2D="FusedDepthwiseConv2D",e.GatherNd="GatherNd",e.GatherV2="GatherV2",e.Greater="Greater",e.GreaterEqual="GreaterEqual",e.IFFT="IFFT",e.Identity="Identity",e.Imag="Imag",e.IsFinite="IsFinite",e.IsInf="IsInf",e.IsNan="IsNan",e.KernelBackend=class{time(e){return Xi("time")}read(e){return Xi("read")}readSync(e){return Xi("readSync")}numDataIds(){return Xi("numDataIds")}disposeData(e){return Xi("disposeData")}write(e,t,n){return Xi("write")}move(e,t,n,r){return Xi("move")}memory(){return Xi("memory")}floatPrecision(){return Xi("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,r){return Xi("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:o,activation:s,preluActivationWeights:a}){return Xi("fusedBatchMatMul")}slice(e,t,n){return Xi("slice")}stridedSlice(e,t,n,r){return Xi("stridedSlice")}unstack(e,t){return Xi("unstack")}reverse(e,t){return Xi("reverse")}concat(e,t){return Xi("concat")}neg(e){return Xi("neg")}add(e,t){return Xi("add")}addN(e){return Xi("addN")}subtract(e,t){return Xi("subtract")}multiply(e,t){return Xi("multiply")}realDivide(e,t){return Xi("realDivide")}floorDiv(e,t){return Xi("floorDiv")}sum(e,t){return Xi("sum")}prod(e,t){return Xi("prod")}unsortedSegmentSum(e,t,n){return Xi("unsortedSegmentSum")}argMin(e,t){return Xi("argMin")}argMax(e,t){return Xi("argMax")}equal(e,t){return Xi("equal")}notEqual(e,t){return Xi("notEqual")}less(e,t){return Xi("less")}lessEqual(e,t){return Xi("lessEqual")}greater(e,t){return Xi("greater")}greaterEqual(e,t){return Xi("greaterEqual")}logicalNot(e){return Xi("logicalNot")}logicalAnd(e,t){return Xi("logicalAnd")}logicalOr(e,t){return Xi("logicalOr")}where(e){return Xi("where")}select(e,t,n){return Xi("select")}topk(e,t,n){return Xi("topk")}min(e,t){return Xi("min")}minimum(e,t){return Xi("minimum")}mod(e,t){return Xi("mod")}max(e,t){return Xi("max")}maximum(e,t){return Xi("maximum")}all(e,t){return Xi("all")}any(e,t){return Xi("any")}squaredDifference(e,t){return Xi("squaredDifference")}ceil(e){return Xi("ceil")}floor(e){return Xi("floor")}round(e){return Xi("round")}sign(e){return Xi("sign")}isNaN(e){return Xi("isNaN")}isInf(e){return Xi("isInf")}isFinite(e){return Xi("isFinite")}pow(e,t){return Xi("pow")}exp(e){return Xi("exp")}expm1(e){return Xi("expm1")}softmax(e,t){return Xi("softmax")}log(e){return Xi("log")}log1p(e){return Xi("log1p")}sqrt(e){return Xi("sqrt")}rsqrt(e){return Xi("rsqrt")}square(e){return Xi("square")}reciprocal(e){return Xi("reciprocal")}relu(e){return Xi("relu")}relu6(e){return Xi("relu6")}prelu(e,t){return Xi("prelu")}elu(e){return Xi("elu")}eluDer(e,t){return Xi("eluDer")}selu(e){return Xi("selu")}int(e){return Xi("int")}clip(e,t,n){return Xi("clip")}abs(e){return Xi("abs")}complexAbs(e){return Xi("complexAbs")}sigmoid(e){return Xi("sigmoid")}softplus(e){return Xi("softplus")}sin(e){return Xi("sin")}cos(e){return Xi("cos")}tan(e){return Xi("tan")}asin(e){return Xi("asin")}acos(e){return Xi("acos")}atan(e){return Xi("atan")}atan2(e,t){return Xi("atan2")}sinh(e){return Xi("sinh")}cosh(e){return Xi("cosh")}tanh(e){return Xi("tanh")}asinh(e){return Xi("asinh")}acosh(e){return Xi("acosh")}atanh(e){return Xi("atanh")}erf(e){return Xi("erf")}step(e,t){return Xi("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:o,preluActivationWeights:s}){return Xi("fusedConv2d")}conv2d(e,t,n){return Xi("conv2d")}conv2dDerInput(e,t,n){return Xi("conv2dDerInput")}conv2dDerFilter(e,t,n){return Xi("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:o,preluActivationWeights:s}){return Xi("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return Xi("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return Xi("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return Xi("depthwiseConv2DDerFilter")}conv3d(e,t,n){return Xi("conv3d")}conv3dDerInput(e,t,n){return Xi("conv3dDerInput")}conv3dDerFilter(e,t,n){return Xi("conv3dDerFilter")}maxPool(e,t){return Xi("maxPool")}maxPoolBackprop(e,t,n,r){return Xi("maxPoolBackprop")}avgPool(e,t){return Xi("avgPool")}avgPoolBackprop(e,t,n){return Xi("avgPoolBackprop")}avgPool3d(e,t){return Xi("avgPool3d")}avgPool3dBackprop(e,t,n){return Xi("avgPool3dBackprop")}maxPool3d(e,t){return Xi("maxPool3d")}maxPool3dBackprop(e,t,n,r){return Xi("maxPool3dBackprop")}reshape(e,t){return Xi("reshape")}cast(e,t){return Xi("cast")}tile(e,t){return Xi("tile")}pad(e,t,n){return Xi("pad")}transpose(e,t){return Xi("transpose")}gather(e,t,n){return Xi("gather")}gatherND(e,t){return Xi("gatherND")}scatterND(e,t,n){return Xi("scatterND")}batchToSpaceND(e,t,n){return Xi("batchToSpaceND")}spaceToBatchND(e,t,n){return Xi("spaceToBatchND")}resizeBilinear(e,t,n,r){return Xi("resizeBilinear")}resizeBilinearBackprop(e,t,n){return Xi("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,r){return Xi("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return Xi("resizeNearestNeighborBackprop")}batchNorm(e,t,n,r,o,s){return Xi("batchNorm")}localResponseNormalization4D(e,t,n,r,o){return Xi("localResponseNormalization4D")}LRNGrad(e,t,n,r,o,s,a){return Xi("LRNGrad")}multinomial(e,t,n,r){return Xi("multinomial")}oneHot(e,t,n,r){return Xi("oneHot")}cumsum(e,t,n,r){return Xi("cumsum")}nonMaxSuppression(e,t,n,r,o){return Xi("nonMaxSuppression")}fft(e){return Xi("fft")}ifft(e){return Xi("ifft")}complex(e,t){return Xi("complex")}real(e){return Xi("real")}imag(e){return Xi("imag")}cropAndResize(e,t,n,r,o,s){return Xi("cropAndResize")}depthToSpace(e,t,n){return Xi("depthToSpace")}split(e,t,n){return Xi("split")}sparseToDense(e,t,n,r){return Xi("sparseToDense")}diag(e){return Xi("diag")}fill(e,t,n){return Xi("fill")}onesLike(e){return Xi("onesLike")}zerosLike(e){return Xi("zerosLike")}linspace(e,t,n){return Xi("linspace")}dispose(){return Xi("dispose")}},e.LRN="LRN",e.LRNBackprop="LRNBackprop",e.Less="Less",e.LessEqual="LessEqual",e.LinSpace="LinSpace",e.Log="Log",e.Log1p="Log1p",e.LogSoftmax="LogSoftmax",e.LogicalAnd="LogicalAnd",e.LogicalNot="LogicalNot",e.LogicalOr="LogicalOr",e.Max="Max",e.MaxPool="MaxPool",e.MaxPool3D="MaxPool3D",e.MaxPool3DBackprop="MaxPool3DBackprop",e.MaxPoolBackprop="MaxPoolBackprop",e.MaxPoolWithArgmax="MaxPoolWithArgmax",e.Maximum="Maximum",e.Mean="Mean",e.Min="Min",e.Minimum="Minimum",e.Mod="Mod",e.MomentumOptimizer=Ui,e.Multiply="Multiply",e.Negate="Negate",e.NonMaxSuppressionV3="NonMaxSuppressionV3",e.NonMaxSuppressionV4="NonMaxSuppressionV4",e.NonMaxSuppressionV5="NonMaxSuppressionV5",e.NotEqual="NotEqual",e.OneHot="OneHot",e.OnesLike="OnesLike",e.Optimizer=Li,e.PadV2="PadV2",e.Pool="Pool",e.Pow="Pow",e.Prelu="Prelu",e.Prod="Prod",e.RMSPropOptimizer=Vi,e.Range="Range",e.Real="Real",e.Reciprocal="Reciprocal",e.Relu="Relu",e.Relu6="Relu6",e.Reshape="Reshape",e.ResizeBilinear="ResizeBilinear",e.ResizeBilinearGrad="ResizeBilinearGrad",e.ResizeNearestNeighbor="ResizeNearestNeighbor",e.ResizeNearestNeighborGrad="ResizeNearestNeighborGrad",e.Reverse="Reverse",e.RotateWithOffset="RotateWithOffset",e.Round="Round",e.Rsqrt="Rsqrt",e.SGDOptimizer=Gi,e.ScatterNd="ScatterNd",e.SelectV2="SelectV2",e.Selu="Selu",e.Sigmoid="Sigmoid",e.Sign="Sign",e.Sin="Sin",e.Sinh="Sinh",e.Slice="Slice",e.Softmax="Softmax",e.Softplus="Softplus",e.SpaceToBatchND="SpaceToBatchND",e.SparseToDense="SparseToDense",e.SplitV="SplitV",e.Sqrt="Sqrt",e.Square="Square",e.SquaredDifference="SquaredDifference",e.Step="Step",e.StridedSlice="StridedSlice",e.Sub="Sub",e.Sum="Sum",e.Tan="Tan",e.Tanh="Tanh",e.Tensor=se,e.TensorBuffer=ne,e.Tile="Tile",e.TopK="TopK",e.Transpose="Transpose",e.Unpack="Unpack",e.UnsortedSegmentSum="UnsortedSegmentSum",e.Variable=ae,e.ZerosLike="ZerosLike",e._FusedMatMul="_FusedMatMul",e.abs=Be,e.acos=Re,e.acosh=Ce,e.add=Pe,e.addN=ze,e.addStrict=bs,e.all=je,e.any=Je,e.argMax=Ye,e.argMin=Ze,e.asin=Xe,e.asinh=Qe,e.atan=et,e.atan2=tt,e.atanh=nt,e.avgPool=gt,e.avgPool3d=vt,e.backend=function(){return ke.backend},e.backend_util=Yi,e.basicLSTMCell=Ut,e.batchNorm=jt,e.batchNorm2d=Jt,e.batchNorm3d=Yt,e.batchNorm4d=Zt,e.batchToSpaceND=Vt,e.booleanMaskAsync=cs,e.broadcastTo=Qt,e.browser=$i,e.buffer=en,e.cast=rt,e.ceil=tn,e.clipByValue=nn,e.clone=Xt,e.complex=rn,e.concat=Nt,e.concat1d=on,e.concat2d=sn,e.concat3d=an,e.concat4d=un,e.conv1d=cn,e.conv2d=ln,e.conv2dTranspose=pn,e.conv3d=dn,e.conv3dTranspose=mn,e.cos=gn,e.cosh=bn,e.cosineWindow=Ps,e.cumsum=yn,e.customGrad=hr,e.deprecationWarn=bt,e.depthToSpace=wn,e.depthwiseConv2d=kn,e.device_util=Se,e.diag=vn,e.dilation2d=xn,e.disableDeprecationWarnings=function(){n().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")},e.dispose=wt,e.disposeVariables=function(){ke.disposeVariables()},e.div=En,e.divNoNan=Tn,e.divStrict=ys,e.dot=Mn,e.dropout=Rs,e.elu=$n,e.enableDebugMode=function(){n().set("DEBUG",!0)},e.enableProdMode=function(){n().set("PROD",!0)},e.enclosingPowerOfTwo=Cs,e.engine=function(){return ke},e.env=n,e.equal=In,e.equalStrict=hs,e.erf=_n,e.exp=Bn,e.expandDims=Rn,e.expm1=Cn,e.eye=zn,e.fft=Ln,e.fill=qn,e.findBackend=function(e){return ke.findBackend(e)},e.findBackendFactory=function(e){return ke.findBackendFactory(e)},e.floor=On,e.floorDiv=Sn,e.fused=Js,e.gather=Gn,e.gatherND=Bs,e.gather_util=Bi,e.getBackend=function(){return ke.backendName},e.getGradient=l,e.getKernel=u,e.getKernelsForBackend=c,e.grad=function(e){return m(z(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const r=Me(t,"x","tf.grad",null),o=null!=n?Me(n,"dy","tf.grad"):null;return ke.tidy(()=>{const{value:t,grads:n}=ke.gradients(()=>e(r),[r],o);return null!=o&&g(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),pr(n),n[0]})}},e.grads=function(e){return m(z(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{m(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=$e(t,"args","tf.grads",null),o=null!=n?Me(n,"dy","tf.grads"):null;return ke.tidy(()=>{const{value:t,grads:n}=ke.gradients(()=>e(...r),r,o);return null!=o&&g(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),pr(n),n})}},e.greater=Un,e.greaterEqual=Vn,e.greaterEqualStrict=ps,e.greaterStrict=ds,e.ifft=Hn,e.imag=jn,e.image=Pa,e.inTopKAsync=zs,e.io=Ii,e.irfft=Xn,e.isFinite=Qn,e.isInf=er,e.isNaN=tr,e.keep=kt,e.kernel_impls=Zi,e.leakyRelu=rr,e.less=or,e.lessEqual=sr,e.lessEqualStrict=fs,e.lessStrict=ms,e.linalg=za,e.linspace=ar,e.localResponseNormalization=ir,e.log=ur,e.log1p=lr,e.logSigmoid=mr,e.logSoftmax=wr,e.logSumExp=kr,e.logicalAnd=vr,e.logicalNot=xr,e.logicalOr=Sr,e.logicalXor=Er,e.losses=La,e.matMul=It,e.math=Ai,e.max=gr,e.maxPool=Dr,e.maxPool3d=Nr,e.maxPoolWithArgmax=Ir,e.maximum=nr,e.maximumStrict=ws,e.mean=Tr,e.memory=function(){return ke.memory()},e.min=Mr,e.minimum=$r,e.minimumStrict=ks,e.mod=_r,e.modStrict=vs,e.moments=Rr,e.movingAverage=Is,e.mul=Ft,e.mulStrict=xs,e.multiRNNCell=Cr,e.multinomial=Pr,e.neg=dr,e.nextFrame=function(){return new Promise(e=>Ji(()=>e()))},e.norm=Ns,e.notEqual=zr,e.notEqualStrict=gs,e.oneHot=Lr,e.ones=Ar,e.onesLike=qr,e.op=_e,e.outerProduct=Or,e.pad=Wr,e.pad1d=Kr,e.pad2d=Gr,e.pad3d=Ur,e.pad4d=Vr,e.pool=jr,e.pow=Jr,e.powStrict=Ss,e.prelu=Yr,e.print=Zr,e.prod=Xr,e.profile=function(e){return ke.profile(e)},e.rand=Qr,e.randomGamma=bo,e.randomNormal=yo,e.randomUniform=wo,e.range=vo,e.ready=function(){return ke.ready()},e.real=Jn,e.reciprocal=xo,e.registerBackend=function(e,t,n=1){return ke.registerBackend(e,t,n)},e.registerGradient=h,e.registerKernel=function(e){const{kernelName:t,backendName:n}=e,r=p(t,n);a.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),a.set(r,e)},e.relu=So,e.relu6=Eo,e.removeBackend=function(e){ke.removeBackend(e)},e.reshape=Ve,e.reverse=Yn,e.reverse1d=Do,e.reverse2d=No,e.reverse3d=Io,e.reverse4d=Fo,e.rfft=Mo,e.round=$o,e.rsqrt=_o,e.scalar=Zn,e.scatterND=$s,e.scatter_util=Ms,e.selu=Bo,e.separableConv2d=Ro,e.serialization=zi,e.setBackend=function(e){return ke.setBackend(e)},e.setPlatform=function(e,t){n().setPlatform(e,t)},e.setdiff1dAsync=Co,e.sigmoid=At,e.sign=Po,e.signal=Ca,e.sin=zo,e.sinh=Lo,e.slice=Kt,e.slice1d=qo,e.slice2d=Oo,e.slice3d=Wo,e.slice4d=Ko,e.slice_util=Wt,e.softmax=Go,e.softplus=fr,e.spaceToBatchND=Hr,e.sparseToDense=_s,e.spectral=Ra,e.split=To,e.sqrt=Uo,e.square=Br,e.squaredDifference=Vo,e.squaredDifferenceStrict=Es,e.squeeze=Ho,e.stack=jo,e.step=Jo,e.stridedSlice=Yo,e.sub=br,e.subStrict=Ds,e.sum=yr,e.sumOutType=function(e){return de(e,"int32")},e.tan=Zo,e.tanh=Gt,e.tensor=Dt,e.tensor1d=ko,e.tensor2d=Xo,e.tensor3d=Qo,e.tensor4d=es,e.tensor5d=ts,e.tensor6d=ns,e.tensor_util=be,e.test_util=po,e.tidy=yt,e.tile=Pn,e.time=function(e){return ke.time(e)},e.topk=rs,e.train=ji,e.transpose=He,e.truncatedNormal=os,e.unregisterGradient=function(e){if(!i.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);i.delete(e)},e.unregisterKernel=function(e,t){const n=p(e,t);if(!a.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);a.delete(n)},e.unsortedSegmentSum=ss,e.unstack=as,e.upcastType=de,e.util=J,e.valueAndGrad=function(e){return m(z(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{m(t instanceof se,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),m(null==n||n instanceof se,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:o}=ke.gradients(()=>e(t),[t],n);return pr(r),{grad:r[0],value:o}}},e.valueAndGrads=function(e){return m(z(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{m(Array.isArray(t)&&t.every(e=>e instanceof se),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),m(null==n||n instanceof se,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=ke.gradients(()=>e(...t),t,n);return null!=n&&g(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),pr(r.grads),r}},e.variable=is,e.variableGrads=cr,e.version_core="2.3.0",e.where=Fn,e.whereAsync=ls,e.zeros=Fr,e.zerosLike=An,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=tf-core.es2017.min.js.map
