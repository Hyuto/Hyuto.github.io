{"version":3,"file":"component---src-pages-showcase-yolov-5-tfjs-index-js-d190e5c43f0f39fbd893.js","mappings":"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","sources":["webpack://Hyuto.github.io/./src/pages/showcase/yolov5-tfjs/index.js","webpack://Hyuto.github.io/./src/pages/showcase/yolov5-tfjs/yolov5-tfjs.module.scss"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport Layout from \"templates/showcase\";\r\nimport Loader from \"components/loader/loader\";\r\nimport labels from \"./labels.json\";\r\nimport metadata from \"showcase/yolov5-tfjs.json\";\r\nimport * as style from \"./yolov5-tfjs.module.scss\";\r\n\r\nconst YOLOv5OD = () => {\r\n  const [model, setModel] = useState(null);\r\n  const [webcam, setWebcam] = useState(\"close\");\r\n  const [loading, setLoading] = useState(\"loading\");\r\n  const [aniId, setAniId] = useState(null);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const openWebcam = () => {\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n      navigator.mediaDevices\r\n        .getUserMedia({\r\n          audio: false,\r\n          video: {\r\n            facingMode: \"environment\",\r\n          },\r\n        })\r\n        .then((stream) => {\r\n          window.localStream = stream;\r\n          videoRef.current.srcObject = stream;\r\n          setWebcam(\"open\");\r\n        });\r\n    } else alert(\"Can't open Webcam!\");\r\n  };\r\n\r\n  const closeWebcam = () => {\r\n    if (videoRef.current.srcObject) {\r\n      videoRef.current.srcObject = null;\r\n      window.localStream.getTracks().forEach((track) => {\r\n        track.stop();\r\n      });\r\n      setWebcam(\"close\");\r\n    } else alert(\"Please open Webcam first!\");\r\n  };\r\n\r\n  const renderPrediction = (boxes_data, scores_data, classes_data, valid_detections_data) => {\r\n    const ctx = canvasRef.current.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); //clean canvas\r\n\r\n    const font = \"11px sans-serif\";\r\n    ctx.font = font;\r\n    ctx.textBaseline = \"top\";\r\n\r\n    for (let i = 0; i < valid_detections_data; ++i) {\r\n      let [x1, y1, x2, y2] = boxes_data.slice(i * 4, (i + 1) * 4);\r\n      x1 *= canvasRef.current.width;\r\n      x2 *= canvasRef.current.width;\r\n      y1 *= canvasRef.current.height;\r\n      y2 *= canvasRef.current.height;\r\n      const width = x2 - x1;\r\n      const height = y2 - y1;\r\n      const klass = labels[classes_data[i]];\r\n      const score = scores_data[i].toFixed(2);\r\n\r\n      // Draw the bounding box.\r\n      ctx.strokeStyle = \"#00FFFF\";\r\n      ctx.lineWidth = 2;\r\n      ctx.strokeRect(x1, y1, width, height);\r\n\r\n      // Draw the label background.\r\n      ctx.fillStyle = \"#00FFFF\";\r\n      const textWidth = ctx.measureText(klass + \":\" + score).width;\r\n      const textHeight = parseInt(font, 10); // base 10\r\n      ctx.fillRect(x1, y1, textWidth + 4, textHeight + 4);\r\n      ctx.fillStyle = \"#000000\";\r\n      ctx.fillText(klass + \":\" + score, x1, y1);\r\n    }\r\n  };\r\n\r\n  const detectFrame = () => {\r\n    tf.engine().startScope();\r\n    let [modelWidth, modelHeight] = model.inputs[0].shape.slice(1, 3);\r\n    const input = tf.tidy(() => {\r\n      return tf.image\r\n        .resizeBilinear(tf.browser.fromPixels(videoRef.current), [modelWidth, modelHeight])\r\n        .div(255.0)\r\n        .expandDims(0);\r\n    });\r\n\r\n    model.executeAsync(input).then((res) => {\r\n      const [boxes, scores, classes, valid_detections] = res;\r\n      const boxes_data = boxes.dataSync();\r\n      const scores_data = scores.dataSync();\r\n      const classes_data = classes.dataSync();\r\n      const valid_detections_data = valid_detections.dataSync()[0];\r\n      renderPrediction(boxes_data, scores_data, classes_data, valid_detections_data);\r\n      tf.dispose(res);\r\n    });\r\n\r\n    const reqId = requestAnimationFrame(() => {\r\n      detectFrame();\r\n    });\r\n    setAniId(reqId);\r\n    tf.engine().endScope();\r\n  };\r\n\r\n  useEffect(() => {\r\n    tf.loadGraphModel(`${window.location.origin}/model/yolov5n_web_model/model.json`).then((e) => {\r\n      setModel(e);\r\n      setLoading(\"ready\");\r\n      tf.setBackend(\"webgl\");\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Layout title={metadata.title} description={metadata.description}>\r\n      <div className={style.YOLOWrapper}>\r\n        <div className={style.title}>\r\n          <h2>{metadata.title}</h2>\r\n          <p>{metadata.description}</p>\r\n        </div>\r\n        <div className={style.content}>\r\n          <Loader style={{ display: loading === \"ready\" ? \"none\" : null }}>Loading model...</Loader>\r\n          <div className={style.main}>\r\n            <video\r\n              style={{ display: webcam === \"open\" ? \"block\" : \"none\" }}\r\n              autoPlay\r\n              playsInline\r\n              muted\r\n              ref={videoRef}\r\n            />\r\n            <canvas\r\n              style={{\r\n                display: webcam === \"open\" ? \"block\" : \"none\",\r\n                position: \"absolute\",\r\n                top: \"0\",\r\n                left: \"0\",\r\n              }}\r\n              ref={canvasRef}\r\n            />\r\n          </div>\r\n          <div className={style.btnWrapper}>\r\n            <button\r\n              disabled={loading === \"loading\"}\r\n              onClick={() => {\r\n                if (webcam === \"close\") {\r\n                  openWebcam();\r\n                  videoRef.current.onloadedmetadata = (e) => {\r\n                    detectFrame();\r\n                  };\r\n                } else {\r\n                  cancelAnimationFrame(aniId);\r\n                  setAniId(null);\r\n                  closeWebcam();\r\n                }\r\n              }}\r\n            >\r\n              {webcam === \"open\" ? \"Close\" : \"Open\"} Webcam\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default YOLOv5OD;\r\n","// extracted by mini-css-extract-plugin\nexport var YOLOWrapper = \"yolov5-tfjs-module--YOLOWrapper--18avy\";\nexport var title = \"yolov5-tfjs-module--title--3YIMQ\";\nexport var content = \"yolov5-tfjs-module--content--3yvli\";\nexport var main = \"yolov5-tfjs-module--main--3DtK8\";\nexport var btnWrapper = \"yolov5-tfjs-module--btnWrapper--3KLOo\";\nexport var prediction = \"yolov5-tfjs-module--prediction--1zD4t\";"],"names":["useState","model","setModel","webcam","setWebcam","loading","setLoading","aniId","setAniId","videoRef","useRef","canvasRef","detectFrame","tf","startScope","inputs","shape","slice","modelWidth","modelHeight","input","current","div","expandDims","executeAsync","then","res","boxes","scores","classes","valid_detections","boxes_data","scores_data","classes_data","valid_detections_data","ctx","getContext","clearRect","canvas","width","height","font","textBaseline","i","x1","y1","x2","y2","klass","labels","score","toFixed","strokeStyle","lineWidth","strokeRect","fillStyle","textWidth","measureText","textHeight","parseInt","fillRect","fillText","renderPrediction","dataSync","reqId","requestAnimationFrame","endScope","useEffect","window","location","origin","e","title","metadata","description","className","style","display","autoPlay","playsInline","muted","ref","position","top","left","disabled","onClick","navigator","mediaDevices","getUserMedia","audio","video","facingMode","stream","localStream","srcObject","alert","onloadedmetadata","cancelAnimationFrame","getTracks","forEach","track","stop"],"sourceRoot":""}