{"version":3,"file":"component---src-pages-showcase-sa-corona-index-js-822593626dec0924b185.js","mappings":"iXAEWA,EAAQ,iCCkInB,EA7HmB,WACjB,OAA0BC,EAAAA,EAAAA,UAAS,IAA5BC,EAAP,KAAcC,EAAd,KACA,GAAoCF,EAAAA,EAAAA,UAAS,CAAEG,MAAO,KAAMC,YAAa,CAAC,EAAG,KAAtEC,EAAP,KAAmBC,EAAnB,KACA,GAA8BN,EAAAA,EAAAA,WAAS,GAAhCO,EAAP,KAAgBC,EAAhB,KACMC,GAAQC,EAAAA,EAAAA,QAAO,MAEfC,EAAQ,mCAAG,WAAOC,GAAP,wEACfA,EAAEC,iBACFL,GAAW,GAFI,SAGTM,MAAM,8CAA+C,CACzDC,OAAQ,OACRC,KAAM,OACNC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEpB,MAAOA,MAE7BqB,MAAK,SAACC,GAAD,OAAaA,EAAQC,UAC1BF,MAAK,SAACC,GACLf,GAAW,GACXF,EAAciB,MAEfE,OAAM,SAACC,GACNlB,GAAW,GACXmB,MAAM,6CACNC,QAAQC,IAAIH,MApBD,2CAAH,sDAwBd,OACE,gBAAC,IAAD,CAAQ3B,MAAO+B,EAAAA,GAAgBC,YAAaD,EAAAA,IAC1C,uBAAKE,UDtCa,uCCuChB,uBAAKA,UAAWC,GACd,0BAAKH,EAAAA,IACL,yHAES,IACP,8BACE,qBACEI,KAAK,gEACLC,IAAI,aACJC,OAAO,UAHT,iBAUN,uBAAKJ,UDrDQ,oCCsDX,gBAAC,IAAD,CAAQC,MAAO,CAAEI,QAAS9B,EAAU,UAAY,SAAhD,wBACA,uBAAKyB,UDtDG,iCCuDN,wBAAMA,UDtDA,iCCuDJ,uBAAKA,UAAWC,GAAhB,SACA,4BACED,UDxDG,iCCyDHM,MAAOrC,EACPsC,SAAU,SAAC3B,GAAD,OAAOV,EAASU,EAAEwB,OAAOE,WAGvC,uBAAKN,UD5DE,kCC6DL,gBAAC,KAAD,CACEQ,KAAM,CACJC,OAAQ,CAAC,UAAW,SAAU,WAC9BC,SAAU,CACR,CACEC,MAAO,iBACPH,KAAMnC,EAAWD,YACjBwC,gBAAiB,CACf,0BACA,0BACA,8BAKRC,QAAS,CACPC,qBAAqB,EACrBC,UAAW,IACXC,SAAU,CACRC,IAAK,CACHC,YAAa,IAGjBC,YAAY,EACZC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,KAInBC,MAAO,CACL,CACEC,SAAS,MAKjBC,IAAKjD,MAIX,uBAAKuB,UDvGS,uCCwGZ,0BAAQ2B,QAAShD,GAAjB,UACA,0BACEgD,QAAS,SAAC/C,GACRA,EAAEC,iBACFX,EAAS,IACTI,EAAc,CAAEH,MAAO,KAAMyD,MAAO,SAJxC,UAUF,uBAAK5B,UDlHS,uCCmHX3B,EAAWF,MAAX,gBAAmCE,EAAWF,MAAU","sources":["webpack://Hyuto.github.io/./src/pages/showcase/sa-corona/sa-corona.module.scss","webpack://Hyuto.github.io/./src/pages/showcase/sa-corona/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var SADWrapper = \"sa-corona-module--SADWrapper--3u8b8\";\nexport var title = \"sa-corona-module--title--Arwia\";\nexport var content = \"sa-corona-module--content--29CYu\";\nexport var main = \"sa-corona-module--main--HM7X2\";\nexport var form = \"sa-corona-module--form--1-pIV\";\nexport var words = \"sa-corona-module--words--1GMB2\";\nexport var chart = \"sa-corona-module--chart--2eIcY\";\nexport var btnWrapper = \"sa-corona-module--btnWrapper--3C6q6\";\nexport var prediction = \"sa-corona-module--prediction--3eXsf\";","import React, { useState, useRef } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport Layout from \"templates/showcase\";\r\nimport Loader from \"components/loader/loader\";\r\nimport metadata from \"showcase/sa-corona.json\";\r\nimport * as style from \"./sa-corona.module.scss\";\r\n\r\nconst SADetector = () => {\r\n  const [words, setWords] = useState(\"\");\r\n  const [prediction, setPrediction] = useState({ class: null, probability: [0, 0] });\r\n  const [loading, setLoading] = useState(false);\r\n  const chart = useRef(null);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    await fetch(\"https://hyuto-blog.herokuapp.com/sa-corona/\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ words: words }),\r\n    })\r\n      .then((content) => content.json())\r\n      .then((content) => {\r\n        setLoading(false);\r\n        setPrediction(content);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        alert(\"Error : Can't send request to the server.\");\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout title={metadata.title} description={metadata.description}>\r\n      <div className={style.SADWrapper}>\r\n        <div className={style.title}>\r\n          <h2>{metadata.title}</h2>\r\n          <p>\r\n            Sentiment detector using SVM trained with Indonesian twitter dataset on corona focused\r\n            topic.{\" \"}\r\n            <strong>\r\n              <a\r\n                href=\"https://github.com/Hyuto/Analisis-Sentimen-Corona-DKI-Jakarta\"\r\n                rel=\"noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                Repository\r\n              </a>\r\n            </strong>\r\n          </p>\r\n        </div>\r\n        <div className={style.content}>\r\n          <Loader style={{ display: loading ? \"inherit\" : \"none\" }}>Sending to server...</Loader>\r\n          <div className={style.main}>\r\n            <form className={style.form}>\r\n              <div className={style.title}>Words</div>\r\n              <textarea\r\n                className={style.words}\r\n                value={words}\r\n                onChange={(e) => setWords(e.target.value)}\r\n              ></textarea>\r\n            </form>\r\n            <div className={style.chart}>\r\n              <Bar\r\n                data={{\r\n                  labels: [\"Negatif\", \"Netral\", \"Positif\"],\r\n                  datasets: [\r\n                    {\r\n                      label: \"# Probabilitiy\",\r\n                      data: prediction.probability,\r\n                      backgroundColor: [\r\n                        \"rgba(255, 99, 132, 0.2)\",\r\n                        \"rgba(255, 206, 86, 0.2)\",\r\n                        \"rgba(54, 162, 235, 0.2)\",\r\n                      ],\r\n                    },\r\n                  ],\r\n                }}\r\n                options={{\r\n                  maintainAspectRatio: false,\r\n                  indexAxis: \"y\",\r\n                  elements: {\r\n                    bar: {\r\n                      borderWidth: 2,\r\n                    },\r\n                  },\r\n                  responsive: true,\r\n                  scales: {\r\n                    xAxes: [\r\n                      {\r\n                        ticks: {\r\n                          beginAtZero: true,\r\n                        },\r\n                      },\r\n                    ],\r\n                    yAxes: [\r\n                      {\r\n                        stacked: true,\r\n                      },\r\n                    ],\r\n                  },\r\n                }}\r\n                ref={chart}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={style.btnWrapper}>\r\n            <button onClick={onSubmit}>Submit</button>\r\n            <button\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setWords(\"\");\r\n                setPrediction({ class: null, proba: null });\r\n              }}\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n          <div className={style.prediction}>\r\n            {prediction.class ? `Prediction : ${prediction.class}` : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default SADetector;\r\n"],"names":["title","useState","words","setWords","class","probability","prediction","setPrediction","loading","setLoading","chart","useRef","onSubmit","e","preventDefault","fetch","method","mode","headers","Accept","body","JSON","stringify","then","content","json","catch","error","alert","console","log","metadata","description","className","style","href","rel","target","display","value","onChange","data","labels","datasets","label","backgroundColor","options","maintainAspectRatio","indexAxis","elements","bar","borderWidth","responsive","scales","xAxes","ticks","beginAtZero","yAxes","stacked","ref","onClick","proba"],"sourceRoot":""}