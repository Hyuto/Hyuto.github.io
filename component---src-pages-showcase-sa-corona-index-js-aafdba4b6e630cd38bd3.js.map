{"version":3,"file":"component---src-pages-showcase-sa-corona-index-js-aafdba4b6e630cd38bd3.js","mappings":"+VAEWA,EAAQ,iCC8EnB,EA1EmB,WACjB,OAA0BC,EAAAA,EAAAA,UAAS,IAA5BC,EAAP,KAAcC,EAAd,KACA,GAAoCF,EAAAA,EAAAA,UAAS,CAAEG,MAAO,KAAMC,YAAa,OAAlEC,EAAP,KAAmBC,EAAnB,KACA,GAA8BN,EAAAA,EAAAA,WAAS,GAAhCO,EAAP,KAAgBC,EAAhB,KAEMC,EAAQ,mCAAG,WAAMC,GAAN,wEAEfA,EAAEC,iBACFH,GAAW,GAHI,SAITI,MAAM,8CAA+C,CACzDC,OAAQ,OACRC,KAAM,OACNC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAElB,MAAOA,MAE7BmB,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAC,GACJb,GAAW,GACXF,EAAce,MAEfE,OAAM,SAAAC,GACLhB,GAAW,GACXiB,MAAM,6CACNC,QAAQC,IAAIH,MArBD,2CAAH,sDAyBd,OACE,gBAAC,IAAD,CAAQzB,MAAO6B,EAAAA,GAAgBC,YAAaD,EAAAA,IAC1C,uBAAKE,UDrCa,uCCsChB,uBAAKA,UAAWC,GACd,0BAAKH,EAAAA,IACL,yHAES,IACP,8BACE,qBAAGI,KAAK,iEAAR,iBAIN,uBAAKF,UD9CQ,oCC+CX,gBAAC,IAAD,CAAQC,MAAO,CAAEE,QAAS1B,EAAU,UAAY,SAAhD,wBACA,wBAAME,SAAUA,GACd,uBAAKqB,UAAWC,GAAhB,SACA,4BACED,UDlDK,iCCmDLI,MAAOjC,EACPkC,SAAU,SAAAzB,GAAC,OAAIR,EAASQ,EAAE0B,OAAOF,UAEnC,uBAAKJ,UDrDO,uCCsDV,yBAAOO,KAAK,SAASH,MAAM,WAC3B,0BACEI,QAAS,SAAA5B,GACPA,EAAEC,iBACFT,EAAS,IACTI,EAAc,CAAEH,MAAO,KAAMoC,MAAO,SAJxC,WAWJ,uBAAKT,UDjES,uCCkEXzB,EAAWF,MAAX,gBAAmCE,EAAWF,MAAU","sources":["webpack://Hyuto.github.io/./src/pages/showcase/sa-corona/sa-corona.module.scss","webpack://Hyuto.github.io/./src/pages/showcase/sa-corona/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var SADWrapper = \"sa-corona-module--SADWrapper--3u8b8\";\nexport var title = \"sa-corona-module--title--Arwia\";\nexport var content = \"sa-corona-module--content--29CYu\";\nexport var words = \"sa-corona-module--words--1GMB2\";\nexport var btnWrapper = \"sa-corona-module--btnWrapper--3C6q6\";\nexport var prediction = \"sa-corona-module--prediction--3eXsf\";","import React, { useState } from \"react\";\nimport Layout from \"templates/showcase\";\nimport Loader from \"components/loader/loader\";\nimport metadata from \"showcase/sa-corona.json\";\nimport * as style from \"./sa-corona.module.scss\";\n\nconst SADetector = () => {\n  const [words, setWords] = useState(\"\");\n  const [prediction, setPrediction] = useState({ class: null, probability: null });\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = async e => {\n    // Change to https://hyuto-blog.herokuapp.com/sa-corona/ for deployment\n    e.preventDefault();\n    setLoading(true);\n    await fetch(\"https://hyuto-blog.herokuapp.com/sa-corona/\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ words: words }),\n    })\n      .then(content => content.json())\n      .then(content => {\n        setLoading(false);\n        setPrediction(content);\n      })\n      .catch(error => {\n        setLoading(false);\n        alert(\"Error : Can't send request to the server.\");\n        console.log(error);\n      });\n  };\n\n  return (\n    <Layout title={metadata.title} description={metadata.description}>\n      <div className={style.SADWrapper}>\n        <div className={style.title}>\n          <h2>{metadata.title}</h2>\n          <p>\n            Sentiment detector using SVM trained with Indonesian twitter dataset on corona focused\n            topic.{\" \"}\n            <strong>\n              <a href=\"https://github.com/Hyuto/Analisis-Sentimen-Corona-DKI-Jakarta\">Repository</a>\n            </strong>\n          </p>\n        </div>\n        <div className={style.content}>\n          <Loader style={{ display: loading ? \"inherit\" : \"none\" }}>Sending to server...</Loader>\n          <form onSubmit={onSubmit}>\n            <div className={style.title}>Words</div>\n            <textarea\n              className={style.words}\n              value={words}\n              onChange={e => setWords(e.target.value)}\n            ></textarea>\n            <div className={style.btnWrapper}>\n              <input type=\"submit\" value=\"Submit\" />\n              <button\n                onClick={e => {\n                  e.preventDefault();\n                  setWords(\"\");\n                  setPrediction({ class: null, proba: null });\n                }}\n              >\n                Reset\n              </button>\n            </div>\n          </form>\n          <div className={style.prediction}>\n            {prediction.class ? `Prediction : ${prediction.class}` : null}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default SADetector;\n"],"names":["title","useState","words","setWords","class","probability","prediction","setPrediction","loading","setLoading","onSubmit","e","preventDefault","fetch","method","mode","headers","Accept","body","JSON","stringify","then","content","json","catch","error","alert","console","log","metadata","description","className","style","href","display","value","onChange","target","type","onClick","proba"],"sourceRoot":""}